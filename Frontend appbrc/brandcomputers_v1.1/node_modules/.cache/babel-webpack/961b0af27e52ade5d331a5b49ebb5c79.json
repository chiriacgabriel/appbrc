{"ast":null,"code":"import _classCallCheck from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { LoadingBarService, LoadingBarModule } from '@ngx-loading-bar/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { tap, finalize } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@ngx-loading-bar/core';\n\nvar LoadingBarInterceptor = /*#__PURE__*/function () {\n  function LoadingBarInterceptor(loader) {\n    _classCallCheck(this, LoadingBarInterceptor);\n\n    this.loader = loader;\n  }\n\n  _createClass(LoadingBarInterceptor, [{\n    key: \"intercept\",\n    value: function intercept(req, next) {\n      // https://github.com/angular/angular/issues/18155\n      if (req.headers.has('ignoreLoadingBar')) {\n        return next.handle(req.clone({\n          headers: req.headers.delete('ignoreLoadingBar')\n        }));\n      }\n\n      var started = false;\n      var ref = this.loader.useRef('http');\n      return next.handle(req).pipe(tap(function () {\n        if (!started) {\n          ref.start();\n          started = true;\n        }\n      }), finalize(function () {\n        return started && ref.complete();\n      }));\n    }\n  }]);\n\n  return LoadingBarInterceptor;\n}();\n\nLoadingBarInterceptor.ɵfac = function LoadingBarInterceptor_Factory(t) {\n  return new (t || LoadingBarInterceptor)(ɵngcc0.ɵɵinject(ɵngcc1.LoadingBarService));\n};\n\nLoadingBarInterceptor.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: LoadingBarInterceptor,\n  factory: function factory(t) {\n    return LoadingBarInterceptor.ɵfac(t);\n  }\n});\n\nLoadingBarInterceptor.ctorParameters = function () {\n  return [{\n    type: LoadingBarService\n  }];\n};\n\nLoadingBarInterceptor = __decorate([__metadata(\"design:paramtypes\", [LoadingBarService])], LoadingBarInterceptor);\n\nvar LoadingBarHttpClientModule = function LoadingBarHttpClientModule() {\n  _classCallCheck(this, LoadingBarHttpClientModule);\n};\n\nLoadingBarHttpClientModule.ɵfac = function LoadingBarHttpClientModule_Factory(t) {\n  return new (t || LoadingBarHttpClientModule)();\n};\n\nLoadingBarHttpClientModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: LoadingBarHttpClientModule\n});\nLoadingBarHttpClientModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: LoadingBarInterceptor,\n    multi: true\n  }],\n  imports: [[HttpClientModule, LoadingBarModule], HttpClientModule, LoadingBarModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc1.LoadingBarService\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarHttpClientModule, [{\n    type: NgModule,\n    args: [{\n      imports: [HttpClientModule, LoadingBarModule],\n      exports: [HttpClientModule, LoadingBarModule],\n      providers: [{\n        provide: HTTP_INTERCEPTORS,\n        useClass: LoadingBarInterceptor,\n        multi: true\n      }]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarHttpClientModule, {\n    imports: function imports() {\n      return [HttpClientModule, LoadingBarModule];\n    },\n    exports: function exports() {\n      return [HttpClientModule, LoadingBarModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { LoadingBarHttpClientModule, LoadingBarInterceptor as ɵa }; //# sourceMappingURL=ngx-loading-bar-http-client.js.map","map":{"version":3,"sources":["D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@ngx-loading-bar/http-client/__ivy_ngcc__/fesm2015/ngx-loading-bar-http-client.js"],"names":["__decorate","__metadata","LoadingBarService","LoadingBarModule","Injectable","NgModule","HttpClientModule","HTTP_INTERCEPTORS","tap","finalize","ɵngcc0","ɵngcc1","LoadingBarInterceptor","loader","req","next","headers","has","handle","clone","delete","started","ref","useRef","pipe","start","complete","ɵfac","LoadingBarInterceptor_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","ctorParameters","type","LoadingBarHttpClientModule","LoadingBarHttpClientModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","provide","useClass","multi","imports","ngDevMode","ɵsetClassMetadata","args","exports","ngJitMode","ɵɵsetNgModuleScope","ɵa"],"mappings":"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","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { LoadingBarService, LoadingBarModule } from '@ngx-loading-bar/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { tap, finalize } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@ngx-loading-bar/core';\nlet LoadingBarInterceptor = class LoadingBarInterceptor {\n    constructor(loader) {\n        this.loader = loader;\n    }\n    intercept(req, next) {\n        // https://github.com/angular/angular/issues/18155\n        if (req.headers.has('ignoreLoadingBar')) {\n            return next.handle(req.clone({ headers: req.headers.delete('ignoreLoadingBar') }));\n        }\n        let started = false;\n        const ref = this.loader.useRef('http');\n        return next.handle(req).pipe(tap(() => {\n            if (!started) {\n                ref.start();\n                started = true;\n            }\n        }), finalize(() => started && ref.complete()));\n    }\n};\nLoadingBarInterceptor.ɵfac = function LoadingBarInterceptor_Factory(t) { return new (t || LoadingBarInterceptor)(ɵngcc0.ɵɵinject(ɵngcc1.LoadingBarService)); };\nLoadingBarInterceptor.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LoadingBarInterceptor, factory: function (t) { return LoadingBarInterceptor.ɵfac(t); } });\nLoadingBarInterceptor.ctorParameters = () => [\n    { type: LoadingBarService }\n];\nLoadingBarInterceptor = __decorate([ __metadata(\"design:paramtypes\", [LoadingBarService])\n], LoadingBarInterceptor);\n\nlet LoadingBarHttpClientModule = class LoadingBarHttpClientModule {\n};\nLoadingBarHttpClientModule.ɵfac = function LoadingBarHttpClientModule_Factory(t) { return new (t || LoadingBarHttpClientModule)(); };\nLoadingBarHttpClientModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: LoadingBarHttpClientModule });\nLoadingBarHttpClientModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: LoadingBarInterceptor,\n            multi: true\n        },\n    ], imports: [[HttpClientModule, LoadingBarModule], HttpClientModule, LoadingBarModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.LoadingBarService }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarHttpClientModule, [{\n        type: NgModule,\n        args: [{\n                imports: [HttpClientModule, LoadingBarModule],\n                exports: [HttpClientModule, LoadingBarModule],\n                providers: [\n                    {\n                        provide: HTTP_INTERCEPTORS,\n                        useClass: LoadingBarInterceptor,\n                        multi: true\n                    },\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarHttpClientModule, { imports: function () { return [HttpClientModule, LoadingBarModule]; }, exports: function () { return [HttpClientModule, LoadingBarModule]; } }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoadingBarHttpClientModule, LoadingBarInterceptor as ɵa };\n\n//# sourceMappingURL=ngx-loading-bar-http-client.js.map"]},"metadata":{},"sourceType":"module"}