{"ast":null,"code":"import _toConsumableArray from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __param, __metadata } from 'tslib';\nimport { InjectionToken, Inject, PLATFORM_ID, Optional, NgZone, ɵɵdefineInjectable, ɵɵinject, Injectable, Input, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { Subject, of, timer, combineLatest, Observable } from 'rxjs';\nimport { take, map, tap, startWith, switchMap, shareReplay } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction LoadingBarComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r2.diameter)(\"height\", ctx_r2.diameter);\n  }\n}\n\nfunction LoadingBarComponent_ng_container_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n  }\n\n  if (rf & 2) {\n    var progress_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"background\", ctx_r3.color)(\"height\", ctx_r3.height)(\"width\", progress_r1 + \"%\");\n  }\n}\n\nfunction LoadingBarComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, LoadingBarComponent_ng_container_0_div_1_Template, 2, 4, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(2, LoadingBarComponent_ng_container_0_div_2_Template, 1, 6, \"div\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.includeSpinner);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.includeBar);\n  }\n}\n\nvar LoadingBarState = /*#__PURE__*/function () {\n  function LoadingBarState() {\n    var _this = this;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, LoadingBarState);\n\n    this.config = config;\n    this.state = {\n      action: null,\n      value: 0,\n      initialValue: 0\n    };\n    this.requests = null;\n    this.disabled = false;\n    this.stream$ = new Subject();\n    this._value$ = null;\n\n    this.timer$ = function (s) {\n      var state$ = of(s);\n\n      switch (s.action) {\n        case 'start':\n        case 'increment':\n        case 'set':\n          {\n            if (s.action === 'start' && _this.config.latencyThreshold === 0 && s.value === 0) {\n              s.value = s.initialValue;\n            }\n\n            if (_this.requests > 0) {\n              state$ = timer(_this.config.latencyThreshold, 250).pipe(map(function (t) {\n                return Object.assign(Object.assign({}, s), {\n                  value: t === 0 ? _this.state.value || s.initialValue : _this._increment()\n                });\n              }));\n            }\n\n            break;\n          }\n\n        case 'complete':\n        case 'stop':\n          {\n            // Attempt to aggregate any start/complete calls within 500ms:\n            state$ = s.value === 0 ? of(Object.assign({}, s)) : timer(0, 500).pipe(take(2), map(function (t) {\n              return {\n                value: t === 0 ? 100 : 0\n              };\n            }));\n            break;\n          }\n      }\n\n      return state$.pipe(map(function (next) {\n        return Object.assign(Object.assign({}, next), {\n          action: 'set'\n        });\n      }), tap(function (next) {\n        return _this.next(next, false);\n      }));\n    };\n\n    this.config = Object.assign({\n      latencyThreshold: 0\n    }, config);\n  }\n\n  _createClass(LoadingBarState, [{\n    key: \"value$\",\n    get: function get() {\n      var _this2 = this;\n\n      if (this._value$) {\n        return this._value$;\n      }\n\n      return this._value$ = this.stream$.asObservable().pipe(startWith(this.state), switchMap(function (s) {\n        return _this2.timer$(s);\n      }), shareReplay(), map(function (s) {\n        return s.value;\n      }));\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n\n      if (this.disabled) {\n        return;\n      }\n\n      this.next({\n        action: 'start',\n        initialValue: initialValue\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.next({\n        action: 'stop'\n      });\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      this.next({\n        action: 'complete'\n      });\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.disabled = true;\n    }\n  }, {\n    key: \"set\",\n    value: function set(value) {\n      this.next({\n        action: 'set',\n        value: value\n      });\n    }\n  }, {\n    key: \"increment\",\n    value: function increment() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.next({\n        action: 'increment',\n        value: value\n      });\n    }\n  }, {\n    key: \"next\",\n    value: function next(state) {\n      var emitEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      switch (state.action) {\n        case 'start':\n          this.requests = (this.requests || 0) + 1;\n          break;\n\n        case 'complete':\n          this.requests = (this.requests || 1) - 1;\n\n          if (this.requests > 0) {\n            return;\n          }\n\n          break;\n\n        case 'stop':\n          this.requests = 0;\n          break;\n\n        case 'increment':\n          state.value = this._increment(state.value);\n          break;\n      }\n\n      this.state = Object.assign(Object.assign(Object.assign({}, this.state), {\n        action: null\n      }), state);\n\n      if (emitEvent) {\n        this.stream$.next(this.state);\n      }\n    }\n  }, {\n    key: \"_increment\",\n    value: function _increment() {\n      var rnd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var stat = this.state.value;\n\n      if (stat >= 99) {\n        rnd = 0;\n      }\n\n      if (rnd === 0) {\n        if (stat >= 0 && stat < 25) {\n          // Start out between 3 - 6% increments\n          rnd = Math.random() * (5 - 3 + 1) + 3;\n        } else if (stat >= 25 && stat < 65) {\n          // increment between 0 - 3%\n          rnd = Math.random() * 3;\n        } else if (stat >= 65 && stat < 90) {\n          // increment between 0 - 2%\n          rnd = Math.random() * 2;\n        } else if (stat >= 90 && stat < 99) {\n          // finally, increment it .5 %\n          rnd = 0.5;\n        } else {\n          // after 99%, don't increment:\n          rnd = 0;\n        }\n      }\n\n      return rnd + stat;\n    }\n  }]);\n\n  return LoadingBarState;\n}();\n\nvar LOADING_BAR_CONFIG = new InjectionToken('LOADING_BAR_CONFIG');\n\nvar LoadingBarService = /*#__PURE__*/function () {\n  function LoadingBarService(platformId) {\n    var _this3 = this;\n\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var zone = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, LoadingBarService);\n\n    this.platformId = platformId;\n    this.config = config;\n    this.zone = zone;\n    this.refs = {};\n    this.streams$ = new Subject();\n    this.value$ = this.streams$.asObservable().pipe(startWith(null), switchMap(function () {\n      return combineLatest.apply(void 0, _toConsumableArray(Object.keys(_this3.refs).map(function (s) {\n        return _this3.refs[s].value$;\n      })));\n    }), runInZone(this.zone), map(function (v) {\n      return Math.max.apply(Math, [0].concat(_toConsumableArray(v)));\n    }));\n  }\n  /** @deprecated use `value$` instead. */\n\n\n  _createClass(LoadingBarService, [{\n    key: \"progress$\",\n    get: function get() {\n      return this.value$;\n    }\n    /** @deprecated use `useRef` instead. */\n\n  }, {\n    key: \"start\",\n    value: function start() {\n      var initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      this.useRef().start(initialValue);\n    }\n    /** @deprecated use `useRef` instead. */\n\n  }, {\n    key: \"set\",\n    value: function set(value) {\n      this.useRef().set(value);\n    }\n    /** @deprecated use `useRef` instead. */\n\n  }, {\n    key: \"increment\",\n    value: function increment(value) {\n      this.useRef().increment(value);\n    }\n    /** @deprecated use `useRef` instead. */\n\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      this.useRef().complete();\n    }\n    /** @deprecated use `useRef` instead. */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.useRef().stop();\n    }\n  }, {\n    key: \"useRef\",\n    value: function useRef() {\n      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n\n      if (!this.refs[id]) {\n        this.refs[id] = new LoadingBarState(this.config);\n        this.streams$.next();\n\n        if (!isPlatformBrowser(this.platformId)) {\n          this.refs[id].disable();\n        }\n      }\n\n      return this.refs[id];\n    }\n  }]);\n\n  return LoadingBarService;\n}();\n\nLoadingBarService.ɵfac = function LoadingBarService_Factory(t) {\n  return new (t || LoadingBarService)(ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(LOADING_BAR_CONFIG, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone, 8));\n};\n\nLoadingBarService.ctorParameters = function () {\n  return [{\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [LOADING_BAR_CONFIG]\n    }]\n  }, {\n    type: NgZone,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nLoadingBarService.ɵprov = ɵɵdefineInjectable({\n  factory: function LoadingBarService_Factory() {\n    return new LoadingBarService(ɵɵinject(PLATFORM_ID), ɵɵinject(LOADING_BAR_CONFIG, 8), ɵɵinject(NgZone, 8));\n  },\n  token: LoadingBarService,\n  providedIn: \"root\"\n});\nLoadingBarService = __decorate([__param(0, Inject(PLATFORM_ID)), __param(1, Optional()), __param(1, Inject(LOADING_BAR_CONFIG)), __param(2, Optional()), __metadata(\"design:paramtypes\", [Object, Object, NgZone])], LoadingBarService); // https://stackoverflow.com/a/57452361/1406096\n\nfunction runInZone(zone) {\n  if (!zone) {\n    return function (source) {\n      return source;\n    };\n  }\n\n  return function (source) {\n    return new Observable(function (observer) {\n      return source.subscribe(function (value) {\n        return zone.run(function () {\n          return observer.next(value);\n        });\n      }, function (e) {\n        return zone.run(function () {\n          return observer.error(e);\n        });\n      }, function () {\n        return zone.run(function () {\n          return observer.complete();\n        });\n      });\n    });\n  };\n}\n\nvar LoadingBarComponent = /*#__PURE__*/function () {\n  function LoadingBarComponent(loader) {\n    _classCallCheck(this, LoadingBarComponent);\n\n    this.loader = loader;\n    this.includeSpinner = true;\n    this.includeBar = true;\n    this.fixed = true;\n    this.color = '#29d';\n  }\n\n  _createClass(LoadingBarComponent, [{\n    key: \"value$\",\n    get: function get() {\n      return this.ref ? this.loader.useRef(this.ref).value$ : this.loader.value$;\n    }\n  }]);\n\n  return LoadingBarComponent;\n}();\n\nLoadingBarComponent.ɵfac = function LoadingBarComponent_Factory(t) {\n  return new (t || LoadingBarComponent)(ɵngcc0.ɵɵdirectiveInject(LoadingBarService));\n};\n\nLoadingBarComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: LoadingBarComponent,\n  selectors: [[\"ngx-loading-bar\"]],\n  hostVars: 3,\n  hostBindings: function LoadingBarComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"fixed\", ctx.fixed);\n      ɵngcc0.ɵɵstyleProp(\"color\", ctx.color);\n    }\n  },\n  inputs: {\n    includeSpinner: \"includeSpinner\",\n    includeBar: \"includeBar\",\n    fixed: \"fixed\",\n    color: \"color\",\n    value: \"value\",\n    ref: \"ref\",\n    height: \"height\",\n    diameter: \"diameter\"\n  },\n  decls: 2,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [\"class\", \"ngx-spinner\", 4, \"ngIf\"], [\"class\", \"ngx-bar\", 3, \"background\", \"height\", \"width\", 4, \"ngIf\"], [1, \"ngx-spinner\"], [1, \"ngx-spinner-icon\"], [1, \"ngx-bar\"]],\n  template: function LoadingBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, LoadingBarComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n      ɵngcc0.ɵɵpipe(1, \"async\");\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.value != null ? ctx.value : ɵngcc0.ɵɵpipeBind1(1, 1, ctx.value$));\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  pipes: [ɵngcc1.AsyncPipe],\n  styles: [\"[_nghost-%COMP%]{position:relative;display:block;pointer-events:none}[_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{transition:350ms linear;display:block;position:absolute;top:5px;left:0}[_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]   .ngx-spinner-icon[_ngcontent-%COMP%]{width:14px;height:14px;border:2px solid transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;-webkit-animation:.4s linear infinite loading-bar-spinner;animation:.4s linear infinite loading-bar-spinner}[_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{transition:width 350ms;position:absolute;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl]   [_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{right:0;left:unset}[fixed=true][_nghost-%COMP%]{z-index:10002}[fixed=true][_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{position:fixed}[fixed=true][_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{position:fixed;top:10px;left:10px}[dir=rtl]   [fixed=true][_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{right:10px;left:unset}@-webkit-keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}\"],\n  changeDetection: 0\n});\n\nLoadingBarComponent.ctorParameters = function () {\n  return [{\n    type: LoadingBarService\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Object)], LoadingBarComponent.prototype, \"includeSpinner\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], LoadingBarComponent.prototype, \"includeBar\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], LoadingBarComponent.prototype, \"fixed\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], LoadingBarComponent.prototype, \"color\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], LoadingBarComponent.prototype, \"value\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], LoadingBarComponent.prototype, \"ref\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], LoadingBarComponent.prototype, \"height\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], LoadingBarComponent.prototype, \"diameter\", void 0);\n\nLoadingBarComponent = __decorate([__metadata(\"design:paramtypes\", [LoadingBarService])], LoadingBarComponent);\n\nvar LoadingBarModule = function LoadingBarModule() {\n  _classCallCheck(this, LoadingBarModule);\n};\n\nLoadingBarModule.ɵfac = function LoadingBarModule_Factory(t) {\n  return new (t || LoadingBarModule)();\n};\n\nLoadingBarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: LoadingBarModule\n});\nLoadingBarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [LOADING_BAR_CONFIG]\n      }]\n    }, {\n      type: ɵngcc0.NgZone,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-loading-bar',\n      template: \"\\n    <ng-container *ngIf=\\\"value != null ? value : (value$ | async) as progress\\\">\\n      <div *ngIf=\\\"includeSpinner\\\" class=\\\"ngx-spinner\\\">\\n        <div [style.width]=\\\"diameter\\\" [style.height]=\\\"diameter\\\" class=\\\"ngx-spinner-icon\\\"></div>\\n      </div>\\n      <div\\n        *ngIf=\\\"includeBar\\\"\\n        class=\\\"ngx-bar\\\"\\n        [style.background]=\\\"color\\\"\\n        [style.height]=\\\"height\\\"\\n        [style.width]=\\\"progress + '%'\\\"\\n      ></div>\\n    </ng-container>\\n  \",\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.Emulated,\n      host: {\n        '[attr.fixed]': 'fixed',\n        '[style.color]': 'color'\n      },\n      styles: [\":host{position:relative;display:block;pointer-events:none}:host .ngx-spinner{transition:350ms linear;display:block;position:absolute;top:5px;left:0}:host .ngx-spinner .ngx-spinner-icon{width:14px;height:14px;border:2px solid transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;-webkit-animation:.4s linear infinite loading-bar-spinner;animation:.4s linear infinite loading-bar-spinner}:host .ngx-bar{transition:width 350ms;position:absolute;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl] :host .ngx-bar{right:0;left:unset}:host[fixed=true]{z-index:10002}:host[fixed=true] .ngx-bar{position:fixed}:host[fixed=true] .ngx-spinner{position:fixed;top:10px;left:10px}[dir=rtl] :host[fixed=true] .ngx-spinner{right:10px;left:unset}@-webkit-keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}\"]\n    }]\n  }], function () {\n    return [{\n      type: LoadingBarService\n    }];\n  }, {\n    includeSpinner: [{\n      type: Input\n    }],\n    includeBar: [{\n      type: Input\n    }],\n    fixed: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    ref: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    diameter: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [LoadingBarComponent],\n      exports: [LoadingBarComponent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarModule, {\n    declarations: function declarations() {\n      return [LoadingBarComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [LoadingBarComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { LOADING_BAR_CONFIG, LoadingBarComponent, LoadingBarModule, LoadingBarService }; //# sourceMappingURL=ngx-loading-bar-core.js.map","map":{"version":3,"sources":["D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@ngx-loading-bar/core/__ivy_ngcc__/fesm2015/ngx-loading-bar-core.js"],"names":["__decorate","__param","__metadata","InjectionToken","Inject","PLATFORM_ID","Optional","NgZone","ɵɵdefineInjectable","ɵɵinject","Injectable","Input","Component","ChangeDetectionStrategy","ViewEncapsulation","NgModule","isPlatformBrowser","CommonModule","Subject","of","timer","combineLatest","Observable","take","map","tap","startWith","switchMap","shareReplay","ɵngcc0","ɵngcc1","LoadingBarComponent_ng_container_0_div_1_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ctx_r2","ɵɵnextContext","ɵɵadvance","ɵɵstyleProp","diameter","LoadingBarComponent_ng_container_0_div_2_Template","progress_r1","ngIf","ctx_r3","color","height","LoadingBarComponent_ng_container_0_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ctx_r0","ɵɵproperty","includeSpinner","includeBar","LoadingBarState","config","state","action","value","initialValue","requests","disabled","stream$","_value$","timer$","s","state$","latencyThreshold","pipe","t","Object","assign","_increment","next","asObservable","emitEvent","rnd","stat","Math","random","LOADING_BAR_CONFIG","LoadingBarService","platformId","zone","refs","streams$","value$","keys","runInZone","v","max","useRef","start","set","increment","complete","stop","id","disable","ɵfac","LoadingBarService_Factory","ctorParameters","type","decorators","args","undefined","ɵprov","factory","token","providedIn","source","observer","subscribe","run","e","error","LoadingBarComponent","loader","fixed","ref","LoadingBarComponent_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","hostVars","hostBindings","LoadingBarComponent_HostBindings","ɵɵattribute","inputs","decls","vars","consts","template","LoadingBarComponent_Template","ɵɵpipe","ɵɵpipeBind1","directives","NgIf","pipes","AsyncPipe","styles","changeDetection","prototype","Number","String","LoadingBarModule","LoadingBarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngDevMode","ɵsetClassMetadata","selector","preserveWhitespaces","OnPush","encapsulation","Emulated","host","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["import { __decorate, __param, __metadata } from 'tslib';\nimport { InjectionToken, Inject, PLATFORM_ID, Optional, NgZone, ɵɵdefineInjectable, ɵɵinject, Injectable, Input, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { Subject, of, timer, combineLatest, Observable } from 'rxjs';\nimport { take, map, tap, startWith, switchMap, shareReplay } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction LoadingBarComponent_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r2.diameter)(\"height\", ctx_r2.diameter);\n} }\nfunction LoadingBarComponent_ng_container_0_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n} if (rf & 2) {\n    const progress_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"background\", ctx_r3.color)(\"height\", ctx_r3.height)(\"width\", progress_r1 + \"%\");\n} }\nfunction LoadingBarComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, LoadingBarComponent_ng_container_0_div_1_Template, 2, 4, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(2, LoadingBarComponent_ng_container_0_div_2_Template, 1, 6, \"div\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.includeSpinner);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.includeBar);\n} }\nclass LoadingBarState {\n    constructor(config = {}) {\n        this.config = config;\n        this.state = {\n            action: null,\n            value: 0,\n            initialValue: 0,\n        };\n        this.requests = null;\n        this.disabled = false;\n        this.stream$ = new Subject();\n        this._value$ = null;\n        this.timer$ = (s) => {\n            let state$ = of(s);\n            switch (s.action) {\n                case 'start':\n                case 'increment':\n                case 'set': {\n                    if (s.action === 'start' && this.config.latencyThreshold === 0 && s.value === 0) {\n                        s.value = s.initialValue;\n                    }\n                    if (this.requests > 0) {\n                        state$ = timer(this.config.latencyThreshold, 250).pipe(map((t) => (Object.assign(Object.assign({}, s), { value: t === 0 ? this.state.value || s.initialValue : this._increment() }))));\n                    }\n                    break;\n                }\n                case 'complete':\n                case 'stop': {\n                    // Attempt to aggregate any start/complete calls within 500ms:\n                    state$ =\n                        s.value === 0\n                            ? of(Object.assign({}, s))\n                            : timer(0, 500).pipe(take(2), map((t) => ({ value: t === 0 ? 100 : 0 })));\n                    break;\n                }\n            }\n            return state$.pipe(map((next) => (Object.assign(Object.assign({}, next), { action: 'set' }))), tap((next) => this.next(next, false)));\n        };\n        this.config = Object.assign({ latencyThreshold: 0 }, config);\n    }\n    get value$() {\n        if (this._value$) {\n            return this._value$;\n        }\n        return (this._value$ = this.stream$.asObservable().pipe(startWith(this.state), switchMap((s) => this.timer$(s)), shareReplay(), map((s) => s.value)));\n    }\n    start(initialValue = 2) {\n        if (this.disabled) {\n            return;\n        }\n        this.next({ action: 'start', initialValue });\n    }\n    stop() {\n        this.next({ action: 'stop' });\n    }\n    complete() {\n        this.next({ action: 'complete' });\n    }\n    disable() {\n        this.disabled = true;\n    }\n    set(value) {\n        this.next({ action: 'set', value });\n    }\n    increment(value = 0) {\n        this.next({ action: 'increment', value });\n    }\n    next(state, emitEvent = true) {\n        switch (state.action) {\n            case 'start':\n                this.requests = (this.requests || 0) + 1;\n                break;\n            case 'complete':\n                this.requests = (this.requests || 1) - 1;\n                if (this.requests > 0) {\n                    return;\n                }\n                break;\n            case 'stop':\n                this.requests = 0;\n                break;\n            case 'increment':\n                state.value = this._increment(state.value);\n                break;\n        }\n        this.state = Object.assign(Object.assign(Object.assign({}, this.state), { action: null }), state);\n        if (emitEvent) {\n            this.stream$.next(this.state);\n        }\n    }\n    _increment(rnd = 0) {\n        const stat = this.state.value;\n        if (stat >= 99) {\n            rnd = 0;\n        }\n        if (rnd === 0) {\n            if (stat >= 0 && stat < 25) {\n                // Start out between 3 - 6% increments\n                rnd = Math.random() * (5 - 3 + 1) + 3;\n            }\n            else if (stat >= 25 && stat < 65) {\n                // increment between 0 - 3%\n                rnd = Math.random() * 3;\n            }\n            else if (stat >= 65 && stat < 90) {\n                // increment between 0 - 2%\n                rnd = Math.random() * 2;\n            }\n            else if (stat >= 90 && stat < 99) {\n                // finally, increment it .5 %\n                rnd = 0.5;\n            }\n            else {\n                // after 99%, don't increment:\n                rnd = 0;\n            }\n        }\n        return rnd + stat;\n    }\n}\n\nconst LOADING_BAR_CONFIG = new InjectionToken('LOADING_BAR_CONFIG');\n\nlet LoadingBarService = class LoadingBarService {\n    constructor(platformId, config = {}, zone) {\n        this.platformId = platformId;\n        this.config = config;\n        this.zone = zone;\n        this.refs = {};\n        this.streams$ = new Subject();\n        this.value$ = this.streams$.asObservable().pipe(startWith(null), switchMap(() => combineLatest(...Object.keys(this.refs).map((s) => this.refs[s].value$))), runInZone(this.zone), map((v) => Math.max(0, ...v)));\n    }\n    /** @deprecated use `value$` instead. */\n    get progress$() {\n        return this.value$;\n    }\n    /** @deprecated use `useRef` instead. */\n    start(initialValue = 2) {\n        this.useRef().start(initialValue);\n    }\n    /** @deprecated use `useRef` instead. */\n    set(value) {\n        this.useRef().set(value);\n    }\n    /** @deprecated use `useRef` instead. */\n    increment(value) {\n        this.useRef().increment(value);\n    }\n    /** @deprecated use `useRef` instead. */\n    complete() {\n        this.useRef().complete();\n    }\n    /** @deprecated use `useRef` instead. */\n    stop() {\n        this.useRef().stop();\n    }\n    useRef(id = 'default') {\n        if (!this.refs[id]) {\n            this.refs[id] = new LoadingBarState(this.config);\n            this.streams$.next();\n            if (!isPlatformBrowser(this.platformId)) {\n                this.refs[id].disable();\n            }\n        }\n        return this.refs[id];\n    }\n};\nLoadingBarService.ɵfac = function LoadingBarService_Factory(t) { return new (t || LoadingBarService)(ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(LOADING_BAR_CONFIG, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone, 8)); };\nLoadingBarService.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LOADING_BAR_CONFIG,] }] },\n    { type: NgZone, decorators: [{ type: Optional }] }\n];\nLoadingBarService.ɵprov = ɵɵdefineInjectable({ factory: function LoadingBarService_Factory() { return new LoadingBarService(ɵɵinject(PLATFORM_ID), ɵɵinject(LOADING_BAR_CONFIG, 8), ɵɵinject(NgZone, 8)); }, token: LoadingBarService, providedIn: \"root\" });\nLoadingBarService = __decorate([ __param(0, Inject(PLATFORM_ID)),\n    __param(1, Optional()), __param(1, Inject(LOADING_BAR_CONFIG)),\n    __param(2, Optional()),\n    __metadata(\"design:paramtypes\", [Object, Object, NgZone])\n], LoadingBarService);\n// https://stackoverflow.com/a/57452361/1406096\nfunction runInZone(zone) {\n    if (!zone) {\n        return (source) => source;\n    }\n    return (source) => new Observable((observer) => source.subscribe((value) => zone.run(() => observer.next(value)), (e) => zone.run(() => observer.error(e)), () => zone.run(() => observer.complete())));\n}\n\nlet LoadingBarComponent = class LoadingBarComponent {\n    constructor(loader) {\n        this.loader = loader;\n        this.includeSpinner = true;\n        this.includeBar = true;\n        this.fixed = true;\n        this.color = '#29d';\n    }\n    get value$() {\n        return this.ref ? this.loader.useRef(this.ref).value$ : this.loader.value$;\n    }\n};\nLoadingBarComponent.ɵfac = function LoadingBarComponent_Factory(t) { return new (t || LoadingBarComponent)(ɵngcc0.ɵɵdirectiveInject(LoadingBarService)); };\nLoadingBarComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: LoadingBarComponent, selectors: [[\"ngx-loading-bar\"]], hostVars: 3, hostBindings: function LoadingBarComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"fixed\", ctx.fixed);\n        ɵngcc0.ɵɵstyleProp(\"color\", ctx.color);\n    } }, inputs: { includeSpinner: \"includeSpinner\", includeBar: \"includeBar\", fixed: \"fixed\", color: \"color\", value: \"value\", ref: \"ref\", height: \"height\", diameter: \"diameter\" }, decls: 2, vars: 3, consts: [[4, \"ngIf\"], [\"class\", \"ngx-spinner\", 4, \"ngIf\"], [\"class\", \"ngx-bar\", 3, \"background\", \"height\", \"width\", 4, \"ngIf\"], [1, \"ngx-spinner\"], [1, \"ngx-spinner-icon\"], [1, \"ngx-bar\"]], template: function LoadingBarComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, LoadingBarComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.value != null ? ctx.value : ɵngcc0.ɵɵpipeBind1(1, 1, ctx.value$));\n    } }, directives: [ɵngcc1.NgIf], pipes: [ɵngcc1.AsyncPipe], styles: [\"[_nghost-%COMP%]{position:relative;display:block;pointer-events:none}[_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{transition:350ms linear;display:block;position:absolute;top:5px;left:0}[_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]   .ngx-spinner-icon[_ngcontent-%COMP%]{width:14px;height:14px;border:2px solid transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;-webkit-animation:.4s linear infinite loading-bar-spinner;animation:.4s linear infinite loading-bar-spinner}[_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{transition:width 350ms;position:absolute;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl]   [_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{right:0;left:unset}[fixed=true][_nghost-%COMP%]{z-index:10002}[fixed=true][_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{position:fixed}[fixed=true][_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{position:fixed;top:10px;left:10px}[dir=rtl]   [fixed=true][_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{right:10px;left:unset}@-webkit-keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}\"], changeDetection: 0 });\nLoadingBarComponent.ctorParameters = () => [\n    { type: LoadingBarService }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LoadingBarComponent.prototype, \"includeSpinner\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LoadingBarComponent.prototype, \"includeBar\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LoadingBarComponent.prototype, \"fixed\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LoadingBarComponent.prototype, \"color\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], LoadingBarComponent.prototype, \"value\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], LoadingBarComponent.prototype, \"ref\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], LoadingBarComponent.prototype, \"height\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], LoadingBarComponent.prototype, \"diameter\", void 0);\nLoadingBarComponent = __decorate([ __metadata(\"design:paramtypes\", [LoadingBarService])\n], LoadingBarComponent);\n\nlet LoadingBarModule = class LoadingBarModule {\n};\nLoadingBarModule.ɵfac = function LoadingBarModule_Factory(t) { return new (t || LoadingBarModule)(); };\nLoadingBarModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: LoadingBarModule });\nLoadingBarModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarService, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LOADING_BAR_CONFIG]\n            }] }, { type: ɵngcc0.NgZone, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-loading-bar',\n                template: `\n    <ng-container *ngIf=\"value != null ? value : (value$ | async) as progress\">\n      <div *ngIf=\"includeSpinner\" class=\"ngx-spinner\">\n        <div [style.width]=\"diameter\" [style.height]=\"diameter\" class=\"ngx-spinner-icon\"></div>\n      </div>\n      <div\n        *ngIf=\"includeBar\"\n        class=\"ngx-bar\"\n        [style.background]=\"color\"\n        [style.height]=\"height\"\n        [style.width]=\"progress + '%'\"\n      ></div>\n    </ng-container>\n  `,\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.Emulated,\n                host: {\n                    '[attr.fixed]': 'fixed',\n                    '[style.color]': 'color'\n                },\n                styles: [\":host{position:relative;display:block;pointer-events:none}:host .ngx-spinner{transition:350ms linear;display:block;position:absolute;top:5px;left:0}:host .ngx-spinner .ngx-spinner-icon{width:14px;height:14px;border:2px solid transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;-webkit-animation:.4s linear infinite loading-bar-spinner;animation:.4s linear infinite loading-bar-spinner}:host .ngx-bar{transition:width 350ms;position:absolute;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl] :host .ngx-bar{right:0;left:unset}:host[fixed=true]{z-index:10002}:host[fixed=true] .ngx-bar{position:fixed}:host[fixed=true] .ngx-spinner{position:fixed;top:10px;left:10px}[dir=rtl] :host[fixed=true] .ngx-spinner{right:10px;left:unset}@-webkit-keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}\"]\n            }]\n    }], function () { return [{ type: LoadingBarService }]; }, { includeSpinner: [{\n            type: Input\n        }], includeBar: [{\n            type: Input\n        }], fixed: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], ref: [{\n            type: Input\n        }], height: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [LoadingBarComponent],\n                exports: [LoadingBarComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarModule, { declarations: function () { return [LoadingBarComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [LoadingBarComponent]; } }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LOADING_BAR_CONFIG, LoadingBarComponent, LoadingBarModule, LoadingBarService };\n\n//# sourceMappingURL=ngx-loading-bar-core.js.map"]},"metadata":{},"sourceType":"module"}