{"ast":null,"code":"import _get from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Output, Injectable, InjectionToken, Inject, Optional, NgZone, Component, ElementRef, ViewEncapsulation, Directive, ViewChild, ViewContainerRef, Input, NgModule } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { debounceTime, tap, first } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * return json string from json-like string\n * @param {?} str\n * @return {?}\n */\n\nimport * as ɵngcc0 from '@angular/core';\nvar _c0 = [\"*\"];\nvar _c1 = [\"template\"];\n\nfunction jsonize(str) {\n  try {\n    // if parsable already, return as it is\n    JSON.parse(str);\n    return str;\n  } catch (\n  /** @type {?} */\n  e) {\n    // if not parsable, change little\n    return str.replace(/([\\$\\w]+)\\s*:/g, // wrap keys without double quote\n    // wrap keys without double quote\n    function (_, $1) {\n      return '\"' + $1 + '\":';\n    }).replace(/'([^']+)'/g, // replacing single quote to double quote\n    // replacing single quote to double quote\n    function (_, $1) {\n      return '\"' + $1 + '\"';\n    });\n  }\n}\n/**\n * Returns string to an object by using JSON.parse()\n * @param {?} input\n * @return {?}\n */\n\n\nfunction getJSON(input) {\n  if (typeof input === 'string') {\n    var\n    /** @type {?} */\n    re = /^[\\+\\-]?[0-9\\.]+,[ ]*\\ ?[\\+\\-]?[0-9\\.]+$/; // lat,lng\n\n    if (input.match(re)) {\n      input = '[' + input + ']';\n    }\n\n    return JSON.parse(jsonize(input));\n  } else {\n    return input;\n  }\n}\n/**\n * json type definition\n * @record\n */\n\n/**\n * Returns camel-cased from string 'Foo Bar' to 'fooBar'\n * @param {?} str\n * @return {?}\n */\n\n\nfunction toCamelCase(str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\n    return index === 0 ? letter.toLowerCase() : letter.toUpperCase();\n  }).replace(/\\s+/g, '');\n}\n/**\n * @return {?}\n */\n\n\nfunction isMapsApiLoaded() {\n  return typeof google === 'object' && typeof google.maps === 'object';\n}\n/**\n * @param {?} component\n * @param {?} libName\n * @return {?}\n */\n\n\nfunction missingLibraryError(component, libName) {\n  return Error(\"\".concat(component, \": library '\").concat(libName, \"' is missing, please ensure to include it in a 'libraries' parameter.\\n    Example:\\n      NguiMapModule.forRoot({\\n        apiUrl: 'https://maps.googleapis.com/maps/api/js?libraries=\").concat(libName, \"'\\n      })\\n  \"));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @abstract\n */\n\n\nvar BaseMapDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} nguiMapComponent\n   * @param {?} mapObjectName\n   * @param {?} inputs\n   * @param {?} outputs\n   */\n  function BaseMapDirective(nguiMapComponent, mapObjectName, inputs, outputs) {\n    var _this = this;\n\n    _classCallCheck(this, BaseMapDirective);\n\n    this.nguiMapComponent = nguiMapComponent;\n    this.mapObjectName = mapObjectName;\n    this.inputs = inputs;\n    this.outputs = outputs; // this should be redefined on each childr directive\n\n    this.initialized$ = new EventEmitter();\n    this._subscriptions = [];\n    this.nguiMap = this.nguiMapComponent['nguiMap'];\n    this.optionBuilder = this.nguiMapComponent['optionBuilder']; // all outputs must be initialized\n\n    this.outputs.forEach(function (output) {\n      return _this[output] = new EventEmitter();\n    });\n    this.mapObjectName = mapObjectName;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(BaseMapDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      if (this.nguiMapComponent.mapIdledOnce) {\n        // map is ready already\n        this.initialize();\n      } else {\n        this.nguiMapComponent.mapReady$.subscribe(function (map) {\n          return _this2.initialize();\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this); // will be set after geocoded\n\n      typeof this.objectOptions.position === 'string' && delete this.objectOptions.position;\n      typeof this.objectOptions.center === 'string' && delete this.objectOptions.center; // noinspection TypeScriptUnresolvedFunction\n\n      if (this.libraryName) {\n        if (!google.maps[this.libraryName]) {\n          throw missingLibraryError(this.mapObjectName, this.libraryName);\n        }\n\n        this.mapObject = new google.maps[this.libraryName][this.mapObjectName](this.objectOptions);\n      } else {\n        this.mapObject = new google.maps[this.mapObjectName](this.objectOptions);\n      }\n\n      this.mapObject.setMap(this.nguiMapComponent.map);\n      this.mapObject['mapObjectName'] = this.mapObjectName;\n      this.mapObject['nguiMapComponent'] = this.nguiMapComponent; // set google events listeners and emits to this outputs listeners\n\n      this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n      this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n      this.initialized$.emit(this.mapObject);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.nguiMap.updateGoogleObject(this.mapObject, changes);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._subscriptions.map(function (subscription) {\n        return subscription.unsubscribe();\n      });\n\n      this.nguiMapComponent.removeFromMapObjectGroup(this.mapObjectName, this.mapObject);\n\n      if (this.mapObject) {\n        this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');\n      }\n    }\n  }]);\n\n  return BaseMapDirective;\n}();\n\nBaseMapDirective.ɵfac = function BaseMapDirective_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nBaseMapDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: BaseMapDirective,\n  outputs: {\n    initialized$: \"initialized$\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nBaseMapDirective.propDecorators = {\n  \"initialized$\": [{\n    type: Output\n  }]\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * change any object to google object options\n * e.g. [1,2] -> new google.maps.LatLng(1,2);\n */\n\nvar OptionBuilder = /*#__PURE__*/function () {\n  function OptionBuilder() {\n    _classCallCheck(this, OptionBuilder);\n  }\n\n  _createClass(OptionBuilder, [{\n    key: \"googlizeAllInputs\",\n    value:\n    /**\n     * @param {?} definedInputs\n     * @param {?} userInputs\n     * @return {?}\n     */\n    function googlizeAllInputs(definedInputs, userInputs) {\n      var _this3 = this;\n\n      var\n      /** @type {?} */\n      options = {}; // if options given from user, only take options and ignore other inputs\n\n      if (userInputs.options) {\n        options = userInputs.options;\n\n        if (!this.onlyOptionsGiven(definedInputs, userInputs)) {\n          console.error('when \"options\" are used, other options are ignored');\n        }\n      } else {\n        // if options not given, process all user inputs\n        definedInputs.forEach(function (input) {\n          if (userInputs[input] !== undefined) {\n            options[input] = _this3.googlize(userInputs[input], {\n              key: input\n            });\n          }\n        });\n      }\n\n      return options;\n    }\n    /**\n     * @param {?} inputs\n     * @param {?=} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"googlizeMultiple\",\n    value: function googlizeMultiple(inputs, options) {\n      options = options || {};\n\n      for (var\n      /** @type {?} */\n      key in inputs) {\n        var\n        /** @type {?} */\n        val = inputs[key]; // (non-strings are fully converted)\n\n        if (typeof val !== 'string') {\n          options[key] = val;\n        } else if (!(options['doNotConverStringToNumber'] && val.match(/^[0-9]+$/))) {\n          options[key] = this.googlize(val, {\n            key: key\n          });\n        }\n      } // for(var key in attrs)\n\n\n      return options;\n    }\n    /**\n     * @param {?} input\n     * @param {?=} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"googlize\",\n    value: function googlize(input, options) {\n      options = options || {};\n      var\n      /** @type {?} */\n      output = input;\n\n      if (typeof input === 'string') {\n        // convert string to a google object\n        if (input === 'false') {\n          output = false;\n        } else if (input === '0') {\n          output = 0;\n        } else {\n          output = // -> googlize -> getJsonParsed -> googlizeMultiple -> googlize until all elements are parsed\n          this.getJSONParsed(input, options)\n          /* Foo.Bar(...) -> new google.maps.Foo.Bar(...) */\n          || this.getAnyMapObject(input)\n          /*  MapTypeID.HYBRID -> new google.maps.MapTypeID.HYBRID */\n          || this.getAnyMapConstant(input, options)\n          /*  2016-06-20 -> new Date('2016-06-20') */\n          || this.getDateObject(input) || input;\n        }\n      }\n\n      if (options['key']) {\n        var\n        /** @type {?} */\n        key =\n        /** @type {?} */\n        options['key'];\n\n        if (output instanceof Array) {\n          // e.g., [1, 2]\n          if (key === 'bounds') {\n            output = new google.maps.LatLngBounds(output[0], output[1]);\n          } else if (key === 'icons') {\n            output = this.getMapIcons(output);\n          } else if (key === 'position' || key.match(/^geoFallback/)) {\n            output = this.getLatLng(output);\n          }\n        } else if (output instanceof Object) {\n          if (key === 'icon') {\n            output = this.getMarkerIcon(output);\n          } else if (key.match(/ControlOptions$/)) {\n            output = this.getMapControlOption(output);\n          }\n        }\n      } // delete keys only for processing, not used by google\n\n\n      delete output['doNotConverStringToNumber'];\n      delete output['key'];\n      return output;\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n\n  }, {\n    key: \"getLatLng\",\n    value: function getLatLng(input) {\n      var\n      /** @type {?} */\n      output;\n\n      if (input[0].constructor === Array) {\n        // [[1,2],[3,4]]\n        output =\n        /** @type {?} */\n        input.map(function (el) {\n          return new google.maps.LatLng(el[0], el[1]);\n        });\n      } else if (!isNaN(parseFloat(input[0])) && isFinite(input[0])) {\n        output = new google.maps.LatLng(input[0], input[1]);\n      }\n\n      return output;\n    }\n    /**\n     * @param {?} input\n     * @param {?} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"getJSONParsed\",\n    value: function getJSONParsed(input, options) {\n      var\n      /** @type {?} */\n      output;\n\n      try {\n        output = getJSON(input);\n\n        if (output instanceof Array) {\n          // [{a:1}] : not lat/lng ones\n          if (output[0].constructor !== Object) {\n            // [[1,2],[3,4]] or [1,2]\n            output = this.getLatLng(output);\n          }\n        } else if (output === Object(output)) {\n          // check for nested hashes and convert to Google API options\n          var\n          /** @type {?} */\n          newOptions = options;\n          newOptions['doNotConverStringToNumber'] = true;\n          output = this.googlizeMultiple(output, newOptions);\n        }\n      } catch (\n      /** @type {?} */\n      e) {}\n\n      return output;\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n\n  }, {\n    key: \"getAnyMapObject\",\n    value: function getAnyMapObject(input) {\n      var\n      /** @type {?} */\n      output;\n\n      if (input.match(/^[A-Z][a-zA-Z0-9]+\\(.*\\)$/)) {\n        try {\n          output = Function(\"return new google.maps.\".concat(input, \";\"))();\n        } catch (\n        /** @type {?} */\n        e) {}\n      }\n\n      return output;\n    }\n    /**\n     * @param {?} input\n     * @param {?} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"getAnyMapConstant\",\n    value: function getAnyMapConstant(input, options) {\n      var\n      /** @type {?} */\n      output;\n\n      if (input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/)) {\n        // e.g. MapTypeID.HYBRID\n        try {\n          var\n          /** @type {?} */\n          matches = input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/);\n          output = google.maps[matches[1]][matches[2]];\n        } catch (\n        /** @type {?} */\n        e) {}\n      } else if (input.match(/^[A-Z]+$/)) {\n        // e.g. HYBRID\n        try {\n          var\n          /** @type {?} */\n          capitalizedKey =\n          /** @type {?} */\n          options['key'].charAt(0).toUpperCase() +\n          /** @type {?} */\n          options['key'].slice(1);\n          output = google.maps[capitalizedKey][input];\n        } catch (\n        /** @type {?} */\n        e) {}\n      }\n\n      return output;\n    }\n    /**\n     * streetviewControl, panControl, etc, not a general control\n     * @param {?} controlOptions\n     * @return {?}\n     */\n\n  }, {\n    key: \"getMapControlOption\",\n    value: function getMapControlOption(controlOptions) {\n      var\n      /** @type {?} */\n      newControlOptions = controlOptions;\n\n      for (var\n      /** @type {?} */\n      key in newControlOptions) {\n        // assign the right values\n        if (newControlOptions[key]) {\n          var\n          /** @type {?} */\n          value = newControlOptions[key];\n\n          if (typeof value === 'string') {\n            value =\n            /** @type {?} */\n            value.toUpperCase();\n          } else if (key === 'mapTypeIds') {\n            value =\n            /** @type {?} */\n            value.map(function (str) {\n              if (str.match(/^[A-Z]+$/)) {\n                // if constant\n                return google.maps.MapTypeId[str.toUpperCase()];\n              } else {\n                // else, custom map-type\n                return str;\n              }\n            });\n          }\n\n          if (key === 'style') {\n            var\n            /** @type {?} */\n            objName = key.replace(/Options$/, '') + 'Style';\n            newControlOptions[key] = google.maps[objName][\n            /** @type {?} */\n            value];\n          } else if (key === 'position') {\n            newControlOptions[key] = google.maps.ControlPosition[\n            /** @type {?} */\n            value];\n          } else {\n            newControlOptions[key] = value;\n          }\n        }\n      }\n\n      return newControlOptions;\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDateObject\",\n    value: function getDateObject(input) {\n      var\n      /** @type {?} */\n      output;\n\n      if (input.match(/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*)?)([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/)) {\n        try {\n          output = new Date(input);\n        } catch (\n        /** @type {?} */\n        e) {}\n      }\n\n      return output;\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n\n  }, {\n    key: \"getMapIcons\",\n    value: function getMapIcons(input) {\n      return input.map(function (el) {\n        if (el.icon.path.match(/^[A-Z_]+$/)) {\n          el.icon.path = google.maps.SymbolPath[el.icon.path];\n        }\n\n        return el;\n      });\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n\n  }, {\n    key: \"getMarkerIcon\",\n    value: function getMarkerIcon(input) {\n      var\n      /** @type {?} */\n      output = input;\n\n      if (('' + output.path).match(/^[A-Z_]+$/)) {\n        output.path = google.maps.SymbolPath[output.path];\n      }\n\n      for (var\n      /** @type {?} */\n      key in output) {\n        var\n        /** @type {?} */\n        arr = output[key];\n\n        if (key === 'anchor' || key === 'origin' || key === 'labelOrigin') {\n          output[key] = new google.maps.Point(arr[0], arr[1]);\n        } else if (key === 'size' || key === 'scaledSize') {\n          output[key] = new google.maps.Size(arr[0], arr[1]);\n        }\n      }\n\n      return output;\n    }\n    /**\n     * @param {?} definedInputs\n     * @param {?} userInputs\n     * @return {?}\n     */\n\n  }, {\n    key: \"onlyOptionsGiven\",\n    value: function onlyOptionsGiven(definedInputs, userInputs) {\n      for (var\n      /** @type {?} */\n      i = 0; i < definedInputs.length; i++) {\n        var\n        /** @type {?} */\n        input = definedInputs[i];\n\n        if (input !== 'options' && typeof userInputs[input] !== 'undefined') {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }]);\n\n  return OptionBuilder;\n}();\n\nOptionBuilder.ɵfac = function OptionBuilder_Factory(t) {\n  return new (t || OptionBuilder)();\n};\n\nOptionBuilder.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: OptionBuilder,\n  factory: OptionBuilder.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OptionBuilder, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n *  service for navigator.geolocation methods\n */\n\n\nvar NavigatorGeolocation = /*#__PURE__*/function () {\n  function NavigatorGeolocation() {\n    _classCallCheck(this, NavigatorGeolocation);\n  }\n\n  _createClass(NavigatorGeolocation, [{\n    key: \"getCurrentPosition\",\n    value:\n    /**\n     * @param {?=} geoLocationOptions\n     * @return {?}\n     */\n    function getCurrentPosition(geoLocationOptions) {\n      geoLocationOptions = geoLocationOptions || {\n        timeout: 5000\n      };\n      return new Observable(function (responseObserver) {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(function (position) {\n            responseObserver.next(position);\n            responseObserver.complete();\n          }, function (evt) {\n            return responseObserver.error(evt);\n          }, geoLocationOptions);\n        } else {\n          responseObserver.error('Browser Geolocation service failed.');\n        }\n      });\n    }\n  }]);\n\n  return NavigatorGeolocation;\n}();\n\nNavigatorGeolocation.ɵfac = function NavigatorGeolocation_Factory(t) {\n  return new (t || NavigatorGeolocation)();\n};\n\nNavigatorGeolocation.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: NavigatorGeolocation,\n  factory: NavigatorGeolocation.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavigatorGeolocation, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar NG_MAP_CONFIG_TOKEN = new InjectionToken('NG_MAP_CONFIG_TOKEN');\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @abstract\n */\n\nvar NgMapApiLoader = /*#__PURE__*/function () {\n  /**\n   * @param {?} config\n   */\n  function NgMapApiLoader(config) {\n    _classCallCheck(this, NgMapApiLoader);\n\n    this.config = config;\n    this.api$ = new ReplaySubject(1);\n    this.config = this.config || {\n      apiUrl: 'https://maps.google.com/maps/api/js'\n    };\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(NgMapApiLoader, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.api$.complete();\n    }\n  }]);\n\n  return NgMapApiLoader;\n}();\n\nNgMapApiLoader.ɵfac = function NgMapApiLoader_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nNgMapApiLoader.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: NgMapApiLoader\n});\n\nvar NgMapAsyncCallbackApiLoader = /*#__PURE__*/function (_NgMapApiLoader) {\n  _inherits(NgMapAsyncCallbackApiLoader, _NgMapApiLoader);\n\n  var _super = _createSuper(NgMapAsyncCallbackApiLoader);\n\n  /**\n   * @param {?} zone\n   * @param {?} config\n   */\n  function NgMapAsyncCallbackApiLoader(zone, config) {\n    var _this4;\n\n    _classCallCheck(this, NgMapAsyncCallbackApiLoader);\n\n    _this4 = _super.call(this, config);\n    _this4.zone = zone;\n    return _this4;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(NgMapAsyncCallbackApiLoader, [{\n    key: \"load\",\n    value: function load() {\n      var _this5 = this;\n\n      if (typeof window === 'undefined') {\n        return;\n      }\n\n      if (isMapsApiLoaded()) {\n        this.api$.next(google.maps);\n      } else if (!document.querySelector('#ngui-map-api')) {\n        /** @type {?} */\n        window['nguiMapRef'] =\n        /** @type {?} */\n        window['nguiMapRef'] || [];\n\n        /** @type {?} */\n        window['nguiMapRef'].push({\n          zone: this.zone,\n          componentFn: function componentFn() {\n            return _this5.api$.next(google.maps);\n          }\n        });\n        this.addGoogleMapsApi();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"addGoogleMapsApi\",\n    value: function addGoogleMapsApi() {\n      /** @type {?} */\n      window['initNguiMap'] =\n      /** @type {?} */\n      window['initNguiMap'] || function () {\n        /** @type {?} */\n        window['nguiMapRef'].forEach(function (nguiMapRef) {\n          nguiMapRef.zone.run(function () {\n            nguiMapRef.componentFn();\n          });\n        });\n\n        /** @type {?} */\n        window['nguiMapRef'].splice(0,\n        /** @type {?} */\n        window['nguiMapRef'].length);\n      };\n\n      var\n      /** @type {?} */\n      script = document.createElement('script');\n      script.id = 'ngui-map-api'; // script.src = \"https://maps.google.com/maps/api/js?callback=initNguiMap\";\n\n      var\n      /** @type {?} */\n      apiUrl = this.config.apiUrl;\n      apiUrl += apiUrl.indexOf('?') !== -1 ? '&' : '?';\n      script.src = apiUrl + 'callback=initNguiMap';\n      document.querySelector('body').appendChild(script);\n    }\n  }]);\n\n  return NgMapAsyncCallbackApiLoader;\n}(NgMapApiLoader);\n\nNgMapAsyncCallbackApiLoader.ɵfac = function NgMapAsyncCallbackApiLoader_Factory(t) {\n  return new (t || NgMapAsyncCallbackApiLoader)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(NG_MAP_CONFIG_TOKEN, 8));\n};\n\nNgMapAsyncCallbackApiLoader.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: NgMapAsyncCallbackApiLoader,\n  factory: NgMapAsyncCallbackApiLoader.ɵfac\n});\n/** @nocollapse */\n\nNgMapAsyncCallbackApiLoader.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NG_MAP_CONFIG_TOKEN]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgMapAsyncCallbackApiLoader, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NG_MAP_CONFIG_TOKEN]\n      }]\n    }];\n  }, null);\n})();\n\nvar NgMapAsyncApiLoader = /*#__PURE__*/function (_NgMapApiLoader2) {\n  _inherits(NgMapAsyncApiLoader, _NgMapApiLoader2);\n\n  var _super2 = _createSuper(NgMapAsyncApiLoader);\n\n  /**\n   * @param {?} config\n   */\n  function NgMapAsyncApiLoader(config) {\n    _classCallCheck(this, NgMapAsyncApiLoader);\n\n    return _super2.call(this, config);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(NgMapAsyncApiLoader, [{\n    key: \"load\",\n    value: function load() {\n      var _this6 = this;\n\n      if (typeof window === 'undefined') {\n        return;\n      }\n\n      if (isMapsApiLoaded()) {\n        this.api$.next(google.maps);\n      } else if (!document.querySelector('#ngui-map-api')) {\n        var\n        /** @type {?} */\n        script = document.createElement('script');\n        script.id = 'ngui-map-api';\n        script.async = true;\n\n        script.onload = function () {\n          return _this6.api$.next(google.maps);\n        };\n\n        script.src = this.config.apiUrl;\n        document.querySelector('body').appendChild(script);\n      }\n    }\n  }]);\n\n  return NgMapAsyncApiLoader;\n}(NgMapApiLoader);\n\nNgMapAsyncApiLoader.ɵfac = function NgMapAsyncApiLoader_Factory(t) {\n  return new (t || NgMapAsyncApiLoader)(ɵngcc0.ɵɵinject(NG_MAP_CONFIG_TOKEN, 8));\n};\n\nNgMapAsyncApiLoader.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: NgMapAsyncApiLoader,\n  factory: NgMapAsyncApiLoader.ɵfac\n});\n/** @nocollapse */\n\nNgMapAsyncApiLoader.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NG_MAP_CONFIG_TOKEN]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgMapAsyncApiLoader, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NG_MAP_CONFIG_TOKEN]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n *   Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)\n *   service for Google Geocoder service\n */\n\n\nvar GeoCoder = /*#__PURE__*/function () {\n  /**\n   * @param {?} apiLoader\n   */\n  function GeoCoder(apiLoader) {\n    _classCallCheck(this, GeoCoder);\n\n    this.apiLoader = apiLoader;\n    this.apiLoaderSubs = [];\n  }\n  /**\n   * @param {?} options\n   * @return {?}\n   */\n\n\n  _createClass(GeoCoder, [{\n    key: \"geocode\",\n    value: function geocode(options) {\n      var _this7 = this;\n\n      return new Observable(function (responseObserver) {\n        _this7.apiLoaderSubs.push(_this7.apiLoader.api$.subscribe(function () {\n          return _this7.requestGeocode(options, responseObserver);\n        }));\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.apiLoaderSubs.map(function (sub) {\n        return sub.unsubscribe();\n      });\n    }\n    /**\n     * @param {?} options\n     * @param {?} observer\n     * @return {?}\n     */\n\n  }, {\n    key: \"requestGeocode\",\n    value: function requestGeocode(options, observer) {\n      var\n      /** @type {?} */\n      geocoder = new google.maps.Geocoder();\n      geocoder.geocode(options, function (results, status) {\n        if (status === google.maps.GeocoderStatus.OK) {\n          observer.next(results);\n          observer.complete();\n        } else {\n          observer.error(results);\n        }\n      });\n    }\n  }]);\n\n  return GeoCoder;\n}();\n\nGeoCoder.ɵfac = function GeoCoder_Factory(t) {\n  return new (t || GeoCoder)(ɵngcc0.ɵɵinject(NgMapApiLoader));\n};\n\nGeoCoder.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: GeoCoder,\n  factory: GeoCoder.ɵfac\n});\n/** @nocollapse */\n\nGeoCoder.ctorParameters = function () {\n  return [{\n    type: NgMapApiLoader\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GeoCoder, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NgMapApiLoader\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * collection of map instance-related properties and methods\n */\n\n\nvar NguiMap = /*#__PURE__*/function () {\n  /**\n   * @param {?} geoCoder\n   * @param {?} optionBuilder\n   * @param {?} zone\n   */\n  function NguiMap(geoCoder, optionBuilder, zone) {\n    var _this8 = this;\n\n    _classCallCheck(this, NguiMap);\n\n    this.geoCoder = geoCoder;\n    this.optionBuilder = optionBuilder;\n    this.zone = zone;\n\n    this.updateGoogleObject = function (object, changes) {\n      var\n      /** @type {?} */\n      val,\n      /** @type {?} */\n      currentValue,\n      /** @type {?} */\n      setMethodName;\n\n      if (object) {\n        for (var\n        /** @type {?} */\n        key in changes) {\n          setMethodName = \"set\".concat(key.replace(/^[a-z]/, function (x) {\n            return x.toUpperCase();\n          }));\n          currentValue = changes[key].currentValue;\n\n          if (['position', 'center'].indexOf(key) !== -1 && typeof currentValue === 'string') {\n            // To preserve setMethod name in Observable callback, wrap it as a function, then execute\n            (function (setMethodName) {\n              _this8.geoCoder.geocode({\n                address: currentValue\n              }).subscribe(function (results) {\n                if (typeof object[setMethodName] === 'function') {\n                  object[setMethodName](results[0].geometry.location);\n                } else {\n                  console.error('Not all options are dynamically updatable according to Googles Maps API V3 documentation.\\n' + 'Please check Google Maps API documentation, and use \"setOptions\" instead.');\n                }\n              });\n            })(setMethodName);\n          } else {\n            val = _this8.optionBuilder.googlize(currentValue);\n\n            if (typeof object[setMethodName] === 'function') {\n              object[setMethodName](val);\n            } else {\n              console.error('Not all options are dynamically updatable according to Googles Maps API V3 documentation.\\n' + 'Please check Google Maps API documentation, and use \"setOptions\" instead.');\n            }\n          }\n        }\n      }\n    };\n  }\n  /**\n   * @param {?} definedEvents\n   * @param {?} thisObj\n   * @param {?} prefix\n   * @return {?}\n   */\n\n\n  _createClass(NguiMap, [{\n    key: \"setObjectEvents\",\n    value: function setObjectEvents(definedEvents, thisObj, prefix) {\n      var _this9 = this;\n\n      definedEvents.forEach(function (definedEvent) {\n        var\n        /** @type {?} */\n        eventName = _this9.getEventName(definedEvent),\n\n        /** @type {?} */\n        zone = _this9.zone;\n\n        zone.runOutsideAngular(function () {\n          thisObj[prefix].addListener(eventName, function (event) {\n            var\n            /** @type {?} */\n            param = event ? event : {};\n            param.target = this;\n            zone.run(function () {\n              return thisObj[definedEvent].emit(param);\n            });\n          });\n        });\n      });\n    }\n    /**\n     * @param {?} definedEvents\n     * @param {?} thisObj\n     * @param {?} prefix\n     * @return {?}\n     */\n\n  }, {\n    key: \"clearObjectEvents\",\n    value: function clearObjectEvents(definedEvents, thisObj, prefix) {\n      var _this10 = this;\n\n      definedEvents.forEach(function (definedEvent) {\n        var\n        /** @type {?} */\n        eventName = _this10.getEventName(definedEvent);\n\n        _this10.zone.runOutsideAngular(function () {\n          if (thisObj[prefix]) {\n            google.maps.event.clearListeners(thisObj[prefix], eventName);\n          }\n        });\n      });\n\n      if (thisObj[prefix]) {\n        if (thisObj[prefix].setMap) {\n          thisObj[prefix].setMap(null);\n        }\n\n        delete thisObj[prefix].nguiMapComponent;\n        delete thisObj[prefix];\n      }\n    }\n    /**\n     * @param {?} definedEvent\n     * @return {?}\n     */\n\n  }, {\n    key: \"getEventName\",\n    value: function getEventName(definedEvent) {\n      return definedEvent.replace(/([A-Z])/g, function ($1) {\n        return \"_\".concat($1.toLowerCase());\n      }) // positionChanged -> position_changed\n      .replace(/^map_/, ''); // map_click -> click  to avoid DOM conflicts\n    }\n  }]);\n\n  return NguiMap;\n}();\n\nNguiMap.ɵfac = function NguiMap_Factory(t) {\n  return new (t || NguiMap)(ɵngcc0.ɵɵinject(GeoCoder), ɵngcc0.ɵɵinject(OptionBuilder), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nNguiMap.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: NguiMap,\n  factory: NguiMap.ɵfac\n});\n/** @nocollapse */\n\nNguiMap.ctorParameters = function () {\n  return [{\n    type: GeoCoder\n  }, {\n    type: OptionBuilder\n  }, {\n    type: NgZone\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguiMap, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GeoCoder\n    }, {\n      type: OptionBuilder\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS = ['backgroundColor', 'center', 'disableDefaultUI', 'disableDoubleClickZoom', 'draggable', 'draggableCursor', 'draggingCursor', 'heading', 'keyboardShortcuts', 'mapMaker', 'mapTypeControl', 'mapTypeId', 'maxZoom', 'minZoom', 'noClear', 'overviewMapControl', 'panControl', 'panControlOptions', 'rotateControl', 'scaleControl', 'scrollwheel', 'streetView', 'styles', 'tilt', 'zoom', 'streetViewControl', 'zoomControl', 'zoomControlOptions', 'mapTypeControlOptions', 'overviewMapControlOptions', 'rotateControlOptions', 'scaleControlOptions', 'streetViewControlOptions', 'fullscreenControl', 'fullscreenControlOptions', 'options', 'geoFallbackCenter'];\nvar OUTPUTS = ['bounds_changed', 'center_changed', 'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'heading_changed', 'idle', 'maptypeid_changed', 'mousemove', 'mouseout', 'mouseover', 'projection_changed', 'resize', 'rightclick', 'tilesloaded', 'tile_changed', 'zoom_changed', 'mapClick', 'mapMouseover', 'mapMouseout', 'mapMousemove', 'mapDrag', 'mapDragend', 'mapDragstart'];\n\nvar NguiMapComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} optionBuilder\n   * @param {?} elementRef\n   * @param {?} geolocation\n   * @param {?} geoCoder\n   * @param {?} nguiMap\n   * @param {?} apiLoader\n   * @param {?} zone\n   */\n  function NguiMapComponent(optionBuilder, elementRef, geolocation, geoCoder, nguiMap, apiLoader, zone) {\n    var _this11 = this;\n\n    _classCallCheck(this, NguiMapComponent);\n\n    this.optionBuilder = optionBuilder;\n    this.elementRef = elementRef;\n    this.geolocation = geolocation;\n    this.geoCoder = geoCoder;\n    this.nguiMap = nguiMap;\n    this.apiLoader = apiLoader;\n    this.zone = zone;\n    this.mapReady$ = new EventEmitter();\n    this.mapOptions = {};\n    this.inputChanges$ = new Subject();\n    this.infoWindows = {};\n    this.mapIdledOnce = false;\n    this.initializeMapAfterDisplayed = false;\n    apiLoader.load(); // all outputs needs to be initialized,\n    // http://stackoverflow.com/questions/37765519/angular2-directive-cannot-read-property-subscribe-of-undefined-with-outputs\n\n    OUTPUTS.forEach(function (output) {\n      return _this11[output] = new EventEmitter();\n    });\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(NguiMapComponent, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this12 = this;\n\n      this.apiLoaderSub = this.apiLoader.api$.pipe(first()).subscribe(function () {\n        return _this12.initializeMap();\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      if (this.initializeMapAfterDisplayed && this.el && this.el.offsetWidth > 0) {\n        this.initializeMap();\n      }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.inputChanges$.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"initializeMap\",\n    value: function initializeMap() {\n      var _this13 = this;\n\n      this.el = this.elementRef.nativeElement.querySelector('.google-map');\n\n      if (this.el && this.el.offsetWidth === 0) {\n        this.initializeMapAfterDisplayed = true;\n        return;\n      }\n\n      this.initializeMapAfterDisplayed = false;\n      this.mapOptions = this.optionBuilder.googlizeAllInputs(INPUTS, this);\n      this.mapOptions.zoom = this.mapOptions.zoom || 15;\n      typeof this.mapOptions.center === 'string' && delete this.mapOptions.center;\n      this.zone.runOutsideAngular(function () {\n        _this13.map = new google.maps.Map(_this13.el, _this13.mapOptions);\n        _this13.map['mapObjectName'] = 'NguiMapComponent';\n\n        if (!_this13.mapOptions.center) {\n          // if center is not given as lat/lng\n          _this13.setCenter();\n        } // set google events listeners and emits to this outputs listeners\n\n\n        _this13.nguiMap.setObjectEvents(OUTPUTS, _this13, 'map');\n\n        _this13.map.addListener('idle', function () {\n          if (!_this13.mapIdledOnce) {\n            _this13.mapIdledOnce = true;\n            setTimeout(function () {\n              // Why????, subsribe and emit must not be in the same cycle???\n              _this13.mapReady$.emit(_this13.map);\n            });\n          }\n        }); // update map when input changes\n\n\n        _this13.inputChanges$.pipe(debounceTime(1000), tap(function (changes) {\n          return _this13.nguiMap.updateGoogleObject(_this13.map, changes);\n        })).subscribe();\n\n        if (typeof window !== 'undefined' &&\n        /** @type {?} */\n        window['nguiMapRef']) {\n          // expose map object for test and debugging on (<any>window)\n\n          /** @type {?} */\n          window['nguiMapRef'].map = _this13.map;\n        }\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"setCenter\",\n    value: function setCenter() {\n      var _this14 = this;\n\n      if (!this['center']) {\n        // center is not from user. Thus, we set the current location\n        this.geolocation.getCurrentPosition().subscribe(function (position) {\n          var\n          /** @type {?} */\n          latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n\n          _this14.map.setCenter(latLng);\n        }, function (error) {\n          console.error('ngui-map: Error finding the current position');\n\n          _this14.map.setCenter(_this14.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        });\n      } else if (typeof this['center'] === 'string') {\n        this.geoCoder.geocode({\n          address: this['center']\n        }).subscribe(function (results) {\n          _this14.map.setCenter(results[0].geometry.location);\n        }, function (error) {\n          _this14.map.setCenter(_this14.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        });\n      }\n    }\n    /**\n     * @param {?} id\n     * @param {?} anchor\n     * @return {?}\n     */\n\n  }, {\n    key: \"openInfoWindow\",\n    value: function openInfoWindow(id, anchor) {\n      this.infoWindows[id].open(anchor);\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n\n  }, {\n    key: \"closeInfoWindow\",\n    value: function closeInfoWindow(id) {\n      // if infoWindow for id exists, close the infoWindow\n      if (this.infoWindows[id]) this.infoWindows[id].close();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.inputChanges$.complete();\n\n      if (this.el && !this.initializeMapAfterDisplayed) {\n        this.nguiMap.clearObjectEvents(OUTPUTS, this, 'map');\n      }\n\n      if (this.apiLoaderSub) {\n        this.apiLoaderSub.unsubscribe();\n      }\n    }\n    /**\n     * @param {?} mapObjectName\n     * @param {?} mapObject\n     * @return {?}\n     */\n\n  }, {\n    key: \"addToMapObjectGroup\",\n    value: function addToMapObjectGroup(mapObjectName, mapObject) {\n      var\n      /** @type {?} */\n      groupName = toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n\n      this.map[groupName] = this.map[groupName] || [];\n      this.map[groupName].push(mapObject);\n    }\n    /**\n     * @param {?} mapObjectName\n     * @param {?} mapObject\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeFromMapObjectGroup\",\n    value: function removeFromMapObjectGroup(mapObjectName, mapObject) {\n      var\n      /** @type {?} */\n      groupName = toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n\n      if (this.map && this.map[groupName]) {\n        var\n        /** @type {?} */\n        index = this.map[groupName].indexOf(mapObject);\n        index > -1 && this.map[groupName].splice(index, 1);\n      }\n    }\n  }]);\n\n  return NguiMapComponent;\n}();\n\nNguiMapComponent.ɵfac = function NguiMapComponent_Factory(t) {\n  return new (t || NguiMapComponent)(ɵngcc0.ɵɵdirectiveInject(OptionBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NavigatorGeolocation), ɵngcc0.ɵɵdirectiveInject(GeoCoder), ɵngcc0.ɵɵdirectiveInject(NguiMap), ɵngcc0.ɵɵdirectiveInject(NgMapApiLoader), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nNguiMapComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NguiMapComponent,\n  selectors: [[\"ngui-map\"]],\n  inputs: {\n    backgroundColor: \"backgroundColor\",\n    center: \"center\",\n    disableDefaultUI: \"disableDefaultUI\",\n    disableDoubleClickZoom: \"disableDoubleClickZoom\",\n    draggable: \"draggable\",\n    draggableCursor: \"draggableCursor\",\n    draggingCursor: \"draggingCursor\",\n    heading: \"heading\",\n    keyboardShortcuts: \"keyboardShortcuts\",\n    mapMaker: \"mapMaker\",\n    mapTypeControl: \"mapTypeControl\",\n    mapTypeId: \"mapTypeId\",\n    maxZoom: \"maxZoom\",\n    minZoom: \"minZoom\",\n    noClear: \"noClear\",\n    overviewMapControl: \"overviewMapControl\",\n    panControl: \"panControl\",\n    panControlOptions: \"panControlOptions\",\n    rotateControl: \"rotateControl\",\n    scaleControl: \"scaleControl\",\n    scrollwheel: \"scrollwheel\",\n    streetView: \"streetView\",\n    styles: \"styles\",\n    tilt: \"tilt\",\n    zoom: \"zoom\",\n    streetViewControl: \"streetViewControl\",\n    zoomControl: \"zoomControl\",\n    zoomControlOptions: \"zoomControlOptions\",\n    mapTypeControlOptions: \"mapTypeControlOptions\",\n    overviewMapControlOptions: \"overviewMapControlOptions\",\n    rotateControlOptions: \"rotateControlOptions\",\n    scaleControlOptions: \"scaleControlOptions\",\n    streetViewControlOptions: \"streetViewControlOptions\",\n    fullscreenControl: \"fullscreenControl\",\n    fullscreenControlOptions: \"fullscreenControlOptions\",\n    options: \"options\",\n    geoFallbackCenter: \"geoFallbackCenter\"\n  },\n  outputs: {\n    bounds_changed: \"bounds_changed\",\n    center_changed: \"center_changed\",\n    click: \"click\",\n    dblclick: \"dblclick\",\n    drag: \"drag\",\n    dragend: \"dragend\",\n    dragstart: \"dragstart\",\n    heading_changed: \"heading_changed\",\n    idle: \"idle\",\n    maptypeid_changed: \"maptypeid_changed\",\n    mousemove: \"mousemove\",\n    mouseout: \"mouseout\",\n    mouseover: \"mouseover\",\n    projection_changed: \"projection_changed\",\n    resize: \"resize\",\n    rightclick: \"rightclick\",\n    tilesloaded: \"tilesloaded\",\n    tile_changed: \"tile_changed\",\n    zoom_changed: \"zoom_changed\",\n    mapClick: \"mapClick\",\n    mapMouseover: \"mapMouseover\",\n    mapMouseout: \"mapMouseout\",\n    mapMousemove: \"mapMousemove\",\n    mapDrag: \"mapDrag\",\n    mapDragend: \"mapDragend\",\n    mapDragstart: \"mapDragstart\",\n    mapReady$: \"mapReady$\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NguiMap, OptionBuilder, GeoCoder, NavigatorGeolocation]), ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"google-map\"]],\n  template: function NguiMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n    }\n  },\n  styles: [\"\\n    ngui-map {display: block; height: 300px;}\\n    .google-map {width: 100%; height: 100%}\\n  \"],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nNguiMapComponent.ctorParameters = function () {\n  return [{\n    type: OptionBuilder\n  }, {\n    type: ElementRef\n  }, {\n    type: NavigatorGeolocation\n  }, {\n    type: GeoCoder\n  }, {\n    type: NguiMap\n  }, {\n    type: NgMapApiLoader\n  }, {\n    type: NgZone\n  }];\n};\n\nNguiMapComponent.propDecorators = {\n  \"mapReady$\": [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguiMapComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngui-map',\n      providers: [NguiMap, OptionBuilder, GeoCoder, NavigatorGeolocation],\n      styles: [\"\\n    ngui-map {display: block; height: 300px;}\\n    .google-map {width: 100%; height: 100%}\\n  \"],\n      inputs: INPUTS,\n      outputs: OUTPUTS,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <div class=\\\"google-map\\\"></div>\\n    <ng-content></ng-content>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: OptionBuilder\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NavigatorGeolocation\n    }, {\n      type: GeoCoder\n    }, {\n      type: NguiMap\n    }, {\n      type: NgMapApiLoader\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    mapReady$: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$1 = [];\nvar OUTPUTS$1 = [];\n\nvar BicyclingLayer = /*#__PURE__*/function (_BaseMapDirective) {\n  _inherits(BicyclingLayer, _BaseMapDirective);\n\n  var _super3 = _createSuper(BicyclingLayer);\n\n  /**\n   * @param {?} nguiMapComp\n   */\n  function BicyclingLayer(nguiMapComp) {\n    _classCallCheck(this, BicyclingLayer);\n\n    return _super3.call(this, nguiMapComp, 'BicyclingLayer', INPUTS$1, OUTPUTS$1);\n  }\n\n  return BicyclingLayer;\n}(BaseMapDirective);\n\nBicyclingLayer.ɵfac = function BicyclingLayer_Factory(t) {\n  return new (t || BicyclingLayer)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent));\n};\n\nBicyclingLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: BicyclingLayer,\n  selectors: [[\"bicycling-layer\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nBicyclingLayer.ctorParameters = function () {\n  return [{\n    type: NguiMapComponent\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BicyclingLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'ngui-map > bicycling-layer',\n      inputs: INPUTS$1,\n      outputs: OUTPUTS$1\n    }]\n  }], function () {\n    return [{\n      type: NguiMapComponent\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$2 = ['content', 'disableAutoPan', 'maxWidth', 'pixelOffset', 'position', 'zIndex', 'options'];\nvar OUTPUTS$2 = ['closeclick', 'content_changed', 'domready', 'position_changed', 'zindex_changed'];\n\nvar InfoWindow = /*#__PURE__*/function () {\n  /**\n   * @param {?} elementRef\n   * @param {?} nguiMap\n   * @param {?} nguiMapComponent\n   */\n  function InfoWindow(elementRef, nguiMap, nguiMapComponent) {\n    var _this15 = this;\n\n    _classCallCheck(this, InfoWindow);\n\n    this.elementRef = elementRef;\n    this.nguiMap = nguiMap;\n    this.nguiMapComponent = nguiMapComponent;\n    this.initialized$ = new EventEmitter();\n    this.objectOptions = {};\n    this.inputChanges$ = new Subject();\n    this.elementRef.nativeElement.style.display = 'none';\n    OUTPUTS$2.forEach(function (output) {\n      return _this15[output] = new EventEmitter();\n    });\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(InfoWindow, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this16 = this;\n\n      if (this.nguiMapComponent.mapIdledOnce) {\n        // map is ready already\n        this.initialize();\n      } else {\n        this.nguiMapComponent.mapReady$.subscribe(function (map) {\n          return _this16.initialize();\n        });\n      }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.inputChanges$.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var _this17 = this;\n\n      this.objectOptions = this.nguiMapComponent.optionBuilder.googlizeAllInputs(INPUTS$2, this);\n      this.infoWindow = new google.maps.InfoWindow(this.objectOptions);\n      this.infoWindow['mapObjectName'] = 'InfoWindow'; // register infoWindow ids to NguiMap, so that it can be opened by id\n\n      if (this.elementRef.nativeElement.id) {\n        this.nguiMapComponent.infoWindows[this.elementRef.nativeElement.id] = this;\n      } else {\n        console.error('An InfoWindow must have an id. e.g. id=\"detail\"');\n      } // set google events listeners and emits to this outputs listeners\n\n\n      this.nguiMap.setObjectEvents(OUTPUTS$2, this, 'infoWindow'); // update object when input changes\n\n      this.inputChanges$.pipe(debounceTime(1000), tap(function (changes) {\n        return _this17.nguiMap.updateGoogleObject(_this17.infoWindow, changes);\n      })).subscribe();\n      this.nguiMapComponent.addToMapObjectGroup('InfoWindow', this.infoWindow);\n      this.initialized$.emit(this.infoWindow);\n    }\n    /**\n     * @param {?} anchor\n     * @return {?}\n     */\n\n  }, {\n    key: \"open\",\n    value: function open(anchor) {\n      // set content and open it\n      this.infoWindow.setContent(this.template.element.nativeElement);\n      this.infoWindow.open(this.nguiMapComponent.map, anchor);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      // check if infoWindow exists, and closes it\n      if (this.infoWindow) this.infoWindow.close();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.inputChanges$.complete();\n\n      if (this.infoWindow) {\n        this.nguiMap.clearObjectEvents(OUTPUTS$2, this, 'infoWindow');\n        delete this.infoWindow;\n      }\n    }\n  }]);\n\n  return InfoWindow;\n}();\n\nInfoWindow.ɵfac = function InfoWindow_Factory(t) {\n  return new (t || InfoWindow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NguiMap), ɵngcc0.ɵɵdirectiveInject(NguiMapComponent));\n};\n\nInfoWindow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: InfoWindow,\n  selectors: [[\"info-window\"]],\n  viewQuery: function InfoWindow_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c1, 5, ViewContainerRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    }\n  },\n  inputs: {\n    content: \"content\",\n    disableAutoPan: \"disableAutoPan\",\n    maxWidth: \"maxWidth\",\n    pixelOffset: \"pixelOffset\",\n    position: \"position\",\n    zIndex: \"zIndex\",\n    options: \"options\"\n  },\n  outputs: {\n    closeclick: \"closeclick\",\n    content_changed: \"content_changed\",\n    domready: \"domready\",\n    position_changed: \"position_changed\",\n    zindex_changed: \"zindex_changed\",\n    initialized$: \"initialized$\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 0,\n  consts: [[\"template\", \"\"]],\n  template: function InfoWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", null, 0);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nInfoWindow.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NguiMap\n  }, {\n    type: NguiMapComponent\n  }];\n};\n\nInfoWindow.propDecorators = {\n  \"initialized$\": [{\n    type: Output\n  }],\n  \"template\": [{\n    type: ViewChild,\n    args: ['template', {\n      read: ViewContainerRef\n    }]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InfoWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngui-map > info-window',\n      inputs: INPUTS$2,\n      outputs: OUTPUTS$2,\n      template: \"<div #template><ng-content></ng-content></div>\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NguiMap\n    }, {\n      type: NguiMapComponent\n    }];\n  }, {\n    initialized$: [{\n      type: Output\n    }],\n    template: [{\n      type: ViewChild,\n      args: ['template', {\n        read: ViewContainerRef\n      }]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$3 = ['position']; // to avoid DOM event conflicts map_*\n\nvar OUTPUTS$3 = ['animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged', 'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick', 'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged', 'map_click', 'map_mouseover', 'map_mouseout', 'map_mouseup', 'map_mousedown', 'map_drag', 'map_dragend'];\n/**\n * Wrapper to a create extend OverlayView at runtime, only after google maps is loaded.\n * Otherwise throws a google is unknown error.\n * @param {?} htmlEl\n * @param {?} position\n * @return {?}\n */\n\nfunction getCustomMarkerOverlayView(htmlEl, position) {\n  var CustomMarkerOverlayView = /*#__PURE__*/function (_google$maps$OverlayV) {\n    _inherits(CustomMarkerOverlayView, _google$maps$OverlayV);\n\n    var _super4 = _createSuper(CustomMarkerOverlayView);\n\n    /**\n     * @param {?} htmlEl\n     * @param {?} position\n     */\n    function CustomMarkerOverlayView(htmlEl, position) {\n      var _this18;\n\n      _classCallCheck(this, CustomMarkerOverlayView);\n\n      _this18 = _super4.call(this);\n      _this18.visible = true;\n\n      _this18.setPosition = function (position) {\n        _this18.htmlEl.style.visibility = 'hidden';\n\n        if (position.constructor.name === 'Array') {\n          _this18.position = new google.maps.LatLng(position[0], position[1]);\n        } else if (typeof position === 'string') {\n          var\n          /** @type {?} */\n          geocoder = new google.maps.Geocoder();\n          geocoder.geocode({\n            address: position\n          }, function (results, status) {\n            if (status === google.maps.GeocoderStatus.OK) {\n              _this18.setPosition(results[0].geometry.location);\n            } else {}\n          });\n        } else if (position && typeof position.lng === 'function') {\n          _this18.position = position;\n        }\n\n        if (_this18.getProjection() && typeof _this18.position.lng === 'function') {\n          var\n          /** @type {?} */\n          positionOnMap = function positionOnMap() {\n            var\n            /** @type {?} */\n            projection = _this18.getProjection();\n\n            if (!projection) {\n              return;\n            }\n\n            var\n            /** @type {?} */\n            posPixel = projection.fromLatLngToDivPixel(_this18.position);\n            var\n            /** @type {?} */\n            x = Math.round(posPixel.x - _this18.htmlEl.offsetWidth / 2);\n            var\n            /** @type {?} */\n            y = Math.round(posPixel.y - _this18.htmlEl.offsetHeight / 2);\n            _this18.htmlEl.style.left = x + 'px';\n            _this18.htmlEl.style.top = y + 'px';\n            _this18.htmlEl.style.visibility = 'visible';\n          };\n\n          if (_this18.htmlEl.offsetWidth && _this18.htmlEl.offsetHeight) {\n            positionOnMap();\n          } else {\n            setTimeout(function () {\n              return positionOnMap();\n            });\n          }\n        }\n      };\n\n      _this18.htmlEl = htmlEl;\n      _this18.position = position;\n      return _this18;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(CustomMarkerOverlayView, [{\n      key: \"onAdd\",\n      value: function onAdd() {\n        this.getPanes().overlayMouseTarget.appendChild(this.htmlEl); // required for correct display inside google maps container\n\n        this.htmlEl.style.position = 'absolute';\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"draw\",\n      value: function draw() {\n        this.setPosition(this.position);\n        this.setZIndex(this.zIndex);\n        this.setVisible(this.visible);\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"onRemove\",\n      value: function onRemove() {//\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"getPosition\",\n      value: function getPosition() {\n        return this.position;\n      }\n      /**\n       * @param {?} zIndex\n       * @return {?}\n       */\n\n    }, {\n      key: \"setZIndex\",\n      value: function setZIndex(zIndex) {\n        zIndex && (this.zIndex = zIndex);\n        /* jshint ignore:line */\n\n        this.htmlEl.style.zIndex = this.zIndex;\n      }\n      /**\n       * @param {?} visible\n       * @return {?}\n       */\n\n    }, {\n      key: \"setVisible\",\n      value: function setVisible(visible) {\n        this.htmlEl.style.display = visible ? 'inline-block' : 'none';\n        this.visible = visible;\n      }\n    }]);\n\n    return CustomMarkerOverlayView;\n  }(google.maps.OverlayView);\n\n  return new CustomMarkerOverlayView(htmlEl, position);\n}\n\nvar CustomMarker = /*#__PURE__*/function () {\n  /**\n   * @param {?} nguiMapComponent\n   * @param {?} elementRef\n   * @param {?} nguiMap\n   */\n  function CustomMarker(nguiMapComponent, elementRef, nguiMap) {\n    var _this19 = this;\n\n    _classCallCheck(this, CustomMarker);\n\n    this.nguiMapComponent = nguiMapComponent;\n    this.elementRef = elementRef;\n    this.nguiMap = nguiMap;\n    this.initialized$ = new EventEmitter();\n    this.inputChanges$ = new Subject();\n    this.elementRef.nativeElement.style.display = 'none';\n    OUTPUTS$3.forEach(function (output) {\n      return _this19[output] = new EventEmitter();\n    });\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(CustomMarker, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this20 = this;\n\n      if (this.nguiMapComponent.mapIdledOnce) {\n        // map is ready already\n        this.initialize();\n      } else {\n        this.nguiMapComponent.mapReady$.subscribe(function (map) {\n          return _this20.initialize();\n        });\n      }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.inputChanges$.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.inputChanges$.complete();\n      this.nguiMapComponent.removeFromMapObjectGroup('CustomMarker', this.mapObject);\n\n      if (this.mapObject) {\n        this.nguiMap.clearObjectEvents(OUTPUTS$3, this, 'mapObject');\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var _this21 = this;\n\n      this.el = this.elementRef.nativeElement;\n      this.mapObject = getCustomMarkerOverlayView(this.el, this['position']);\n      this.mapObject.setMap(this.nguiMapComponent.map); // set google events listeners and emits to this outputs listeners\n\n      this.nguiMap.setObjectEvents(OUTPUTS$3, this, 'mapObject'); // update object when input changes\n\n      this.inputChanges$.pipe(debounceTime(1000), tap(function (changes) {\n        return _this21.nguiMap.updateGoogleObject(_this21.mapObject, changes);\n      })).subscribe();\n      this.nguiMapComponent.addToMapObjectGroup('CustomMarker', this.mapObject);\n      this.initialized$.emit(this.mapObject);\n    }\n  }]);\n\n  return CustomMarker;\n}();\n\nCustomMarker.ɵfac = function CustomMarker_Factory(t) {\n  return new (t || CustomMarker)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NguiMap));\n};\n\nCustomMarker.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CustomMarker,\n  selectors: [[\"custom-marker\"]],\n  inputs: {\n    position: \"position\"\n  },\n  outputs: {\n    animationChanged: \"animationChanged\",\n    click: \"click\",\n    clickableChanged: \"clickableChanged\",\n    cursorChanged: \"cursorChanged\",\n    dblclick: \"dblclick\",\n    drag: \"drag\",\n    dragend: \"dragend\",\n    draggableChanged: \"draggableChanged\",\n    dragstart: \"dragstart\",\n    flatChanged: \"flatChanged\",\n    iconChanged: \"iconChanged\",\n    mousedown: \"mousedown\",\n    mouseout: \"mouseout\",\n    mouseover: \"mouseover\",\n    mouseup: \"mouseup\",\n    positionChanged: \"positionChanged\",\n    rightclick: \"rightclick\",\n    shapeChanged: \"shapeChanged\",\n    titleChanged: \"titleChanged\",\n    visibleChanged: \"visibleChanged\",\n    zindexChanged: \"zindexChanged\",\n    map_click: \"map_click\",\n    map_mouseover: \"map_mouseover\",\n    map_mouseout: \"map_mouseout\",\n    map_mouseup: \"map_mouseup\",\n    map_mousedown: \"map_mousedown\",\n    map_drag: \"map_drag\",\n    map_dragend: \"map_dragend\",\n    initialized$: \"initialized$\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function CustomMarker_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCustomMarker.ctorParameters = function () {\n  return [{\n    type: NguiMapComponent\n  }, {\n    type: ElementRef\n  }, {\n    type: NguiMap\n  }];\n};\n\nCustomMarker.propDecorators = {\n  \"initialized$\": [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CustomMarker, [{\n    type: Component,\n    args: [{\n      selector: 'ngui-map > custom-marker',\n      inputs: INPUTS$3,\n      outputs: OUTPUTS$3,\n      template: \"\\n    <ng-content></ng-content>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NguiMapComponent\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NguiMap\n    }];\n  }, {\n    initialized$: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$4 = ['center', 'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'map', 'radius', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options', 'geoFallbackCenter'];\nvar OUTPUTS$4 = ['centerChanged', 'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'radiusChanged', 'rightclick'];\n\nvar Circle = /*#__PURE__*/function (_BaseMapDirective2) {\n  _inherits(Circle, _BaseMapDirective2);\n\n  var _super5 = _createSuper(Circle);\n\n  /**\n   * @param {?} nguiMapComp\n   */\n  function Circle(nguiMapComp) {\n    var _this22;\n\n    _classCallCheck(this, Circle);\n\n    _this22 = _super5.call(this, nguiMapComp, 'Circle', INPUTS$4, OUTPUTS$4);\n    _this22.nguiMapComp = nguiMapComp;\n    _this22.objectOptions =\n    /** @type {?} */\n    {};\n    return _this22;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(Circle, [{\n    key: \"initialize\",\n    value: function initialize() {\n      _get(_getPrototypeOf(Circle.prototype), \"initialize\", this).call(this);\n\n      this.setCenter();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"setCenter\",\n    value: function setCenter() {\n      var _this23 = this;\n\n      if (!this['center']) {\n        this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(function (center) {\n          var\n          /** @type {?} */\n          latLng = new google.maps.LatLng(center.coords.latitude, center.coords.longitude);\n\n          _this23.mapObject.setCenter(latLng);\n        }, function (error) {\n          console.error('ngui-map, error in finding the current position');\n\n          _this23.mapObject.setCenter(_this23.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }));\n      } else if (typeof this['center'] === 'string') {\n        this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({\n          address: this['center']\n        }).subscribe(function (results) {\n          _this23.mapObject.setCenter(results[0].geometry.location);\n        }, function (error) {\n          console.error('ngui-map, error in finding location from', _this23['center']);\n\n          _this23.mapObject.setCenter(_this23.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }));\n      }\n    }\n  }]);\n\n  return Circle;\n}(BaseMapDirective);\n\nCircle.ɵfac = function Circle_Factory(t) {\n  return new (t || Circle)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent));\n};\n\nCircle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: Circle,\n  selectors: [[\"circle\"], [\"map-circle\"]],\n  inputs: {\n    center: \"center\",\n    clickable: \"clickable\",\n    draggable: \"draggable\",\n    editable: \"editable\",\n    fillColor: \"fillColor\",\n    fillOpacity: \"fillOpacity\",\n    map: \"map\",\n    radius: \"radius\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    strokePosition: \"strokePosition\",\n    strokeWeight: \"strokeWeight\",\n    visible: \"visible\",\n    zIndex: \"zIndex\",\n    options: \"options\",\n    geoFallbackCenter: \"geoFallbackCenter\"\n  },\n  outputs: {\n    centerChanged: \"centerChanged\",\n    click: \"click\",\n    dblclick: \"dblclick\",\n    drag: \"drag\",\n    dragend: \"dragend\",\n    dragstart: \"dragstart\",\n    mousedown: \"mousedown\",\n    mousemove: \"mousemove\",\n    mouseout: \"mouseout\",\n    mouseover: \"mouseover\",\n    mouseup: \"mouseup\",\n    radiusChanged: \"radiusChanged\",\n    rightclick: \"rightclick\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nCircle.ctorParameters = function () {\n  return [{\n    type: NguiMapComponent\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Circle, [{\n    type: Directive,\n    args: [{\n      selector: 'ngui-map>circle, ngui-map>map-circle',\n      inputs: INPUTS$4,\n      outputs: OUTPUTS$4\n    }]\n  }], function () {\n    return [{\n      type: NguiMapComponent\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$5 = ['controlPosition', 'controls', 'drawingMode', 'featureFactory', 'style', 'geoJson', 'geoJsonUrl'];\nvar OUTPUTS$5 = ['addfeature', 'click', 'dblclick', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'removefeature', 'removeproperty', 'rightclick', 'setgeometry', 'setproperty'];\n\nvar DataLayer = /*#__PURE__*/function (_BaseMapDirective3) {\n  _inherits(DataLayer, _BaseMapDirective3);\n\n  var _super6 = _createSuper(DataLayer);\n\n  /**\n   * @param {?} nguiMapComponent\n   */\n  function DataLayer(nguiMapComponent) {\n    _classCallCheck(this, DataLayer);\n\n    return _super6.call(this, nguiMapComponent, 'Data', INPUTS$5, OUTPUTS$5);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(DataLayer, [{\n    key: \"initialize\",\n    value: function initialize() {\n      if (this['geoJson']) {\n        // addGeoJson from an object\n        this.nguiMapComponent.map.data.addGeoJson(this['geoJson']);\n      } else if (this['geoJsonUrl']) {\n        // loadGeoJson from a URL\n        this.nguiMapComponent.map.data.loadGeoJson(this['geoJsonUrl']);\n      } else {\n        this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n        this.nguiMapComponent.map.data.add(this.objectOptions);\n      } // unlike others, data belongs to map. e.g., map.data.loadGeoJson(), map.data.add()\n\n\n      this.mapObject = this.nguiMapComponent.map.data; // set google events listeners and emits to this outputs listeners\n\n      this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n      this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n      this.initialized$.emit(this.mapObject);\n    }\n  }]);\n\n  return DataLayer;\n}(BaseMapDirective);\n\nDataLayer.ɵfac = function DataLayer_Factory(t) {\n  return new (t || DataLayer)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent));\n};\n\nDataLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DataLayer,\n  selectors: [[\"data-layer\"]],\n  inputs: {\n    controlPosition: \"controlPosition\",\n    controls: \"controls\",\n    drawingMode: \"drawingMode\",\n    featureFactory: \"featureFactory\",\n    style: \"style\",\n    geoJson: \"geoJson\",\n    geoJsonUrl: \"geoJsonUrl\"\n  },\n  outputs: {\n    addfeature: \"addfeature\",\n    click: \"click\",\n    dblclick: \"dblclick\",\n    mousedown: \"mousedown\",\n    mouseout: \"mouseout\",\n    mouseover: \"mouseover\",\n    mouseup: \"mouseup\",\n    removefeature: \"removefeature\",\n    removeproperty: \"removeproperty\",\n    rightclick: \"rightclick\",\n    setgeometry: \"setgeometry\",\n    setproperty: \"setproperty\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nDataLayer.ctorParameters = function () {\n  return [{\n    type: NguiMapComponent\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'ngui-map > data-layer',\n      inputs: INPUTS$5,\n      outputs: OUTPUTS$5\n    }]\n  }], function () {\n    return [{\n      type: NguiMapComponent\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$6 = ['directions', 'draggable', 'hideRouteList', 'infoWindow', 'panel', 'markerOptions', 'polylineOptions', 'preserveViewport', 'routeIndex', 'suppressBicyclingLayer', 'suppressInfoWindows', 'suppressMarkers', 'suppressPolylines'];\nvar OUTPUTS$6 = ['directions_changed'];\n\nvar DirectionsRenderer = /*#__PURE__*/function (_BaseMapDirective4) {\n  _inherits(DirectionsRenderer, _BaseMapDirective4);\n\n  var _super7 = _createSuper(DirectionsRenderer);\n\n  /**\n   * @param {?} nguiMapComponent\n   * @param {?} geolocation\n   */\n  function DirectionsRenderer(nguiMapComponent, geolocation) {\n    var _this24;\n\n    _classCallCheck(this, DirectionsRenderer);\n\n    _this24 = _super7.call(this, nguiMapComponent, 'DirectionsRenderer', INPUTS$6, OUTPUTS$6);\n    _this24.geolocation = geolocation;\n    return _this24;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(DirectionsRenderer, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\n      if (typeof this.objectOptions['panel'] === 'string') {\n        // find a Node for panel\n        this.objectOptions['panel'] = document.querySelector(this.objectOptions['panel']);\n      }\n\n      this.directionsService = new google.maps.DirectionsService();\n      this.directionsRenderer = new google.maps.DirectionsRenderer(this.objectOptions);\n      this.directionsRenderer.setMap(this.nguiMapComponent.map); // set google events listeners and emidirectionsRenderer to this outputs listeners\n\n      this.showDirections(this.directionsRequest);\n      this.nguiMap.setObjectEvents(this.outputs, this, 'directionsRenderer');\n      this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n      this.initialized$.emit(this.directionsRenderer);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var\n      /** @type {?} */\n      newOptions = {};\n\n      for (var\n      /** @type {?} */\n      key in changes) {\n        if (this.inputs.indexOf(key) !== -1) {\n          newOptions[key] = this.optionBuilder.googlize(changes[key].currentValue);\n        }\n      }\n\n      if (changes['directionsRequest'] && this.directionsRenderer) {\n        this.directionsService && this.showDirections(this.directionsRequest);\n      }\n    }\n    /**\n     * @param {?} directionsRequest\n     * @return {?}\n     */\n\n  }, {\n    key: \"showDirections\",\n    value: function showDirections(directionsRequest) {\n      var _this25 = this;\n\n      this.directionsService.route(directionsRequest, function (response, status) {\n        // in some-case the callback is called during destroy component,\n        // we should make sure directionsRenderer is still defined (cancelling `route` callback is not possible).\n        if (!_this25.directionsRenderer) {\n          return;\n        }\n\n        if (status === google.maps.DirectionsStatus.OK) {\n          _this25.directionsRenderer.setDirections(response);\n        } else {\n          console.error('Directions request failed due to ' + status);\n        }\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      _get(_getPrototypeOf(DirectionsRenderer.prototype), \"ngOnDestroy\", this).call(this);\n\n      this.nguiMap.clearObjectEvents(this.outputs, this, 'directionsRenderer');\n    }\n  }]);\n\n  return DirectionsRenderer;\n}(BaseMapDirective);\n\nDirectionsRenderer.ɵfac = function DirectionsRenderer_Factory(t) {\n  return new (t || DirectionsRenderer)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent), ɵngcc0.ɵɵdirectiveInject(NavigatorGeolocation));\n};\n\nDirectionsRenderer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DirectionsRenderer,\n  selectors: [[\"directions-renderer\"]],\n  inputs: {\n    directions: \"directions\",\n    draggable: \"draggable\",\n    hideRouteList: \"hideRouteList\",\n    infoWindow: \"infoWindow\",\n    panel: \"panel\",\n    markerOptions: \"markerOptions\",\n    polylineOptions: \"polylineOptions\",\n    preserveViewport: \"preserveViewport\",\n    routeIndex: \"routeIndex\",\n    suppressBicyclingLayer: \"suppressBicyclingLayer\",\n    suppressInfoWindows: \"suppressInfoWindows\",\n    suppressMarkers: \"suppressMarkers\",\n    suppressPolylines: \"suppressPolylines\",\n    directionsRequest: [\"directions-request\", \"directionsRequest\"]\n  },\n  outputs: {\n    directions_changed: \"directions_changed\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nDirectionsRenderer.ctorParameters = function () {\n  return [{\n    type: NguiMapComponent\n  }, {\n    type: NavigatorGeolocation\n  }];\n};\n\nDirectionsRenderer.propDecorators = {\n  \"directionsRequest\": [{\n    type: Input,\n    args: ['directions-request']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DirectionsRenderer, [{\n    type: Directive,\n    args: [{\n      selector: 'ngui-map > directions-renderer',\n      inputs: INPUTS$6,\n      outputs: OUTPUTS$6\n    }]\n  }], function () {\n    return [{\n      type: NguiMapComponent\n    }, {\n      type: NavigatorGeolocation\n    }];\n  }, {\n    directionsRequest: [{\n      type: Input,\n      args: ['directions-request']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$7 = ['options', 'circleOptions', 'drawingControl', 'drawingControlOptions', 'drawingMode', 'map', 'markerOptions', 'polygonOptions', 'polylineOptions', 'rectangleOptions'];\nvar OUTPUTS$7 = ['circlecomplete', 'markercomplete', 'overlaycomplete', 'polygoncomplete', 'polylinecomplete', 'rectanglecomplete'];\n\nvar DrawingManager = /*#__PURE__*/function (_BaseMapDirective5) {\n  _inherits(DrawingManager, _BaseMapDirective5);\n\n  var _super8 = _createSuper(DrawingManager);\n\n  /**\n   * @param {?} nguiMapComp\n   */\n  function DrawingManager(nguiMapComp) {\n    var _this26;\n\n    _classCallCheck(this, DrawingManager);\n\n    _this26 = _super8.call(this, nguiMapComp, 'DrawingManager', INPUTS$7, OUTPUTS$7);\n    _this26.libraryName = 'drawing';\n    return _this26;\n  }\n\n  return DrawingManager;\n}(BaseMapDirective);\n\nDrawingManager.ɵfac = function DrawingManager_Factory(t) {\n  return new (t || DrawingManager)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent));\n};\n\nDrawingManager.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DrawingManager,\n  selectors: [[\"drawing-manager\"]],\n  inputs: {\n    options: \"options\",\n    circleOptions: \"circleOptions\",\n    drawingControl: \"drawingControl\",\n    drawingControlOptions: \"drawingControlOptions\",\n    drawingMode: \"drawingMode\",\n    map: \"map\",\n    markerOptions: \"markerOptions\",\n    polygonOptions: \"polygonOptions\",\n    polylineOptions: \"polylineOptions\",\n    rectangleOptions: \"rectangleOptions\"\n  },\n  outputs: {\n    circlecomplete: \"circlecomplete\",\n    markercomplete: \"markercomplete\",\n    overlaycomplete: \"overlaycomplete\",\n    polygoncomplete: \"polygoncomplete\",\n    polylinecomplete: \"polylinecomplete\",\n    rectanglecomplete: \"rectanglecomplete\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nDrawingManager.ctorParameters = function () {\n  return [{\n    type: NguiMapComponent\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DrawingManager, [{\n    type: Directive,\n    args: [{\n      selector: 'ngui-map > drawing-manager',\n      inputs: INPUTS$7,\n      outputs: OUTPUTS$7\n    }]\n  }], function () {\n    return [{\n      type: NguiMapComponent\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$8 = ['url', 'bounds', 'clickable', 'opacity'];\nvar OUTPUTS$8 = ['click', 'dblclick'];\n\nvar GroundOverlay = /*#__PURE__*/function (_BaseMapDirective6) {\n  _inherits(GroundOverlay, _BaseMapDirective6);\n\n  var _super9 = _createSuper(GroundOverlay);\n\n  /**\n   * @param {?} nguiMapComp\n   */\n  function GroundOverlay(nguiMapComp) {\n    var _this27;\n\n    _classCallCheck(this, GroundOverlay);\n\n    _this27 = _super9.call(this, nguiMapComp, 'GroundOverlay', INPUTS$8, OUTPUTS$8);\n    _this27.objectOptions =\n    /** @type {?} */\n    {};\n    return _this27;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(GroundOverlay, [{\n    key: \"initialize\",\n    value: function initialize() {\n      // url, bounds are not the options of GroundOverlay\n      this.objectOptions = this.optionBuilder.googlizeAllInputs(['clickable', 'opacity'], this); // noinspection TypeScriptUnresolvedFunction\n\n      this.mapObject = new google.maps.GroundOverlay(this['url'], this['bounds'], this.objectOptions);\n      this.mapObject.setMap(this.nguiMapComponent.map);\n      this.mapObject['mapObjectName'] = this.mapObjectName; // set google events listeners and emits to this outputs listeners\n\n      this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n      this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n      this.initialized$.emit(this.mapObject);\n    }\n  }]);\n\n  return GroundOverlay;\n}(BaseMapDirective);\n\nGroundOverlay.ɵfac = function GroundOverlay_Factory(t) {\n  return new (t || GroundOverlay)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent));\n};\n\nGroundOverlay.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: GroundOverlay,\n  selectors: [[\"ground-overlay\"]],\n  inputs: {\n    url: \"url\",\n    bounds: \"bounds\",\n    clickable: \"clickable\",\n    opacity: \"opacity\"\n  },\n  outputs: {\n    click: \"click\",\n    dblclick: \"dblclick\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nGroundOverlay.ctorParameters = function () {\n  return [{\n    type: NguiMapComponent\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GroundOverlay, [{\n    type: Directive,\n    args: [{\n      selector: 'ngui-map > ground-overlay',\n      inputs: INPUTS$8,\n      outputs: OUTPUTS$8\n    }]\n  }], function () {\n    return [{\n      type: NguiMapComponent\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$9 = ['data', 'dissipating', 'gradient', 'maxIntensity', 'opacity', 'radius', 'options'];\nvar OUTPUTS$9 = [];\n\nvar HeatmapLayer = /*#__PURE__*/function (_BaseMapDirective7) {\n  _inherits(HeatmapLayer, _BaseMapDirective7);\n\n  var _super10 = _createSuper(HeatmapLayer);\n\n  /**\n   * @param {?} nguiMapComp\n   */\n  function HeatmapLayer(nguiMapComp) {\n    var _this28;\n\n    _classCallCheck(this, HeatmapLayer);\n\n    _this28 = _super10.call(this, nguiMapComp, 'HeatmapLayer', INPUTS$9, OUTPUTS$9);\n    _this28.libraryName = 'visualization';\n    return _this28;\n  }\n\n  return HeatmapLayer;\n}(BaseMapDirective);\n\nHeatmapLayer.ɵfac = function HeatmapLayer_Factory(t) {\n  return new (t || HeatmapLayer)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent));\n};\n\nHeatmapLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: HeatmapLayer,\n  selectors: [[\"heatmap-layer\"]],\n  inputs: {\n    data: \"data\",\n    dissipating: \"dissipating\",\n    gradient: \"gradient\",\n    maxIntensity: \"maxIntensity\",\n    opacity: \"opacity\",\n    radius: \"radius\",\n    options: \"options\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nHeatmapLayer.ctorParameters = function () {\n  return [{\n    type: NguiMapComponent\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeatmapLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'ngui-map > heatmap-layer',\n      inputs: INPUTS$9,\n      outputs: OUTPUTS$9\n    }]\n  }], function () {\n    return [{\n      type: NguiMapComponent\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$10 = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex', 'options'];\nvar OUTPUTS$10 = ['click', 'defaultviewport_changed', 'status_changed'];\n\nvar KmlLayer = /*#__PURE__*/function (_BaseMapDirective8) {\n  _inherits(KmlLayer, _BaseMapDirective8);\n\n  var _super11 = _createSuper(KmlLayer);\n\n  /**\n   * @param {?} nguiMapComp\n   */\n  function KmlLayer(nguiMapComp) {\n    _classCallCheck(this, KmlLayer);\n\n    return _super11.call(this, nguiMapComp, 'KmlLayer', INPUTS$10, OUTPUTS$10);\n  }\n\n  return KmlLayer;\n}(BaseMapDirective);\n\nKmlLayer.ɵfac = function KmlLayer_Factory(t) {\n  return new (t || KmlLayer)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent));\n};\n\nKmlLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: KmlLayer,\n  selectors: [[\"kml-layer\"]],\n  inputs: {\n    clickable: \"clickable\",\n    preserveViewport: \"preserveViewport\",\n    screenOverlays: \"screenOverlays\",\n    suppressInfoWindows: \"suppressInfoWindows\",\n    url: \"url\",\n    zIndex: \"zIndex\",\n    options: \"options\"\n  },\n  outputs: {\n    click: \"click\",\n    defaultviewport_changed: \"defaultviewport_changed\",\n    status_changed: \"status_changed\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nKmlLayer.ctorParameters = function () {\n  return [{\n    type: NguiMapComponent\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KmlLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'ngui-map > kml-layer',\n      inputs: INPUTS$10,\n      outputs: OUTPUTS$10\n    }]\n  }], function () {\n    return [{\n      type: NguiMapComponent\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$11 = ['anchorPoint', 'animation', 'clickable', 'cursor', 'draggable', 'icon', 'label', 'opacity', 'optimized', 'place', 'position', 'shape', 'title', 'visible', 'zIndex', 'options', 'geoFallbackPosition'];\nvar OUTPUTS$11 = ['animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged', 'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick', 'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged'];\n\nvar Marker = /*#__PURE__*/function (_BaseMapDirective9) {\n  _inherits(Marker, _BaseMapDirective9);\n\n  var _super12 = _createSuper(Marker);\n\n  /**\n   * @param {?} nguiMapComp\n   */\n  function Marker(nguiMapComp) {\n    var _this29;\n\n    _classCallCheck(this, Marker);\n\n    _this29 = _super12.call(this, nguiMapComp, 'Marker', INPUTS$11, OUTPUTS$11);\n    _this29.nguiMapComp = nguiMapComp;\n    _this29.objectOptions =\n    /** @type {?} */\n    {};\n    return _this29;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(Marker, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this30 = this;\n\n      if (this.nguiMapComponent.mapIdledOnce) {\n        // map is ready already\n        this.initialize();\n      } else {\n        this.nguiMapComponent.mapReady$.subscribe(function (map) {\n          return _this30.initialize();\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      _get(_getPrototypeOf(Marker.prototype), \"initialize\", this).call(this);\n\n      this.setPosition();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"setPosition\",\n    value: function setPosition() {\n      var _this31 = this;\n\n      if (!this['position']) {\n        this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(function (position) {\n          var\n          /** @type {?} */\n          latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n\n          _this31.mapObject.setPosition(latLng);\n        }, function (error) {\n          console.error('ngui-map, error finding the current location');\n\n          _this31.mapObject.setPosition(_this31.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n        }));\n      } else if (typeof this['position'] === 'string') {\n        this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({\n          address: this['position']\n        }).subscribe(function (results) {\n          _this31.mapObject.setPosition(results[0].geometry.location);\n        }, function (error) {\n          console.error('ngui-map, error finding the location from', _this31['position']);\n\n          _this31.mapObject.setPosition(_this31.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n        }));\n      }\n    }\n  }]);\n\n  return Marker;\n}(BaseMapDirective);\n\nMarker.ɵfac = function Marker_Factory(t) {\n  return new (t || Marker)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent));\n};\n\nMarker.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: Marker,\n  selectors: [[\"marker\"]],\n  inputs: {\n    anchorPoint: \"anchorPoint\",\n    animation: \"animation\",\n    clickable: \"clickable\",\n    cursor: \"cursor\",\n    draggable: \"draggable\",\n    icon: \"icon\",\n    label: \"label\",\n    opacity: \"opacity\",\n    optimized: \"optimized\",\n    place: \"place\",\n    position: \"position\",\n    shape: \"shape\",\n    title: \"title\",\n    visible: \"visible\",\n    zIndex: \"zIndex\",\n    options: \"options\",\n    geoFallbackPosition: \"geoFallbackPosition\"\n  },\n  outputs: {\n    animationChanged: \"animationChanged\",\n    click: \"click\",\n    clickableChanged: \"clickableChanged\",\n    cursorChanged: \"cursorChanged\",\n    dblclick: \"dblclick\",\n    drag: \"drag\",\n    dragend: \"dragend\",\n    draggableChanged: \"draggableChanged\",\n    dragstart: \"dragstart\",\n    flatChanged: \"flatChanged\",\n    iconChanged: \"iconChanged\",\n    mousedown: \"mousedown\",\n    mouseout: \"mouseout\",\n    mouseover: \"mouseover\",\n    mouseup: \"mouseup\",\n    positionChanged: \"positionChanged\",\n    rightclick: \"rightclick\",\n    shapeChanged: \"shapeChanged\",\n    titleChanged: \"titleChanged\",\n    visibleChanged: \"visibleChanged\",\n    zindexChanged: \"zindexChanged\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nMarker.ctorParameters = function () {\n  return [{\n    type: NguiMapComponent\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Marker, [{\n    type: Directive,\n    args: [{\n      selector: 'ngui-map > marker',\n      inputs: INPUTS$11,\n      outputs: OUTPUTS$11\n    }]\n  }], function () {\n    return [{\n      type: NguiMapComponent\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar PlacesAutoComplete =\n/**\n * @param {?} optionBuilder\n * @param {?} elementRef\n * @param {?} apiLoader\n */\nfunction PlacesAutoComplete(optionBuilder, elementRef, apiLoader) {\n  var _this32 = this;\n\n  _classCallCheck(this, PlacesAutoComplete);\n\n  this.optionBuilder = optionBuilder;\n  this.elementRef = elementRef;\n  this.apiLoader = apiLoader;\n  this.place_changed = new EventEmitter();\n  this.initialized$ = new EventEmitter(); // only called when map is ready\n\n  this.initialize = function () {\n    _this32.objectOptions = _this32.optionBuilder.googlizeAllInputs(['bounds', 'componentRestrictions', 'types'], _this32);\n\n    if (!google.maps.places) {\n      throw missingLibraryError('PlacesAutoComplete', 'places');\n    }\n\n    _this32.autocomplete = new google.maps.places.Autocomplete(_this32.elementRef.nativeElement, _this32.objectOptions);\n\n    _this32.autocomplete.addListener('place_changed', function (place) {\n      _this32.place_changed.emit(_this32.autocomplete.getPlace());\n    });\n\n    _this32.initialized$.emit(_this32.autocomplete);\n  };\n\n  apiLoader.load();\n  apiLoader.api$.pipe(first()).subscribe(function () {\n    return _this32.initialize();\n  });\n};\n\nPlacesAutoComplete.ɵfac = function PlacesAutoComplete_Factory(t) {\n  return new (t || PlacesAutoComplete)(ɵngcc0.ɵɵdirectiveInject(OptionBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NgMapApiLoader));\n};\n\nPlacesAutoComplete.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: PlacesAutoComplete,\n  selectors: [[\"\", \"places-auto-complete\", \"\"]],\n  inputs: {\n    bounds: \"bounds\",\n    componentRestrictions: \"componentRestrictions\",\n    types: \"types\"\n  },\n  outputs: {\n    place_changed: \"place_changed\",\n    initialized$: \"initialized$\"\n  }\n});\n/** @nocollapse */\n\nPlacesAutoComplete.ctorParameters = function () {\n  return [{\n    type: OptionBuilder\n  }, {\n    type: ElementRef\n  }, {\n    type: NgMapApiLoader\n  }];\n};\n\nPlacesAutoComplete.propDecorators = {\n  \"bounds\": [{\n    type: Input\n  }],\n  \"componentRestrictions\": [{\n    type: Input\n  }],\n  \"types\": [{\n    type: Input\n  }],\n  \"place_changed\": [{\n    type: Output,\n    args: ['place_changed']\n  }],\n  \"initialized$\": [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlacesAutoComplete, [{\n    type: Directive,\n    args: [{\n      selector: '[places-auto-complete]'\n    }]\n  }], function () {\n    return [{\n      type: OptionBuilder\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NgMapApiLoader\n    }];\n  }, {\n    place_changed: [{\n      type: Output,\n      args: ['place_changed']\n    }],\n    initialized$: [{\n      type: Output\n    }],\n    bounds: [{\n      type: Input\n    }],\n    componentRestrictions: [{\n      type: Input\n    }],\n    types: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$12 = ['clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'paths', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options'];\nvar OUTPUTS$12 = ['click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'];\n\nvar Polygon = /*#__PURE__*/function (_BaseMapDirective10) {\n  _inherits(Polygon, _BaseMapDirective10);\n\n  var _super13 = _createSuper(Polygon);\n\n  /**\n   * @param {?} nguiMapComp\n   */\n  function Polygon(nguiMapComp) {\n    _classCallCheck(this, Polygon);\n\n    return _super13.call(this, nguiMapComp, 'Polygon', INPUTS$12, OUTPUTS$12);\n  }\n\n  return Polygon;\n}(BaseMapDirective);\n\nPolygon.ɵfac = function Polygon_Factory(t) {\n  return new (t || Polygon)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent));\n};\n\nPolygon.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: Polygon,\n  selectors: [[\"polygon\"], [\"map-polygon\"]],\n  inputs: {\n    clickable: \"clickable\",\n    draggable: \"draggable\",\n    editable: \"editable\",\n    fillColor: \"fillColor\",\n    fillOpacity: \"fillOpacity\",\n    geodesic: \"geodesic\",\n    paths: \"paths\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    strokePosition: \"strokePosition\",\n    strokeWeight: \"strokeWeight\",\n    visible: \"visible\",\n    zIndex: \"zIndex\",\n    options: \"options\"\n  },\n  outputs: {\n    click: \"click\",\n    dblclick: \"dblclick\",\n    drag: \"drag\",\n    dragend: \"dragend\",\n    dragstart: \"dragstart\",\n    mousedown: \"mousedown\",\n    mousemove: \"mousemove\",\n    mouseout: \"mouseout\",\n    mouseover: \"mouseover\",\n    mouseup: \"mouseup\",\n    rightclick: \"rightclick\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nPolygon.ctorParameters = function () {\n  return [{\n    type: NguiMapComponent\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Polygon, [{\n    type: Directive,\n    args: [{\n      selector: 'ngui-map>polygon, ngui-map>map-polygon',\n      inputs: INPUTS$12,\n      outputs: OUTPUTS$12\n    }]\n  }], function () {\n    return [{\n      type: NguiMapComponent\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$13 = ['clickable', 'draggable', 'editable', 'geodesic', 'icons', 'path', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'options'];\nvar OUTPUTS$13 = ['click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'];\n\nvar Polyline = /*#__PURE__*/function (_BaseMapDirective11) {\n  _inherits(Polyline, _BaseMapDirective11);\n\n  var _super14 = _createSuper(Polyline);\n\n  /**\n   * @param {?} nguiMapComp\n   */\n  function Polyline(nguiMapComp) {\n    _classCallCheck(this, Polyline);\n\n    return _super14.call(this, nguiMapComp, 'Polyline', INPUTS$13, OUTPUTS$13);\n  }\n\n  return Polyline;\n}(BaseMapDirective);\n\nPolyline.ɵfac = function Polyline_Factory(t) {\n  return new (t || Polyline)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent));\n};\n\nPolyline.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: Polyline,\n  selectors: [[\"polyline\"]],\n  inputs: {\n    clickable: \"clickable\",\n    draggable: \"draggable\",\n    editable: \"editable\",\n    geodesic: \"geodesic\",\n    icons: \"icons\",\n    path: \"path\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    strokeWeight: \"strokeWeight\",\n    visible: \"visible\",\n    zIndex: \"zIndex\",\n    options: \"options\"\n  },\n  outputs: {\n    click: \"click\",\n    dblclick: \"dblclick\",\n    drag: \"drag\",\n    dragend: \"dragend\",\n    dragstart: \"dragstart\",\n    mousedown: \"mousedown\",\n    mousemove: \"mousemove\",\n    mouseout: \"mouseout\",\n    mouseover: \"mouseover\",\n    mouseup: \"mouseup\",\n    rightclick: \"rightclick\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nPolyline.ctorParameters = function () {\n  return [{\n    type: NguiMapComponent\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Polyline, [{\n    type: Directive,\n    args: [{\n      selector: 'ngui-map > polyline',\n      inputs: INPUTS$13,\n      outputs: OUTPUTS$13\n    }]\n  }], function () {\n    return [{\n      type: NguiMapComponent\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$14 = ['selector', 'options', 'addressControl', 'addressControlOptions', 'clickToGo', 'disableDefaultUI', 'disableDoubleClickZoom', 'enableCloseButton', 'fullscreenControl', 'fullscreenControlOptions', 'imageDateControl', 'linksControl', 'motionTracking', 'motionTrackingControl', 'panControl', 'panControlOptions', 'pano', 'position', 'pov', 'scrollwheel', 'showRoadLabels', 'visible', 'zoomControl', 'zoomControlOptions'];\nvar OUTPUTS$14 = ['closeclick', 'pano_changed', 'position_changed', 'pov_changed', 'resize', 'status_changed', 'visible_changed', 'zoom_changed'];\n\nvar StreetViewPanorama = /*#__PURE__*/function (_BaseMapDirective12) {\n  _inherits(StreetViewPanorama, _BaseMapDirective12);\n\n  var _super15 = _createSuper(StreetViewPanorama);\n\n  /**\n   * @param {?} nguiMapComp\n   */\n  function StreetViewPanorama(nguiMapComp) {\n    _classCallCheck(this, StreetViewPanorama);\n\n    return _super15.call(this, nguiMapComp, 'StreetViewPanorama', INPUTS$14, OUTPUTS$14);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(StreetViewPanorama, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n      var\n      /** @type {?} */\n      element;\n\n      if (this.objectOptions.selector) {\n        // noinspection TypeScriptValidateTypes\n        element = document.querySelector(this['selector']);\n        delete this.objectOptions.selector;\n      } else {\n        element = this.nguiMapComponent.el;\n      } // will be set after geocoded\n\n\n      typeof this.objectOptions.position === 'string' && delete this.objectOptions.position;\n      this.mapObject = new google.maps[this.mapObjectName](element, this.objectOptions);\n      this.mapObject['mapObjectName'] = this.mapObjectName;\n      this.mapObject['nguiMapComponent'] = this.nguiMapComponent; // set google events listeners and emits to this outputs listeners\n\n      this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n      this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n      this.initialized$.emit(this.mapObject);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.nguiMapComponent.el) {\n        this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');\n      }\n    }\n  }]);\n\n  return StreetViewPanorama;\n}(BaseMapDirective);\n\nStreetViewPanorama.ɵfac = function StreetViewPanorama_Factory(t) {\n  return new (t || StreetViewPanorama)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent));\n};\n\nStreetViewPanorama.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: StreetViewPanorama,\n  selectors: [[\"street-view-panorama\"]],\n  inputs: {\n    selector: \"selector\",\n    options: \"options\",\n    addressControl: \"addressControl\",\n    addressControlOptions: \"addressControlOptions\",\n    clickToGo: \"clickToGo\",\n    disableDefaultUI: \"disableDefaultUI\",\n    disableDoubleClickZoom: \"disableDoubleClickZoom\",\n    enableCloseButton: \"enableCloseButton\",\n    fullscreenControl: \"fullscreenControl\",\n    fullscreenControlOptions: \"fullscreenControlOptions\",\n    imageDateControl: \"imageDateControl\",\n    linksControl: \"linksControl\",\n    motionTracking: \"motionTracking\",\n    motionTrackingControl: \"motionTrackingControl\",\n    panControl: \"panControl\",\n    panControlOptions: \"panControlOptions\",\n    pano: \"pano\",\n    position: \"position\",\n    pov: \"pov\",\n    scrollwheel: \"scrollwheel\",\n    showRoadLabels: \"showRoadLabels\",\n    visible: \"visible\",\n    zoomControl: \"zoomControl\",\n    zoomControlOptions: \"zoomControlOptions\"\n  },\n  outputs: {\n    closeclick: \"closeclick\",\n    pano_changed: \"pano_changed\",\n    position_changed: \"position_changed\",\n    pov_changed: \"pov_changed\",\n    resize: \"resize\",\n    status_changed: \"status_changed\",\n    visible_changed: \"visible_changed\",\n    zoom_changed: \"zoom_changed\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nStreetViewPanorama.ctorParameters = function () {\n  return [{\n    type: NguiMapComponent\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StreetViewPanorama, [{\n    type: Directive,\n    args: [{\n      selector: 'ngui-map > street-view-panorama',\n      inputs: INPUTS$14,\n      outputs: OUTPUTS$14\n    }]\n  }], function () {\n    return [{\n      type: NguiMapComponent\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$15 = ['autoRefresh', 'options'];\nvar OUTPUTS$15 = [];\n\nvar TrafficLayer = /*#__PURE__*/function (_BaseMapDirective13) {\n  _inherits(TrafficLayer, _BaseMapDirective13);\n\n  var _super16 = _createSuper(TrafficLayer);\n\n  /**\n   * @param {?} nguiMapComp\n   */\n  function TrafficLayer(nguiMapComp) {\n    _classCallCheck(this, TrafficLayer);\n\n    return _super16.call(this, nguiMapComp, 'TrafficLayer', INPUTS$15, OUTPUTS$15);\n  }\n\n  return TrafficLayer;\n}(BaseMapDirective);\n\nTrafficLayer.ɵfac = function TrafficLayer_Factory(t) {\n  return new (t || TrafficLayer)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent));\n};\n\nTrafficLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TrafficLayer,\n  selectors: [[\"traffic-layer\"]],\n  inputs: {\n    autoRefresh: \"autoRefresh\",\n    options: \"options\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nTrafficLayer.ctorParameters = function () {\n  return [{\n    type: NguiMapComponent\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TrafficLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'ngui-map > traffic-layer',\n      inputs: INPUTS$15,\n      outputs: OUTPUTS$15\n    }]\n  }], function () {\n    return [{\n      type: NguiMapComponent\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar INPUTS$16 = [];\nvar OUTPUTS$16 = [];\n\nvar TransitLayer = /*#__PURE__*/function (_BaseMapDirective14) {\n  _inherits(TransitLayer, _BaseMapDirective14);\n\n  var _super17 = _createSuper(TransitLayer);\n\n  /**\n   * @param {?} nguiMapComp\n   */\n  function TransitLayer(nguiMapComp) {\n    _classCallCheck(this, TransitLayer);\n\n    return _super17.call(this, nguiMapComp, 'TransitLayer', INPUTS$16, OUTPUTS$16);\n  }\n\n  return TransitLayer;\n}(BaseMapDirective);\n\nTransitLayer.ɵfac = function TransitLayer_Factory(t) {\n  return new (t || TransitLayer)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent));\n};\n\nTransitLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TransitLayer,\n  selectors: [[\"transit-layer\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nTransitLayer.ctorParameters = function () {\n  return [{\n    type: NguiMapComponent\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransitLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'ngui-map > transit-layer',\n      inputs: INPUTS$16,\n      outputs: OUTPUTS$16\n    }]\n  }], function () {\n    return [{\n      type: NguiMapComponent\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar COMPONENTS_DIRECTIVES = [NguiMapComponent, InfoWindow, Marker, Circle, CustomMarker, Polygon, InfoWindow, Polyline, GroundOverlay, TransitLayer, TrafficLayer, HeatmapLayer, BicyclingLayer, KmlLayer, DataLayer, StreetViewPanorama, PlacesAutoComplete, DirectionsRenderer, DrawingManager];\n\nvar NguiMapModule = /*#__PURE__*/function () {\n  function NguiMapModule() {\n    _classCallCheck(this, NguiMapModule);\n  }\n\n  _createClass(NguiMapModule, null, [{\n    key: \"forRoot\",\n    value:\n    /**\n     * @param {?=} config\n     * @return {?}\n     */\n    function forRoot() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return {\n        ngModule: NguiMapModule,\n        providers: [{\n          provide: NG_MAP_CONFIG_TOKEN,\n          useValue: config\n        }]\n      };\n    }\n  }]);\n\n  return NguiMapModule;\n}();\n\nNguiMapModule.ɵfac = function NguiMapModule_Factory(t) {\n  return new (t || NguiMapModule)();\n};\n\nNguiMapModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NguiMapModule\n});\nNguiMapModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [GeoCoder, NavigatorGeolocation, NguiMap, OptionBuilder, {\n    provide: NgMapApiLoader,\n    useClass: NgMapAsyncCallbackApiLoader\n  }],\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguiMapModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: COMPONENTS_DIRECTIVES,\n      exports: [COMPONENTS_DIRECTIVES],\n      providers: [GeoCoder, NavigatorGeolocation, NguiMap, OptionBuilder, {\n        provide: NgMapApiLoader,\n        useClass: NgMapAsyncCallbackApiLoader\n      }]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NguiMapModule, {\n    declarations: function declarations() {\n      return [NguiMapComponent, InfoWindow, Marker, Circle, CustomMarker, Polygon, InfoWindow, Polyline, GroundOverlay, TransitLayer, TrafficLayer, HeatmapLayer, BicyclingLayer, KmlLayer, DataLayer, StreetViewPanorama, PlacesAutoComplete, DirectionsRenderer, DrawingManager];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NguiMapComponent, InfoWindow, Marker, Circle, CustomMarker, Polygon, InfoWindow, Polyline, GroundOverlay, TransitLayer, TrafficLayer, HeatmapLayer, BicyclingLayer, KmlLayer, DataLayer, StreetViewPanorama, PlacesAutoComplete, DirectionsRenderer, DrawingManager];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BicyclingLayer, NavigatorGeolocation, OptionBuilder, NG_MAP_CONFIG_TOKEN, NgMapApiLoader, NgMapAsyncApiLoader, NgMapAsyncCallbackApiLoader, NguiMapComponent, InfoWindow, CustomMarker, Circle, DataLayer, DirectionsRenderer, DrawingManager, GeoCoder, GroundOverlay, HeatmapLayer, KmlLayer, Marker, NguiMap, PlacesAutoComplete, Polygon, Polyline, StreetViewPanorama, TrafficLayer, TransitLayer, NguiMapModule, BaseMapDirective as ɵa }; //# sourceMappingURL=ngui-map.js.map","map":{"version":3,"sources":["D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@ngui/map/__ivy_ngcc__/esm2015/ngui-map.js"],"names":["EventEmitter","Output","Injectable","InjectionToken","Inject","Optional","NgZone","Component","ElementRef","ViewEncapsulation","Directive","ViewChild","ViewContainerRef","Input","NgModule","Observable","ReplaySubject","Subject","debounceTime","tap","first","CommonModule","ɵngcc0","_c0","_c1","jsonize","str","JSON","parse","e","replace","_","$1","getJSON","input","re","match","toCamelCase","letter","index","toLowerCase","toUpperCase","isMapsApiLoaded","google","maps","missingLibraryError","component","libName","Error","BaseMapDirective","nguiMapComponent","mapObjectName","inputs","outputs","initialized$","_subscriptions","nguiMap","optionBuilder","forEach","output","mapIdledOnce","initialize","mapReady$","subscribe","map","objectOptions","googlizeAllInputs","position","center","libraryName","mapObject","setMap","setObjectEvents","addToMapObjectGroup","emit","changes","updateGoogleObject","subscription","unsubscribe","removeFromMapObjectGroup","clearObjectEvents","ɵfac","BaseMapDirective_Factory","t","ɵɵinvalidFactory","ɵdir","ɵɵdefineDirective","type","features","ɵɵNgOnChangesFeature","propDecorators","OptionBuilder","definedInputs","userInputs","options","onlyOptionsGiven","console","error","undefined","googlize","key","val","getJSONParsed","getAnyMapObject","getAnyMapConstant","getDateObject","Array","LatLngBounds","getMapIcons","getLatLng","Object","getMarkerIcon","getMapControlOption","constructor","el","LatLng","isNaN","parseFloat","isFinite","newOptions","googlizeMultiple","Function","matches","capitalizedKey","charAt","slice","controlOptions","newControlOptions","value","MapTypeId","objName","ControlPosition","Date","icon","path","SymbolPath","arr","Point","Size","i","length","OptionBuilder_Factory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","NavigatorGeolocation","geoLocationOptions","timeout","responseObserver","navigator","geolocation","getCurrentPosition","next","complete","evt","NavigatorGeolocation_Factory","NG_MAP_CONFIG_TOKEN","NgMapApiLoader","config","api$","apiUrl","NgMapApiLoader_Factory","NgMapAsyncCallbackApiLoader","zone","window","document","querySelector","push","componentFn","addGoogleMapsApi","nguiMapRef","run","splice","script","createElement","id","indexOf","src","appendChild","NgMapAsyncCallbackApiLoader_Factory","ɵɵinject","ctorParameters","decorators","args","NgMapAsyncApiLoader","async","onload","NgMapAsyncApiLoader_Factory","GeoCoder","apiLoader","apiLoaderSubs","requestGeocode","sub","observer","geocoder","Geocoder","geocode","results","status","GeocoderStatus","OK","GeoCoder_Factory","NguiMap","geoCoder","object","currentValue","setMethodName","x","address","geometry","location","definedEvents","thisObj","prefix","definedEvent","eventName","getEventName","runOutsideAngular","addListener","event","param","target","clearListeners","NguiMap_Factory","INPUTS","OUTPUTS","NguiMapComponent","elementRef","mapOptions","inputChanges$","infoWindows","initializeMapAfterDisplayed","load","apiLoaderSub","pipe","initializeMap","offsetWidth","nativeElement","zoom","Map","setCenter","setTimeout","latLng","coords","latitude","longitude","anchor","open","close","groupName","NguiMapComponent_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","backgroundColor","disableDefaultUI","disableDoubleClickZoom","draggable","draggableCursor","draggingCursor","heading","keyboardShortcuts","mapMaker","mapTypeControl","mapTypeId","maxZoom","minZoom","noClear","overviewMapControl","panControl","panControlOptions","rotateControl","scaleControl","scrollwheel","streetView","styles","tilt","streetViewControl","zoomControl","zoomControlOptions","mapTypeControlOptions","overviewMapControlOptions","rotateControlOptions","scaleControlOptions","streetViewControlOptions","fullscreenControl","fullscreenControlOptions","geoFallbackCenter","bounds_changed","center_changed","click","dblclick","drag","dragend","dragstart","heading_changed","idle","maptypeid_changed","mousemove","mouseout","mouseover","projection_changed","resize","rightclick","tilesloaded","tile_changed","zoom_changed","mapClick","mapMouseover","mapMouseout","mapMousemove","mapDrag","mapDragend","mapDragstart","ɵɵProvidersFeature","ngContentSelectors","decls","vars","consts","template","NguiMapComponent_Template","rf","ctx","ɵɵprojectionDef","ɵɵelement","ɵɵprojection","encapsulation","selector","providers","None","INPUTS$1","OUTPUTS$1","BicyclingLayer","nguiMapComp","BicyclingLayer_Factory","ɵɵInheritDefinitionFeature","INPUTS$2","OUTPUTS$2","InfoWindow","style","display","infoWindow","setContent","element","InfoWindow_Factory","viewQuery","InfoWindow_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","content","disableAutoPan","maxWidth","pixelOffset","zIndex","closeclick","content_changed","domready","position_changed","zindex_changed","InfoWindow_Template","ɵɵelementStart","ɵɵelementEnd","read","INPUTS$3","OUTPUTS$3","getCustomMarkerOverlayView","htmlEl","CustomMarkerOverlayView","visible","setPosition","visibility","name","lng","getProjection","positionOnMap","projection","posPixel","fromLatLngToDivPixel","Math","round","y","offsetHeight","left","top","getPanes","overlayMouseTarget","setZIndex","setVisible","OverlayView","CustomMarker","CustomMarker_Factory","animationChanged","clickableChanged","cursorChanged","draggableChanged","flatChanged","iconChanged","mousedown","mouseup","positionChanged","shapeChanged","titleChanged","visibleChanged","zindexChanged","map_click","map_mouseover","map_mouseout","map_mouseup","map_mousedown","map_drag","map_dragend","CustomMarker_Template","INPUTS$4","OUTPUTS$4","Circle","Circle_Factory","clickable","editable","fillColor","fillOpacity","radius","strokeColor","strokeOpacity","strokePosition","strokeWeight","centerChanged","radiusChanged","INPUTS$5","OUTPUTS$5","DataLayer","data","addGeoJson","loadGeoJson","add","DataLayer_Factory","controlPosition","controls","drawingMode","featureFactory","geoJson","geoJsonUrl","addfeature","removefeature","removeproperty","setgeometry","setproperty","INPUTS$6","OUTPUTS$6","DirectionsRenderer","directionsService","DirectionsService","directionsRenderer","showDirections","directionsRequest","route","response","DirectionsStatus","setDirections","DirectionsRenderer_Factory","directions","hideRouteList","panel","markerOptions","polylineOptions","preserveViewport","routeIndex","suppressBicyclingLayer","suppressInfoWindows","suppressMarkers","suppressPolylines","directions_changed","INPUTS$7","OUTPUTS$7","DrawingManager","DrawingManager_Factory","circleOptions","drawingControl","drawingControlOptions","polygonOptions","rectangleOptions","circlecomplete","markercomplete","overlaycomplete","polygoncomplete","polylinecomplete","rectanglecomplete","INPUTS$8","OUTPUTS$8","GroundOverlay","GroundOverlay_Factory","url","bounds","opacity","INPUTS$9","OUTPUTS$9","HeatmapLayer","HeatmapLayer_Factory","dissipating","gradient","maxIntensity","INPUTS$10","OUTPUTS$10","KmlLayer","KmlLayer_Factory","screenOverlays","defaultviewport_changed","status_changed","INPUTS$11","OUTPUTS$11","Marker","Marker_Factory","anchorPoint","animation","cursor","label","optimized","place","shape","title","geoFallbackPosition","PlacesAutoComplete","place_changed","places","autocomplete","Autocomplete","getPlace","PlacesAutoComplete_Factory","componentRestrictions","types","INPUTS$12","OUTPUTS$12","Polygon","Polygon_Factory","geodesic","paths","INPUTS$13","OUTPUTS$13","Polyline","Polyline_Factory","icons","INPUTS$14","OUTPUTS$14","StreetViewPanorama","StreetViewPanorama_Factory","addressControl","addressControlOptions","clickToGo","enableCloseButton","imageDateControl","linksControl","motionTracking","motionTrackingControl","pano","pov","showRoadLabels","pano_changed","pov_changed","visible_changed","INPUTS$15","OUTPUTS$15","TrafficLayer","TrafficLayer_Factory","autoRefresh","INPUTS$16","OUTPUTS$16","TransitLayer","TransitLayer_Factory","COMPONENTS_DIRECTIVES","NguiMapModule","ngModule","provide","useValue","NguiMapModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","useClass","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","ɵa"],"mappings":"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","sourcesContent":["import { EventEmitter, Output, Injectable, InjectionToken, Inject, Optional, NgZone, Component, ElementRef, ViewEncapsulation, Directive, ViewChild, ViewContainerRef, Input, NgModule } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { debounceTime, tap, first } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * return json string from json-like string\n * @param {?} str\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\"];\nconst _c1 = [\"template\"];\nfunction jsonize(str) {\n    try {\n        // if parsable already, return as it is\n        JSON.parse(str);\n        return str;\n    }\n    catch (/** @type {?} */ e) {\n        // if not parsable, change little\n        return str\n            .replace(/([\\$\\w]+)\\s*:/g, // wrap keys without double quote\n        // wrap keys without double quote\n        function (_, $1) {\n            return '\"' + $1 + '\":';\n        })\n            .replace(/'([^']+)'/g, // replacing single quote to double quote\n        // replacing single quote to double quote\n        function (_, $1) {\n            return '\"' + $1 + '\"';\n        });\n    }\n}\n/**\n * Returns string to an object by using JSON.parse()\n * @param {?} input\n * @return {?}\n */\nfunction getJSON(input) {\n    if (typeof input === 'string') {\n        const /** @type {?} */ re = /^[\\+\\-]?[0-9\\.]+,[ ]*\\ ?[\\+\\-]?[0-9\\.]+$/; // lat,lng\n        if (input.match(re)) {\n            input = '[' + input + ']';\n        }\n        return JSON.parse(jsonize(input));\n    }\n    else {\n        return input;\n    }\n}\n/**\n * json type definition\n * @record\n */\n\n/**\n * Returns camel-cased from string 'Foo Bar' to 'fooBar'\n * @param {?} str\n * @return {?}\n */\nfunction toCamelCase(str) {\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\n        return index === 0 ? letter.toLowerCase() : letter.toUpperCase();\n    }).replace(/\\s+/g, '');\n}\n/**\n * @return {?}\n */\nfunction isMapsApiLoaded() {\n    return typeof google === 'object' && typeof google.maps === 'object';\n}\n/**\n * @param {?} component\n * @param {?} libName\n * @return {?}\n */\nfunction missingLibraryError(component, libName) {\n    return Error(`${component}: library '${libName}' is missing, please ensure to include it in a 'libraries' parameter.\n    Example:\n      NguiMapModule.forRoot({\n        apiUrl: 'https://maps.googleapis.com/maps/api/js?libraries=${libName}'\n      })\n  `);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @abstract\n */\nclass BaseMapDirective {\n    /**\n     * @param {?} nguiMapComponent\n     * @param {?} mapObjectName\n     * @param {?} inputs\n     * @param {?} outputs\n     */\n    constructor(nguiMapComponent, mapObjectName, inputs, outputs) {\n        this.nguiMapComponent = nguiMapComponent;\n        this.mapObjectName = mapObjectName;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        // this should be redefined on each childr directive\n        this.initialized$ = new EventEmitter();\n        this._subscriptions = [];\n        this.nguiMap = this.nguiMapComponent['nguiMap'];\n        this.optionBuilder = this.nguiMapComponent['optionBuilder'];\n        // all outputs must be initialized\n        this.outputs.forEach(output => this[output] = new EventEmitter());\n        this.mapObjectName = mapObjectName;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.nguiMapComponent.mapIdledOnce) {\n            // map is ready already\n            this.initialize();\n        }\n        else {\n            this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n        }\n    }\n    /**\n     * @return {?}\n     */\n    initialize() {\n        this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n        // will be set after geocoded\n        typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n        typeof this.objectOptions.center === 'string' && (delete this.objectOptions.center);\n        // noinspection TypeScriptUnresolvedFunction\n        if (this.libraryName) {\n            if (!google.maps[this.libraryName]) {\n                throw missingLibraryError(this.mapObjectName, this.libraryName);\n            }\n            this.mapObject = new google.maps[this.libraryName][this.mapObjectName](this.objectOptions);\n        }\n        else {\n            this.mapObject = new google.maps[this.mapObjectName](this.objectOptions);\n        }\n        this.mapObject.setMap(this.nguiMapComponent.map);\n        this.mapObject['mapObjectName'] = this.mapObjectName;\n        this.mapObject['nguiMapComponent'] = this.nguiMapComponent;\n        // set google events listeners and emits to this outputs listeners\n        this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n        this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n        this.initialized$.emit(this.mapObject);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this.nguiMap.updateGoogleObject(this.mapObject, changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._subscriptions.map(subscription => subscription.unsubscribe());\n        this.nguiMapComponent.removeFromMapObjectGroup(this.mapObjectName, this.mapObject);\n        if (this.mapObject) {\n            this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');\n        }\n    }\n}\nBaseMapDirective.ɵfac = function BaseMapDirective_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nBaseMapDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BaseMapDirective, outputs: { initialized$: \"initialized$\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nBaseMapDirective.propDecorators = {\n    \"initialized$\": [{ type: Output },],\n};\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * change any object to google object options\n * e.g. [1,2] -> new google.maps.LatLng(1,2);\n */\nclass OptionBuilder {\n    /**\n     * @param {?} definedInputs\n     * @param {?} userInputs\n     * @return {?}\n     */\n    googlizeAllInputs(definedInputs, userInputs) {\n        let /** @type {?} */ options = {};\n        // if options given from user, only take options and ignore other inputs\n        if (userInputs.options) {\n            options = userInputs.options;\n            if (!this.onlyOptionsGiven(definedInputs, userInputs)) {\n                console.error('when \"options\" are used, other options are ignored');\n            }\n        }\n        else {\n            // if options not given, process all user inputs\n            definedInputs.forEach(input => {\n                if (userInputs[input] !== undefined) {\n                    options[input] = this.googlize(userInputs[input], { key: input });\n                }\n            });\n        }\n        return options;\n    }\n    /**\n     * @param {?} inputs\n     * @param {?=} options\n     * @return {?}\n     */\n    googlizeMultiple(inputs, options) {\n        options = options || {};\n        for (let /** @type {?} */ key in inputs) {\n            let /** @type {?} */ val = inputs[key];\n            // (non-strings are fully converted)\n            if (typeof val !== 'string') {\n                options[key] = val;\n            }\n            else if (!(options['doNotConverStringToNumber'] && val.match(/^[0-9]+$/))) {\n                options[key] = this.googlize(val, { key: key });\n            }\n        } // for(var key in attrs)\n        return options;\n    }\n    /**\n     * @param {?} input\n     * @param {?=} options\n     * @return {?}\n     */\n    googlize(input, options) {\n        options = options || {};\n        let /** @type {?} */ output = input;\n        if (typeof input === 'string') {\n            // convert string to a google object\n            if (input === 'false') {\n                output = false;\n            }\n            else if (input === '0') {\n                output = 0;\n            }\n            else {\n                output =\n                    // -> googlize -> getJsonParsed -> googlizeMultiple -> googlize until all elements are parsed\n                    this.getJSONParsed(input, options)\n                        /* Foo.Bar(...) -> new google.maps.Foo.Bar(...) */\n                        || this.getAnyMapObject(input)\n                        /*  MapTypeID.HYBRID -> new google.maps.MapTypeID.HYBRID */\n                        || this.getAnyMapConstant(input, options)\n                        /*  2016-06-20 -> new Date('2016-06-20') */\n                        || this.getDateObject(input)\n                        || input;\n            }\n        }\n        if (options['key']) {\n            let /** @type {?} */ key = /** @type {?} */ (options['key']);\n            if (output instanceof Array) {\n                // e.g., [1, 2]\n                if (key === 'bounds') {\n                    output = new google.maps.LatLngBounds(output[0], output[1]);\n                }\n                else if (key === 'icons') {\n                    output = this.getMapIcons(output);\n                }\n                else if (key === 'position' || key.match(/^geoFallback/)) {\n                    output = this.getLatLng(output);\n                }\n            }\n            else if (output instanceof Object) {\n                if (key === 'icon') {\n                    output = this.getMarkerIcon(output);\n                }\n                else if (key.match(/ControlOptions$/)) {\n                    output = this.getMapControlOption(output);\n                }\n            }\n        }\n        // delete keys only for processing, not used by google\n        delete output['doNotConverStringToNumber'];\n        delete output['key'];\n        return output;\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    getLatLng(input) {\n        let /** @type {?} */ output;\n        if (input[0].constructor === Array) {\n            // [[1,2],[3,4]]\n            output = (/** @type {?} */ (input)).map((el) => new google.maps.LatLng(el[0], el[1]));\n        }\n        else if (!isNaN(parseFloat(input[0])) && isFinite(input[0])) {\n            output = new google.maps.LatLng(input[0], input[1]);\n        }\n        return output;\n    }\n    /**\n     * @param {?} input\n     * @param {?} options\n     * @return {?}\n     */\n    getJSONParsed(input, options) {\n        let /** @type {?} */ output;\n        try {\n            output = getJSON(input);\n            if (output instanceof Array) {\n                // [{a:1}] : not lat/lng ones\n                if (output[0].constructor !== Object) {\n                    // [[1,2],[3,4]] or [1,2]\n                    output = this.getLatLng(output);\n                }\n            }\n            else if (output === Object(output)) {\n                // check for nested hashes and convert to Google API options\n                let /** @type {?} */ newOptions = options;\n                newOptions['doNotConverStringToNumber'] = true;\n                output = this.googlizeMultiple(output, newOptions);\n            }\n        }\n        catch (/** @type {?} */ e) {\n        }\n        return output;\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    getAnyMapObject(input) {\n        let /** @type {?} */ output;\n        if (input.match(/^[A-Z][a-zA-Z0-9]+\\(.*\\)$/)) {\n            try {\n                output = Function(`return new google.maps.${input};`)();\n            }\n            catch (/** @type {?} */ e) { }\n        }\n        return output;\n    }\n    /**\n     * @param {?} input\n     * @param {?} options\n     * @return {?}\n     */\n    getAnyMapConstant(input, options) {\n        let /** @type {?} */ output;\n        if (input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/)) {\n            // e.g. MapTypeID.HYBRID\n            try {\n                let /** @type {?} */ matches = input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/);\n                output = google.maps[matches[1]][matches[2]];\n            }\n            catch (/** @type {?} */ e) { }\n        }\n        else if (input.match(/^[A-Z]+$/)) {\n            // e.g. HYBRID\n            try {\n                let /** @type {?} */ capitalizedKey = (/** @type {?} */ (options['key'])).charAt(0).toUpperCase() +\n                    (/** @type {?} */ (options['key'])).slice(1);\n                output = google.maps[capitalizedKey][input];\n            }\n            catch (/** @type {?} */ e) { }\n        }\n        return output;\n    }\n    /**\n     * streetviewControl, panControl, etc, not a general control\n     * @param {?} controlOptions\n     * @return {?}\n     */\n    getMapControlOption(controlOptions) {\n        let /** @type {?} */ newControlOptions = controlOptions;\n        for (let /** @type {?} */ key in newControlOptions) {\n            // assign the right values\n            if (newControlOptions[key]) {\n                let /** @type {?} */ value = newControlOptions[key];\n                if (typeof value === 'string') {\n                    value = (/** @type {?} */ (value)).toUpperCase();\n                }\n                else if (key === 'mapTypeIds') {\n                    value = (/** @type {?} */ (value)).map(function (str) {\n                        if (str.match(/^[A-Z]+$/)) {\n                            // if constant\n                            return google.maps.MapTypeId[str.toUpperCase()];\n                        }\n                        else {\n                            // else, custom map-type\n                            return str;\n                        }\n                    });\n                }\n                if (key === 'style') {\n                    let /** @type {?} */ objName = key.replace(/Options$/, '') + 'Style';\n                    newControlOptions[key] = google.maps[objName][/** @type {?} */ (value)];\n                }\n                else if (key === 'position') {\n                    newControlOptions[key] = google.maps.ControlPosition[/** @type {?} */ (value)];\n                }\n                else {\n                    newControlOptions[key] = value;\n                }\n            }\n        }\n        return newControlOptions;\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    getDateObject(input) {\n        let /** @type {?} */ output;\n        if (input.match(/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*)?)([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/)) {\n            try {\n                output = new Date(input);\n            }\n            catch (/** @type {?} */ e) { }\n        }\n        return output;\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    getMapIcons(input) {\n        return input.map(el => {\n            if (el.icon.path.match(/^[A-Z_]+$/)) {\n                el.icon.path = google.maps.SymbolPath[el.icon.path];\n            }\n            return el;\n        });\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    getMarkerIcon(input) {\n        let /** @type {?} */ output = input;\n        if (('' + output.path).match(/^[A-Z_]+$/)) {\n            output.path = google.maps.SymbolPath[output.path];\n        }\n        for (let /** @type {?} */ key in output) {\n            let /** @type {?} */ arr = output[key];\n            if (key === 'anchor' || key === 'origin' || key === 'labelOrigin') {\n                output[key] = new google.maps.Point(arr[0], arr[1]);\n            }\n            else if (key === 'size' || key === 'scaledSize') {\n                output[key] = new google.maps.Size(arr[0], arr[1]);\n            }\n        }\n        return output;\n    }\n    /**\n     * @param {?} definedInputs\n     * @param {?} userInputs\n     * @return {?}\n     */\n    onlyOptionsGiven(definedInputs, userInputs) {\n        for (let /** @type {?} */ i = 0; i < definedInputs.length; i++) {\n            let /** @type {?} */ input = definedInputs[i];\n            if (input !== 'options' && typeof userInputs[input] !== 'undefined') {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nOptionBuilder.ɵfac = function OptionBuilder_Factory(t) { return new (t || OptionBuilder)(); };\nOptionBuilder.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: OptionBuilder, factory: OptionBuilder.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OptionBuilder, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n *  service for navigator.geolocation methods\n */\nclass NavigatorGeolocation {\n    /**\n     * @param {?=} geoLocationOptions\n     * @return {?}\n     */\n    getCurrentPosition(geoLocationOptions) {\n        geoLocationOptions = geoLocationOptions || { timeout: 5000 };\n        return new Observable((responseObserver) => {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition((position) => {\n                    responseObserver.next(position);\n                    responseObserver.complete();\n                }, (evt) => responseObserver.error(evt), geoLocationOptions);\n            }\n            else {\n                responseObserver.error('Browser Geolocation service failed.');\n            }\n        });\n    }\n}\nNavigatorGeolocation.ɵfac = function NavigatorGeolocation_Factory(t) { return new (t || NavigatorGeolocation)(); };\nNavigatorGeolocation.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NavigatorGeolocation, factory: NavigatorGeolocation.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavigatorGeolocation, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst NG_MAP_CONFIG_TOKEN = new InjectionToken('NG_MAP_CONFIG_TOKEN');\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @abstract\n */\nclass NgMapApiLoader {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        this.config = config;\n        this.api$ = new ReplaySubject(1);\n        this.config = this.config || { apiUrl: 'https://maps.google.com/maps/api/js' };\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.api$.complete();\n    }\n}\nNgMapApiLoader.ɵfac = function NgMapApiLoader_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nNgMapApiLoader.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgMapApiLoader });\n\nclass NgMapAsyncCallbackApiLoader extends NgMapApiLoader {\n    /**\n     * @param {?} zone\n     * @param {?} config\n     */\n    constructor(zone, config) {\n        super(config);\n        this.zone = zone;\n    }\n    /**\n     * @return {?}\n     */\n    load() {\n        if (typeof window === 'undefined') {\n            return;\n        }\n        if (isMapsApiLoaded()) {\n            this.api$.next(google.maps);\n        }\n        else if (!document.querySelector('#ngui-map-api')) {\n            (/** @type {?} */ (window))['nguiMapRef'] = (/** @type {?} */ (window))['nguiMapRef'] || [];\n            (/** @type {?} */ (window))['nguiMapRef'].push({ zone: this.zone, componentFn: () => this.api$.next(google.maps) });\n            this.addGoogleMapsApi();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    addGoogleMapsApi() {\n        (/** @type {?} */ (window))['initNguiMap'] = (/** @type {?} */ (window))['initNguiMap'] || function () {\n            (/** @type {?} */ (window))['nguiMapRef'].forEach(nguiMapRef => {\n                nguiMapRef.zone.run(function () { nguiMapRef.componentFn(); });\n            });\n            (/** @type {?} */ (window))['nguiMapRef'].splice(0, (/** @type {?} */ (window))['nguiMapRef'].length);\n        };\n        let /** @type {?} */ script = document.createElement('script');\n        script.id = 'ngui-map-api';\n        // script.src = \"https://maps.google.com/maps/api/js?callback=initNguiMap\";\n        let /** @type {?} */ apiUrl = this.config.apiUrl;\n        apiUrl += apiUrl.indexOf('?') !== -1 ? '&' : '?';\n        script.src = apiUrl + 'callback=initNguiMap';\n        document.querySelector('body').appendChild(script);\n    }\n}\nNgMapAsyncCallbackApiLoader.ɵfac = function NgMapAsyncCallbackApiLoader_Factory(t) { return new (t || NgMapAsyncCallbackApiLoader)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(NG_MAP_CONFIG_TOKEN, 8)); };\nNgMapAsyncCallbackApiLoader.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NgMapAsyncCallbackApiLoader, factory: NgMapAsyncCallbackApiLoader.ɵfac });\n/** @nocollapse */\nNgMapAsyncCallbackApiLoader.ctorParameters = () => [\n    { type: NgZone, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MAP_CONFIG_TOKEN,] },] },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgMapAsyncCallbackApiLoader, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MAP_CONFIG_TOKEN]\n            }] }]; }, null); })();\nclass NgMapAsyncApiLoader extends NgMapApiLoader {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super(config);\n    }\n    /**\n     * @return {?}\n     */\n    load() {\n        if (typeof window === 'undefined') {\n            return;\n        }\n        if (isMapsApiLoaded()) {\n            this.api$.next(google.maps);\n        }\n        else if (!document.querySelector('#ngui-map-api')) {\n            let /** @type {?} */ script = document.createElement('script');\n            script.id = 'ngui-map-api';\n            script.async = true;\n            script.onload = () => this.api$.next(google.maps);\n            script.src = this.config.apiUrl;\n            document.querySelector('body').appendChild(script);\n        }\n    }\n}\nNgMapAsyncApiLoader.ɵfac = function NgMapAsyncApiLoader_Factory(t) { return new (t || NgMapAsyncApiLoader)(ɵngcc0.ɵɵinject(NG_MAP_CONFIG_TOKEN, 8)); };\nNgMapAsyncApiLoader.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NgMapAsyncApiLoader, factory: NgMapAsyncApiLoader.ɵfac });\n/** @nocollapse */\nNgMapAsyncApiLoader.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MAP_CONFIG_TOKEN,] },] },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgMapAsyncApiLoader, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MAP_CONFIG_TOKEN]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n *   Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)\n *   service for Google Geocoder service\n */\nclass GeoCoder {\n    /**\n     * @param {?} apiLoader\n     */\n    constructor(apiLoader) {\n        this.apiLoader = apiLoader;\n        this.apiLoaderSubs = [];\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    geocode(options) {\n        return new Observable((responseObserver) => {\n            this.apiLoaderSubs.push(this.apiLoader.api$\n                .subscribe(() => this.requestGeocode(options, responseObserver)));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.apiLoaderSubs.map(sub => sub.unsubscribe());\n    }\n    /**\n     * @param {?} options\n     * @param {?} observer\n     * @return {?}\n     */\n    requestGeocode(options, observer) {\n        const /** @type {?} */ geocoder = new google.maps.Geocoder();\n        geocoder.geocode(options, function (results, status) {\n            if (status === google.maps.GeocoderStatus.OK) {\n                observer.next(results);\n                observer.complete();\n            }\n            else {\n                observer.error(results);\n            }\n        });\n    }\n}\nGeoCoder.ɵfac = function GeoCoder_Factory(t) { return new (t || GeoCoder)(ɵngcc0.ɵɵinject(NgMapApiLoader)); };\nGeoCoder.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: GeoCoder, factory: GeoCoder.ɵfac });\n/** @nocollapse */\nGeoCoder.ctorParameters = () => [\n    { type: NgMapApiLoader, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GeoCoder, [{\n        type: Injectable\n    }], function () { return [{ type: NgMapApiLoader }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * collection of map instance-related properties and methods\n */\nclass NguiMap {\n    /**\n     * @param {?} geoCoder\n     * @param {?} optionBuilder\n     * @param {?} zone\n     */\n    constructor(geoCoder, optionBuilder, zone) {\n        this.geoCoder = geoCoder;\n        this.optionBuilder = optionBuilder;\n        this.zone = zone;\n        this.updateGoogleObject = (object, changes) => {\n            let /** @type {?} */ val, /** @type {?} */ currentValue, /** @type {?} */ setMethodName;\n            if (object) {\n                for (let /** @type {?} */ key in changes) {\n                    setMethodName = `set${key.replace(/^[a-z]/, x => x.toUpperCase())}`;\n                    currentValue = changes[key].currentValue;\n                    if (['position', 'center'].indexOf(key) !== -1 && typeof currentValue === 'string') {\n                        // To preserve setMethod name in Observable callback, wrap it as a function, then execute\n                        ((setMethodName) => {\n                            this.geoCoder.geocode({ address: currentValue }).subscribe(results => {\n                                if (typeof object[setMethodName] === 'function') {\n                                    object[setMethodName](results[0].geometry.location);\n                                }\n                                else {\n                                    console.error('Not all options are dynamically updatable according to Googles Maps API V3 documentation.\\n' +\n                                        'Please check Google Maps API documentation, and use \"setOptions\" instead.');\n                                }\n                            });\n                        })(setMethodName);\n                    }\n                    else {\n                        val = this.optionBuilder.googlize(currentValue);\n                        if (typeof object[setMethodName] === 'function') {\n                            object[setMethodName](val);\n                        }\n                        else {\n                            console.error('Not all options are dynamically updatable according to Googles Maps API V3 documentation.\\n' +\n                                'Please check Google Maps API documentation, and use \"setOptions\" instead.');\n                        }\n                    }\n                }\n            }\n        };\n    }\n    /**\n     * @param {?} definedEvents\n     * @param {?} thisObj\n     * @param {?} prefix\n     * @return {?}\n     */\n    setObjectEvents(definedEvents, thisObj, prefix) {\n        definedEvents.forEach(definedEvent => {\n            const /** @type {?} */ eventName = this.getEventName(definedEvent), /** @type {?} */\n            zone = this.zone;\n            zone.runOutsideAngular(() => {\n                thisObj[prefix].addListener(eventName, function (event) {\n                    let /** @type {?} */ param = event ? event : {};\n                    param.target = this;\n                    zone.run(() => thisObj[definedEvent].emit(param));\n                });\n            });\n        });\n    }\n    /**\n     * @param {?} definedEvents\n     * @param {?} thisObj\n     * @param {?} prefix\n     * @return {?}\n     */\n    clearObjectEvents(definedEvents, thisObj, prefix) {\n        definedEvents.forEach(definedEvent => {\n            const /** @type {?} */ eventName = this.getEventName(definedEvent);\n            this.zone.runOutsideAngular(() => {\n                if (thisObj[prefix]) {\n                    google.maps.event.clearListeners(thisObj[prefix], eventName);\n                }\n            });\n        });\n        if (thisObj[prefix]) {\n            if (thisObj[prefix].setMap) {\n                thisObj[prefix].setMap(null);\n            }\n            delete thisObj[prefix].nguiMapComponent;\n            delete thisObj[prefix];\n        }\n    }\n    /**\n     * @param {?} definedEvent\n     * @return {?}\n     */\n    getEventName(definedEvent) {\n        return definedEvent\n            .replace(/([A-Z])/g, ($1) => `_${$1.toLowerCase()}`) // positionChanged -> position_changed\n            .replace(/^map_/, ''); // map_click -> click  to avoid DOM conflicts\n    }\n}\nNguiMap.ɵfac = function NguiMap_Factory(t) { return new (t || NguiMap)(ɵngcc0.ɵɵinject(GeoCoder), ɵngcc0.ɵɵinject(OptionBuilder), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nNguiMap.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NguiMap, factory: NguiMap.ɵfac });\n/** @nocollapse */\nNguiMap.ctorParameters = () => [\n    { type: GeoCoder, },\n    { type: OptionBuilder, },\n    { type: NgZone, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguiMap, [{\n        type: Injectable\n    }], function () { return [{ type: GeoCoder }, { type: OptionBuilder }, { type: ɵngcc0.NgZone }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS = [\n    'backgroundColor', 'center', 'disableDefaultUI', 'disableDoubleClickZoom', 'draggable', 'draggableCursor',\n    'draggingCursor', 'heading', 'keyboardShortcuts', 'mapMaker', 'mapTypeControl', 'mapTypeId', 'maxZoom', 'minZoom',\n    'noClear', 'overviewMapControl', 'panControl', 'panControlOptions', 'rotateControl', 'scaleControl', 'scrollwheel',\n    'streetView', 'styles', 'tilt', 'zoom', 'streetViewControl', 'zoomControl', 'zoomControlOptions', 'mapTypeControlOptions',\n    'overviewMapControlOptions', 'rotateControlOptions', 'scaleControlOptions', 'streetViewControlOptions', 'fullscreenControl', 'fullscreenControlOptions',\n    'options',\n    'geoFallbackCenter'\n];\nconst OUTPUTS = [\n    'bounds_changed', 'center_changed', 'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'heading_changed', 'idle',\n    'maptypeid_changed', 'mousemove', 'mouseout', 'mouseover', 'projection_changed', 'resize', 'rightclick',\n    'tilesloaded', 'tile_changed', 'zoom_changed',\n    'mapClick', 'mapMouseover', 'mapMouseout', 'mapMousemove', 'mapDrag', 'mapDragend', 'mapDragstart'\n];\nclass NguiMapComponent {\n    /**\n     * @param {?} optionBuilder\n     * @param {?} elementRef\n     * @param {?} geolocation\n     * @param {?} geoCoder\n     * @param {?} nguiMap\n     * @param {?} apiLoader\n     * @param {?} zone\n     */\n    constructor(optionBuilder, elementRef, geolocation, geoCoder, nguiMap, apiLoader, zone) {\n        this.optionBuilder = optionBuilder;\n        this.elementRef = elementRef;\n        this.geolocation = geolocation;\n        this.geoCoder = geoCoder;\n        this.nguiMap = nguiMap;\n        this.apiLoader = apiLoader;\n        this.zone = zone;\n        this.mapReady$ = new EventEmitter();\n        this.mapOptions = {};\n        this.inputChanges$ = new Subject();\n        this.infoWindows = {};\n        this.mapIdledOnce = false;\n        this.initializeMapAfterDisplayed = false;\n        apiLoader.load();\n        // all outputs needs to be initialized,\n        // http://stackoverflow.com/questions/37765519/angular2-directive-cannot-read-property-subscribe-of-undefined-with-outputs\n        OUTPUTS.forEach(output => this[output] = new EventEmitter());\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.apiLoaderSub = this.apiLoader.api$\n            .pipe(first())\n            .subscribe(() => this.initializeMap());\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        if (this.initializeMapAfterDisplayed && this.el && this.el.offsetWidth > 0) {\n            this.initializeMap();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this.inputChanges$.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    initializeMap() {\n        this.el = this.elementRef.nativeElement.querySelector('.google-map');\n        if (this.el && this.el.offsetWidth === 0) {\n            this.initializeMapAfterDisplayed = true;\n            return;\n        }\n        this.initializeMapAfterDisplayed = false;\n        this.mapOptions = this.optionBuilder.googlizeAllInputs(INPUTS, this);\n        this.mapOptions.zoom = this.mapOptions.zoom || 15;\n        typeof this.mapOptions.center === 'string' && (delete this.mapOptions.center);\n        this.zone.runOutsideAngular(() => {\n            this.map = new google.maps.Map(this.el, this.mapOptions);\n            this.map['mapObjectName'] = 'NguiMapComponent';\n            if (!this.mapOptions.center) {\n                // if center is not given as lat/lng\n                this.setCenter();\n            }\n            // set google events listeners and emits to this outputs listeners\n            this.nguiMap.setObjectEvents(OUTPUTS, this, 'map');\n            this.map.addListener('idle', () => {\n                if (!this.mapIdledOnce) {\n                    this.mapIdledOnce = true;\n                    setTimeout(() => {\n                        // Why????, subsribe and emit must not be in the same cycle???\n                        this.mapReady$.emit(this.map);\n                    });\n                }\n            });\n            // update map when input changes\n            this.inputChanges$.pipe(debounceTime(1000), tap((changes) => this.nguiMap.updateGoogleObject(this.map, changes))).subscribe();\n            if (typeof window !== 'undefined' && (/** @type {?} */ (window))['nguiMapRef']) {\n                // expose map object for test and debugging on (<any>window)\n                (/** @type {?} */ (window))['nguiMapRef'].map = this.map;\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    setCenter() {\n        if (!this['center']) {\n            // center is not from user. Thus, we set the current location\n            this.geolocation.getCurrentPosition().subscribe(position => {\n                let /** @type {?} */ latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                this.map.setCenter(latLng);\n            }, error => {\n                console.error('ngui-map: Error finding the current position');\n                this.map.setCenter(this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n            });\n        }\n        else if (typeof this['center'] === 'string') {\n            this.geoCoder.geocode({ address: this['center'] }).subscribe(results => {\n                this.map.setCenter(results[0].geometry.location);\n            }, error => {\n                this.map.setCenter(this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n            });\n        }\n    }\n    /**\n     * @param {?} id\n     * @param {?} anchor\n     * @return {?}\n     */\n    openInfoWindow(id, anchor) {\n        this.infoWindows[id].open(anchor);\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    closeInfoWindow(id) {\n        // if infoWindow for id exists, close the infoWindow\n        if (this.infoWindows[id])\n            this.infoWindows[id].close();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.inputChanges$.complete();\n        if (this.el && !this.initializeMapAfterDisplayed) {\n            this.nguiMap.clearObjectEvents(OUTPUTS, this, 'map');\n        }\n        if (this.apiLoaderSub) {\n            this.apiLoaderSub.unsubscribe();\n        }\n    }\n    /**\n     * @param {?} mapObjectName\n     * @param {?} mapObject\n     * @return {?}\n     */\n    addToMapObjectGroup(mapObjectName, mapObject) {\n        let /** @type {?} */ groupName = toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n        this.map[groupName] = this.map[groupName] || [];\n        this.map[groupName].push(mapObject);\n    }\n    /**\n     * @param {?} mapObjectName\n     * @param {?} mapObject\n     * @return {?}\n     */\n    removeFromMapObjectGroup(mapObjectName, mapObject) {\n        let /** @type {?} */ groupName = toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n        if (this.map && this.map[groupName]) {\n            let /** @type {?} */ index = this.map[groupName].indexOf(mapObject);\n            (index > -1) && this.map[groupName].splice(index, 1);\n        }\n    }\n}\nNguiMapComponent.ɵfac = function NguiMapComponent_Factory(t) { return new (t || NguiMapComponent)(ɵngcc0.ɵɵdirectiveInject(OptionBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NavigatorGeolocation), ɵngcc0.ɵɵdirectiveInject(GeoCoder), ɵngcc0.ɵɵdirectiveInject(NguiMap), ɵngcc0.ɵɵdirectiveInject(NgMapApiLoader), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nNguiMapComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NguiMapComponent, selectors: [[\"ngui-map\"]], inputs: { backgroundColor: \"backgroundColor\", center: \"center\", disableDefaultUI: \"disableDefaultUI\", disableDoubleClickZoom: \"disableDoubleClickZoom\", draggable: \"draggable\", draggableCursor: \"draggableCursor\", draggingCursor: \"draggingCursor\", heading: \"heading\", keyboardShortcuts: \"keyboardShortcuts\", mapMaker: \"mapMaker\", mapTypeControl: \"mapTypeControl\", mapTypeId: \"mapTypeId\", maxZoom: \"maxZoom\", minZoom: \"minZoom\", noClear: \"noClear\", overviewMapControl: \"overviewMapControl\", panControl: \"panControl\", panControlOptions: \"panControlOptions\", rotateControl: \"rotateControl\", scaleControl: \"scaleControl\", scrollwheel: \"scrollwheel\", streetView: \"streetView\", styles: \"styles\", tilt: \"tilt\", zoom: \"zoom\", streetViewControl: \"streetViewControl\", zoomControl: \"zoomControl\", zoomControlOptions: \"zoomControlOptions\", mapTypeControlOptions: \"mapTypeControlOptions\", overviewMapControlOptions: \"overviewMapControlOptions\", rotateControlOptions: \"rotateControlOptions\", scaleControlOptions: \"scaleControlOptions\", streetViewControlOptions: \"streetViewControlOptions\", fullscreenControl: \"fullscreenControl\", fullscreenControlOptions: \"fullscreenControlOptions\", options: \"options\", geoFallbackCenter: \"geoFallbackCenter\" }, outputs: { bounds_changed: \"bounds_changed\", center_changed: \"center_changed\", click: \"click\", dblclick: \"dblclick\", drag: \"drag\", dragend: \"dragend\", dragstart: \"dragstart\", heading_changed: \"heading_changed\", idle: \"idle\", maptypeid_changed: \"maptypeid_changed\", mousemove: \"mousemove\", mouseout: \"mouseout\", mouseover: \"mouseover\", projection_changed: \"projection_changed\", resize: \"resize\", rightclick: \"rightclick\", tilesloaded: \"tilesloaded\", tile_changed: \"tile_changed\", zoom_changed: \"zoom_changed\", mapClick: \"mapClick\", mapMouseover: \"mapMouseover\", mapMouseout: \"mapMouseout\", mapMousemove: \"mapMousemove\", mapDrag: \"mapDrag\", mapDragend: \"mapDragend\", mapDragstart: \"mapDragstart\", mapReady$: \"mapReady$\" }, features: [ɵngcc0.ɵɵProvidersFeature([NguiMap, OptionBuilder, GeoCoder, NavigatorGeolocation]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"google-map\"]], template: function NguiMapComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n    } }, styles: [\"\\n    ngui-map {display: block; height: 300px;}\\n    .google-map {width: 100%; height: 100%}\\n  \"], encapsulation: 2 });\n/** @nocollapse */\nNguiMapComponent.ctorParameters = () => [\n    { type: OptionBuilder, },\n    { type: ElementRef, },\n    { type: NavigatorGeolocation, },\n    { type: GeoCoder, },\n    { type: NguiMap, },\n    { type: NgMapApiLoader, },\n    { type: NgZone, },\n];\nNguiMapComponent.propDecorators = {\n    \"mapReady$\": [{ type: Output },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguiMapComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngui-map',\n                providers: [NguiMap, OptionBuilder, GeoCoder, NavigatorGeolocation],\n                styles: [`\n    ngui-map {display: block; height: 300px;}\n    .google-map {width: 100%; height: 100%}\n  `],\n                inputs: INPUTS,\n                outputs: OUTPUTS,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <div class=\"google-map\"></div>\n    <ng-content></ng-content>\n  `\n            }]\n    }], function () { return [{ type: OptionBuilder }, { type: ɵngcc0.ElementRef }, { type: NavigatorGeolocation }, { type: GeoCoder }, { type: NguiMap }, { type: NgMapApiLoader }, { type: ɵngcc0.NgZone }]; }, { mapReady$: [{\n            type: Output\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$1 = [];\nconst OUTPUTS$1 = [];\nclass BicyclingLayer extends BaseMapDirective {\n    /**\n     * @param {?} nguiMapComp\n     */\n    constructor(nguiMapComp) {\n        super(nguiMapComp, 'BicyclingLayer', INPUTS$1, OUTPUTS$1);\n    }\n}\nBicyclingLayer.ɵfac = function BicyclingLayer_Factory(t) { return new (t || BicyclingLayer)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent)); };\nBicyclingLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BicyclingLayer, selectors: [[\"bicycling-layer\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nBicyclingLayer.ctorParameters = () => [\n    { type: NguiMapComponent, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BicyclingLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'ngui-map > bicycling-layer',\n                inputs: INPUTS$1,\n                outputs: OUTPUTS$1\n            }]\n    }], function () { return [{ type: NguiMapComponent }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$2 = [\n    'content', 'disableAutoPan', 'maxWidth', 'pixelOffset', 'position', 'zIndex', 'options'\n];\nconst OUTPUTS$2 = [\n    'closeclick', 'content_changed', 'domready', 'position_changed', 'zindex_changed'\n];\nclass InfoWindow {\n    /**\n     * @param {?} elementRef\n     * @param {?} nguiMap\n     * @param {?} nguiMapComponent\n     */\n    constructor(elementRef, nguiMap, nguiMapComponent) {\n        this.elementRef = elementRef;\n        this.nguiMap = nguiMap;\n        this.nguiMapComponent = nguiMapComponent;\n        this.initialized$ = new EventEmitter();\n        this.objectOptions = {};\n        this.inputChanges$ = new Subject();\n        this.elementRef.nativeElement.style.display = 'none';\n        OUTPUTS$2.forEach(output => this[output] = new EventEmitter());\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.nguiMapComponent.mapIdledOnce) {\n            // map is ready already\n            this.initialize();\n        }\n        else {\n            this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this.inputChanges$.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    initialize() {\n        this.objectOptions = this.nguiMapComponent.optionBuilder.googlizeAllInputs(INPUTS$2, this);\n        this.infoWindow = new google.maps.InfoWindow(this.objectOptions);\n        this.infoWindow['mapObjectName'] = 'InfoWindow';\n        // register infoWindow ids to NguiMap, so that it can be opened by id\n        if (this.elementRef.nativeElement.id) {\n            this.nguiMapComponent.infoWindows[this.elementRef.nativeElement.id] = this;\n        }\n        else {\n            console.error('An InfoWindow must have an id. e.g. id=\"detail\"');\n        }\n        // set google events listeners and emits to this outputs listeners\n        this.nguiMap.setObjectEvents(OUTPUTS$2, this, 'infoWindow');\n        // update object when input changes\n        this.inputChanges$.pipe(debounceTime(1000), tap((changes) => this.nguiMap.updateGoogleObject(this.infoWindow, changes))).subscribe();\n        this.nguiMapComponent.addToMapObjectGroup('InfoWindow', this.infoWindow);\n        this.initialized$.emit(this.infoWindow);\n    }\n    /**\n     * @param {?} anchor\n     * @return {?}\n     */\n    open(anchor) {\n        // set content and open it\n        this.infoWindow.setContent(this.template.element.nativeElement);\n        this.infoWindow.open(this.nguiMapComponent.map, anchor);\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        // check if infoWindow exists, and closes it\n        if (this.infoWindow)\n            this.infoWindow.close();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.inputChanges$.complete();\n        if (this.infoWindow) {\n            this.nguiMap.clearObjectEvents(OUTPUTS$2, this, 'infoWindow');\n            delete this.infoWindow;\n        }\n    }\n}\nInfoWindow.ɵfac = function InfoWindow_Factory(t) { return new (t || InfoWindow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NguiMap), ɵngcc0.ɵɵdirectiveInject(NguiMapComponent)); };\nInfoWindow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: InfoWindow, selectors: [[\"info-window\"]], viewQuery: function InfoWindow_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c1, 5, ViewContainerRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    } }, inputs: { content: \"content\", disableAutoPan: \"disableAutoPan\", maxWidth: \"maxWidth\", pixelOffset: \"pixelOffset\", position: \"position\", zIndex: \"zIndex\", options: \"options\" }, outputs: { closeclick: \"closeclick\", content_changed: \"content_changed\", domready: \"domready\", position_changed: \"position_changed\", zindex_changed: \"zindex_changed\", initialized$: \"initialized$\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 3, vars: 0, consts: [[\"template\", \"\"]], template: function InfoWindow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", null, 0);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2 });\n/** @nocollapse */\nInfoWindow.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: NguiMap, },\n    { type: NguiMapComponent, },\n];\nInfoWindow.propDecorators = {\n    \"initialized$\": [{ type: Output },],\n    \"template\": [{ type: ViewChild, args: ['template', { read: ViewContainerRef },] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InfoWindow, [{\n        type: Component,\n        args: [{\n                selector: 'ngui-map > info-window',\n                inputs: INPUTS$2,\n                outputs: OUTPUTS$2,\n                template: `<div #template><ng-content></ng-content></div>`\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: NguiMap }, { type: NguiMapComponent }]; }, { initialized$: [{\n            type: Output\n        }], template: [{\n            type: ViewChild,\n            args: ['template', { read: ViewContainerRef }]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$3 = [\n    'position'\n];\n// to avoid DOM event conflicts map_*\nconst OUTPUTS$3 = [\n    'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\n    'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\n    'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged',\n    'map_click', 'map_mouseover', 'map_mouseout', 'map_mouseup', 'map_mousedown', 'map_drag', 'map_dragend'\n];\n/**\n * Wrapper to a create extend OverlayView at runtime, only after google maps is loaded.\n * Otherwise throws a google is unknown error.\n * @param {?} htmlEl\n * @param {?} position\n * @return {?}\n */\nfunction getCustomMarkerOverlayView(htmlEl, position) {\n    class CustomMarkerOverlayView extends google.maps.OverlayView {\n        /**\n         * @param {?} htmlEl\n         * @param {?} position\n         */\n        constructor(htmlEl, position) {\n            super();\n            this.visible = true;\n            this.setPosition = (position) => {\n                this.htmlEl.style.visibility = 'hidden';\n                if (position.constructor.name === 'Array') {\n                    this.position = new google.maps.LatLng(position[0], position[1]);\n                }\n                else if (typeof position === 'string') {\n                    let /** @type {?} */ geocoder = new google.maps.Geocoder();\n                    geocoder.geocode({ address: position }, (results, status) => {\n                        if (status === google.maps.GeocoderStatus.OK) {\n                            this.setPosition(results[0].geometry.location);\n                        }\n                        else {\n                        }\n                    });\n                }\n                else if (position && typeof position.lng === 'function') {\n                    this.position = position;\n                }\n                if (this.getProjection() && typeof this.position.lng === 'function') {\n                    let /** @type {?} */ positionOnMap = () => {\n                        let /** @type {?} */ projection = this.getProjection();\n                        if (!projection) {\n                            return;\n                        }\n                        let /** @type {?} */ posPixel = projection.fromLatLngToDivPixel(this.position);\n                        let /** @type {?} */ x = Math.round(posPixel.x - (this.htmlEl.offsetWidth / 2));\n                        let /** @type {?} */ y = Math.round(posPixel.y - this.htmlEl.offsetHeight / 2);\n                        this.htmlEl.style.left = x + 'px';\n                        this.htmlEl.style.top = y + 'px';\n                        this.htmlEl.style.visibility = 'visible';\n                    };\n                    if (this.htmlEl.offsetWidth && this.htmlEl.offsetHeight) {\n                        positionOnMap();\n                    }\n                    else {\n                        setTimeout(() => positionOnMap());\n                    }\n                }\n            };\n            this.htmlEl = htmlEl;\n            this.position = position;\n        }\n        /**\n         * @return {?}\n         */\n        onAdd() {\n            this.getPanes().overlayMouseTarget.appendChild(this.htmlEl);\n            // required for correct display inside google maps container\n            this.htmlEl.style.position = 'absolute';\n        }\n        /**\n         * @return {?}\n         */\n        draw() {\n            this.setPosition(this.position);\n            this.setZIndex(this.zIndex);\n            this.setVisible(this.visible);\n        }\n        /**\n         * @return {?}\n         */\n        onRemove() {\n            //\n        }\n        /**\n         * @return {?}\n         */\n        getPosition() {\n            return this.position;\n        }\n        /**\n         * @param {?} zIndex\n         * @return {?}\n         */\n        setZIndex(zIndex) {\n            zIndex && (this.zIndex = zIndex); /* jshint ignore:line */\n            this.htmlEl.style.zIndex = this.zIndex;\n        }\n        /**\n         * @param {?} visible\n         * @return {?}\n         */\n        setVisible(visible) {\n            this.htmlEl.style.display = visible ? 'inline-block' : 'none';\n            this.visible = visible;\n        }\n    }\n    return new CustomMarkerOverlayView(htmlEl, position);\n}\nclass CustomMarker {\n    /**\n     * @param {?} nguiMapComponent\n     * @param {?} elementRef\n     * @param {?} nguiMap\n     */\n    constructor(nguiMapComponent, elementRef, nguiMap) {\n        this.nguiMapComponent = nguiMapComponent;\n        this.elementRef = elementRef;\n        this.nguiMap = nguiMap;\n        this.initialized$ = new EventEmitter();\n        this.inputChanges$ = new Subject();\n        this.elementRef.nativeElement.style.display = 'none';\n        OUTPUTS$3.forEach(output => this[output] = new EventEmitter());\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.nguiMapComponent.mapIdledOnce) {\n            // map is ready already\n            this.initialize();\n        }\n        else {\n            this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this.inputChanges$.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.inputChanges$.complete();\n        this.nguiMapComponent.removeFromMapObjectGroup('CustomMarker', this.mapObject);\n        if (this.mapObject) {\n            this.nguiMap.clearObjectEvents(OUTPUTS$3, this, 'mapObject');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    initialize() {\n        this.el = this.elementRef.nativeElement;\n        this.mapObject = getCustomMarkerOverlayView(this.el, this['position']);\n        this.mapObject.setMap(this.nguiMapComponent.map);\n        // set google events listeners and emits to this outputs listeners\n        this.nguiMap.setObjectEvents(OUTPUTS$3, this, 'mapObject');\n        // update object when input changes\n        this.inputChanges$.pipe(debounceTime(1000), tap((changes) => this.nguiMap.updateGoogleObject(this.mapObject, changes))).subscribe();\n        this.nguiMapComponent.addToMapObjectGroup('CustomMarker', this.mapObject);\n        this.initialized$.emit(this.mapObject);\n    }\n}\nCustomMarker.ɵfac = function CustomMarker_Factory(t) { return new (t || CustomMarker)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NguiMap)); };\nCustomMarker.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CustomMarker, selectors: [[\"custom-marker\"]], inputs: { position: \"position\" }, outputs: { animationChanged: \"animationChanged\", click: \"click\", clickableChanged: \"clickableChanged\", cursorChanged: \"cursorChanged\", dblclick: \"dblclick\", drag: \"drag\", dragend: \"dragend\", draggableChanged: \"draggableChanged\", dragstart: \"dragstart\", flatChanged: \"flatChanged\", iconChanged: \"iconChanged\", mousedown: \"mousedown\", mouseout: \"mouseout\", mouseover: \"mouseover\", mouseup: \"mouseup\", positionChanged: \"positionChanged\", rightclick: \"rightclick\", shapeChanged: \"shapeChanged\", titleChanged: \"titleChanged\", visibleChanged: \"visibleChanged\", zindexChanged: \"zindexChanged\", map_click: \"map_click\", map_mouseover: \"map_mouseover\", map_mouseout: \"map_mouseout\", map_mouseup: \"map_mouseup\", map_mousedown: \"map_mousedown\", map_drag: \"map_drag\", map_dragend: \"map_dragend\", initialized$: \"initialized$\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CustomMarker_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2 });\n/** @nocollapse */\nCustomMarker.ctorParameters = () => [\n    { type: NguiMapComponent, },\n    { type: ElementRef, },\n    { type: NguiMap, },\n];\nCustomMarker.propDecorators = {\n    \"initialized$\": [{ type: Output },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CustomMarker, [{\n        type: Component,\n        args: [{\n                selector: 'ngui-map > custom-marker',\n                inputs: INPUTS$3,\n                outputs: OUTPUTS$3,\n                template: `\r\n    <ng-content></ng-content>\r\n  `\n            }]\n    }], function () { return [{ type: NguiMapComponent }, { type: ɵngcc0.ElementRef }, { type: NguiMap }]; }, { initialized$: [{\n            type: Output\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$4 = [\n    'center', 'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'map', 'radius',\n    'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n    'geoFallbackCenter'\n];\nconst OUTPUTS$4 = [\n    'centerChanged', 'click', 'dblclick', 'drag', 'dragend', 'dragstart',\n    'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'radiusChanged', 'rightclick',\n];\nclass Circle extends BaseMapDirective {\n    /**\n     * @param {?} nguiMapComp\n     */\n    constructor(nguiMapComp) {\n        super(nguiMapComp, 'Circle', INPUTS$4, OUTPUTS$4);\n        this.nguiMapComp = nguiMapComp;\n        this.objectOptions = /** @type {?} */ ({});\n    }\n    /**\n     * @return {?}\n     */\n    initialize() {\n        super.initialize();\n        this.setCenter();\n    }\n    /**\n     * @return {?}\n     */\n    setCenter() {\n        if (!this['center']) {\n            this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(center => {\n                let /** @type {?} */ latLng = new google.maps.LatLng(center.coords.latitude, center.coords.longitude);\n                this.mapObject.setCenter(latLng);\n            }, error => {\n                console.error('ngui-map, error in finding the current position');\n                this.mapObject.setCenter(this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n            }));\n        }\n        else if (typeof this['center'] === 'string') {\n            this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({ address: this['center'] }).subscribe(results => {\n                this.mapObject.setCenter(results[0].geometry.location);\n            }, error => {\n                console.error('ngui-map, error in finding location from', this['center']);\n                this.mapObject.setCenter(this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n            }));\n        }\n    }\n}\nCircle.ɵfac = function Circle_Factory(t) { return new (t || Circle)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent)); };\nCircle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: Circle, selectors: [[\"circle\"], [\"map-circle\"]], inputs: { center: \"center\", clickable: \"clickable\", draggable: \"draggable\", editable: \"editable\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", map: \"map\", radius: \"radius\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", strokePosition: \"strokePosition\", strokeWeight: \"strokeWeight\", visible: \"visible\", zIndex: \"zIndex\", options: \"options\", geoFallbackCenter: \"geoFallbackCenter\" }, outputs: { centerChanged: \"centerChanged\", click: \"click\", dblclick: \"dblclick\", drag: \"drag\", dragend: \"dragend\", dragstart: \"dragstart\", mousedown: \"mousedown\", mousemove: \"mousemove\", mouseout: \"mouseout\", mouseover: \"mouseover\", mouseup: \"mouseup\", radiusChanged: \"radiusChanged\", rightclick: \"rightclick\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCircle.ctorParameters = () => [\n    { type: NguiMapComponent, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Circle, [{\n        type: Directive,\n        args: [{\n                selector: 'ngui-map>circle, ngui-map>map-circle',\n                inputs: INPUTS$4,\n                outputs: OUTPUTS$4\n            }]\n    }], function () { return [{ type: NguiMapComponent }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$5 = ['controlPosition', 'controls', 'drawingMode', 'featureFactory', 'style', 'geoJson', 'geoJsonUrl'];\nconst OUTPUTS$5 = [\n    'addfeature', 'click', 'dblclick', 'mousedown', 'mouseout', 'mouseover',\n    'mouseup', 'removefeature', 'removeproperty', 'rightclick', 'setgeometry', 'setproperty'\n];\nclass DataLayer extends BaseMapDirective {\n    /**\n     * @param {?} nguiMapComponent\n     */\n    constructor(nguiMapComponent) {\n        super(nguiMapComponent, 'Data', INPUTS$5, OUTPUTS$5);\n    }\n    /**\n     * @return {?}\n     */\n    initialize() {\n        if (this['geoJson']) {\n            // addGeoJson from an object\n            this.nguiMapComponent.map.data.addGeoJson(this['geoJson']);\n        }\n        else if (this['geoJsonUrl']) {\n            // loadGeoJson from a URL\n            this.nguiMapComponent.map.data.loadGeoJson(this['geoJsonUrl']);\n        }\n        else {\n            this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n            this.nguiMapComponent.map.data.add(this.objectOptions);\n        }\n        // unlike others, data belongs to map. e.g., map.data.loadGeoJson(), map.data.add()\n        this.mapObject = this.nguiMapComponent.map.data;\n        // set google events listeners and emits to this outputs listeners\n        this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n        this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n        this.initialized$.emit(this.mapObject);\n    }\n}\nDataLayer.ɵfac = function DataLayer_Factory(t) { return new (t || DataLayer)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent)); };\nDataLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DataLayer, selectors: [[\"data-layer\"]], inputs: { controlPosition: \"controlPosition\", controls: \"controls\", drawingMode: \"drawingMode\", featureFactory: \"featureFactory\", style: \"style\", geoJson: \"geoJson\", geoJsonUrl: \"geoJsonUrl\" }, outputs: { addfeature: \"addfeature\", click: \"click\", dblclick: \"dblclick\", mousedown: \"mousedown\", mouseout: \"mouseout\", mouseover: \"mouseover\", mouseup: \"mouseup\", removefeature: \"removefeature\", removeproperty: \"removeproperty\", rightclick: \"rightclick\", setgeometry: \"setgeometry\", setproperty: \"setproperty\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nDataLayer.ctorParameters = () => [\n    { type: NguiMapComponent, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'ngui-map > data-layer',\n                inputs: INPUTS$5,\n                outputs: OUTPUTS$5\n            }]\n    }], function () { return [{ type: NguiMapComponent }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$6 = [\n    'directions', 'draggable', 'hideRouteList', 'infoWindow', 'panel', 'markerOptions',\n    'polylineOptions', 'preserveViewport', 'routeIndex', 'suppressBicyclingLayer',\n    'suppressInfoWindows', 'suppressMarkers', 'suppressPolylines'\n];\nconst OUTPUTS$6 = ['directions_changed'];\nclass DirectionsRenderer extends BaseMapDirective {\n    /**\n     * @param {?} nguiMapComponent\n     * @param {?} geolocation\n     */\n    constructor(nguiMapComponent, geolocation) {\n        super(nguiMapComponent, 'DirectionsRenderer', INPUTS$6, OUTPUTS$6);\n        this.geolocation = geolocation;\n    }\n    /**\n     * @return {?}\n     */\n    initialize() {\n        this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n        if (typeof this.objectOptions['panel'] === 'string') {\n            // find a Node for panel\n            this.objectOptions['panel'] = document.querySelector(this.objectOptions['panel']);\n        }\n        this.directionsService = new google.maps.DirectionsService();\n        this.directionsRenderer = new google.maps.DirectionsRenderer(this.objectOptions);\n        this.directionsRenderer.setMap(this.nguiMapComponent.map);\n        // set google events listeners and emidirectionsRenderer to this outputs listeners\n        this.showDirections(this.directionsRequest);\n        this.nguiMap.setObjectEvents(this.outputs, this, 'directionsRenderer');\n        this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n        this.initialized$.emit(this.directionsRenderer);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        let /** @type {?} */ newOptions = {};\n        for (let /** @type {?} */ key in changes) {\n            if (this.inputs.indexOf(key) !== -1) {\n                newOptions[key] = this.optionBuilder.googlize(changes[key].currentValue);\n            }\n        }\n        if (changes['directionsRequest'] && this.directionsRenderer) {\n            this.directionsService && this.showDirections(this.directionsRequest);\n        }\n    }\n    /**\n     * @param {?} directionsRequest\n     * @return {?}\n     */\n    showDirections(directionsRequest) {\n        this.directionsService.route(directionsRequest, (response, status) => {\n            // in some-case the callback is called during destroy component,\n            // we should make sure directionsRenderer is still defined (cancelling `route` callback is not possible).\n            if (!this.directionsRenderer) {\n                return;\n            }\n            if (status === google.maps.DirectionsStatus.OK) {\n                this.directionsRenderer.setDirections(response);\n            }\n            else {\n                console.error('Directions request failed due to ' + status);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.nguiMap.clearObjectEvents(this.outputs, this, 'directionsRenderer');\n    }\n}\nDirectionsRenderer.ɵfac = function DirectionsRenderer_Factory(t) { return new (t || DirectionsRenderer)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent), ɵngcc0.ɵɵdirectiveInject(NavigatorGeolocation)); };\nDirectionsRenderer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DirectionsRenderer, selectors: [[\"directions-renderer\"]], inputs: { directions: \"directions\", draggable: \"draggable\", hideRouteList: \"hideRouteList\", infoWindow: \"infoWindow\", panel: \"panel\", markerOptions: \"markerOptions\", polylineOptions: \"polylineOptions\", preserveViewport: \"preserveViewport\", routeIndex: \"routeIndex\", suppressBicyclingLayer: \"suppressBicyclingLayer\", suppressInfoWindows: \"suppressInfoWindows\", suppressMarkers: \"suppressMarkers\", suppressPolylines: \"suppressPolylines\", directionsRequest: [\"directions-request\", \"directionsRequest\"] }, outputs: { directions_changed: \"directions_changed\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nDirectionsRenderer.ctorParameters = () => [\n    { type: NguiMapComponent, },\n    { type: NavigatorGeolocation, },\n];\nDirectionsRenderer.propDecorators = {\n    \"directionsRequest\": [{ type: Input, args: ['directions-request',] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DirectionsRenderer, [{\n        type: Directive,\n        args: [{\n                selector: 'ngui-map > directions-renderer',\n                inputs: INPUTS$6,\n                outputs: OUTPUTS$6\n            }]\n    }], function () { return [{ type: NguiMapComponent }, { type: NavigatorGeolocation }]; }, { directionsRequest: [{\n            type: Input,\n            args: ['directions-request']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$7 = [\n    'options',\n    'circleOptions', 'drawingControl', 'drawingControlOptions', 'drawingMode',\n    'map', 'markerOptions', 'polygonOptions', 'polylineOptions', 'rectangleOptions'\n];\nconst OUTPUTS$7 = [\n    'circlecomplete', 'markercomplete', 'overlaycomplete',\n    'polygoncomplete', 'polylinecomplete', 'rectanglecomplete'\n];\nclass DrawingManager extends BaseMapDirective {\n    /**\n     * @param {?} nguiMapComp\n     */\n    constructor(nguiMapComp) {\n        super(nguiMapComp, 'DrawingManager', INPUTS$7, OUTPUTS$7);\n        this.libraryName = 'drawing';\n    }\n}\nDrawingManager.ɵfac = function DrawingManager_Factory(t) { return new (t || DrawingManager)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent)); };\nDrawingManager.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DrawingManager, selectors: [[\"drawing-manager\"]], inputs: { options: \"options\", circleOptions: \"circleOptions\", drawingControl: \"drawingControl\", drawingControlOptions: \"drawingControlOptions\", drawingMode: \"drawingMode\", map: \"map\", markerOptions: \"markerOptions\", polygonOptions: \"polygonOptions\", polylineOptions: \"polylineOptions\", rectangleOptions: \"rectangleOptions\" }, outputs: { circlecomplete: \"circlecomplete\", markercomplete: \"markercomplete\", overlaycomplete: \"overlaycomplete\", polygoncomplete: \"polygoncomplete\", polylinecomplete: \"polylinecomplete\", rectanglecomplete: \"rectanglecomplete\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nDrawingManager.ctorParameters = () => [\n    { type: NguiMapComponent, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DrawingManager, [{\n        type: Directive,\n        args: [{\n                selector: 'ngui-map > drawing-manager',\n                inputs: INPUTS$7,\n                outputs: OUTPUTS$7\n            }]\n    }], function () { return [{ type: NguiMapComponent }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$8 = ['url', 'bounds', 'clickable', 'opacity'];\nconst OUTPUTS$8 = ['click', 'dblclick'];\nclass GroundOverlay extends BaseMapDirective {\n    /**\n     * @param {?} nguiMapComp\n     */\n    constructor(nguiMapComp) {\n        super(nguiMapComp, 'GroundOverlay', INPUTS$8, OUTPUTS$8);\n        this.objectOptions = /** @type {?} */ ({});\n    }\n    /**\n     * @return {?}\n     */\n    initialize() {\n        // url, bounds are not the options of GroundOverlay\n        this.objectOptions = this.optionBuilder.googlizeAllInputs(['clickable', 'opacity'], this);\n        // noinspection TypeScriptUnresolvedFunction\n        this.mapObject = new google.maps.GroundOverlay(this['url'], this['bounds'], this.objectOptions);\n        this.mapObject.setMap(this.nguiMapComponent.map);\n        this.mapObject['mapObjectName'] = this.mapObjectName;\n        // set google events listeners and emits to this outputs listeners\n        this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n        this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n        this.initialized$.emit(this.mapObject);\n    }\n}\nGroundOverlay.ɵfac = function GroundOverlay_Factory(t) { return new (t || GroundOverlay)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent)); };\nGroundOverlay.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: GroundOverlay, selectors: [[\"ground-overlay\"]], inputs: { url: \"url\", bounds: \"bounds\", clickable: \"clickable\", opacity: \"opacity\" }, outputs: { click: \"click\", dblclick: \"dblclick\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nGroundOverlay.ctorParameters = () => [\n    { type: NguiMapComponent, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GroundOverlay, [{\n        type: Directive,\n        args: [{\n                selector: 'ngui-map > ground-overlay',\n                inputs: INPUTS$8,\n                outputs: OUTPUTS$8\n            }]\n    }], function () { return [{ type: NguiMapComponent }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$9 = ['data', 'dissipating', 'gradient', 'maxIntensity', 'opacity', 'radius', 'options'];\nconst OUTPUTS$9 = [];\nclass HeatmapLayer extends BaseMapDirective {\n    /**\n     * @param {?} nguiMapComp\n     */\n    constructor(nguiMapComp) {\n        super(nguiMapComp, 'HeatmapLayer', INPUTS$9, OUTPUTS$9);\n        this.libraryName = 'visualization';\n    }\n}\nHeatmapLayer.ɵfac = function HeatmapLayer_Factory(t) { return new (t || HeatmapLayer)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent)); };\nHeatmapLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: HeatmapLayer, selectors: [[\"heatmap-layer\"]], inputs: { data: \"data\", dissipating: \"dissipating\", gradient: \"gradient\", maxIntensity: \"maxIntensity\", opacity: \"opacity\", radius: \"radius\", options: \"options\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nHeatmapLayer.ctorParameters = () => [\n    { type: NguiMapComponent, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeatmapLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'ngui-map > heatmap-layer',\n                inputs: INPUTS$9,\n                outputs: OUTPUTS$9\n            }]\n    }], function () { return [{ type: NguiMapComponent }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$10 = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex', 'options'];\nconst OUTPUTS$10 = ['click', 'defaultviewport_changed', 'status_changed'];\nclass KmlLayer extends BaseMapDirective {\n    /**\n     * @param {?} nguiMapComp\n     */\n    constructor(nguiMapComp) {\n        super(nguiMapComp, 'KmlLayer', INPUTS$10, OUTPUTS$10);\n    }\n}\nKmlLayer.ɵfac = function KmlLayer_Factory(t) { return new (t || KmlLayer)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent)); };\nKmlLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: KmlLayer, selectors: [[\"kml-layer\"]], inputs: { clickable: \"clickable\", preserveViewport: \"preserveViewport\", screenOverlays: \"screenOverlays\", suppressInfoWindows: \"suppressInfoWindows\", url: \"url\", zIndex: \"zIndex\", options: \"options\" }, outputs: { click: \"click\", defaultviewport_changed: \"defaultviewport_changed\", status_changed: \"status_changed\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nKmlLayer.ctorParameters = () => [\n    { type: NguiMapComponent, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KmlLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'ngui-map > kml-layer',\n                inputs: INPUTS$10,\n                outputs: OUTPUTS$10\n            }]\n    }], function () { return [{ type: NguiMapComponent }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$11 = [\n    'anchorPoint', 'animation', 'clickable', 'cursor', 'draggable', 'icon', 'label', 'opacity',\n    'optimized', 'place', 'position', 'shape', 'title', 'visible', 'zIndex', 'options',\n    'geoFallbackPosition'\n];\nconst OUTPUTS$11 = [\n    'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\n    'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\n    'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged'\n];\nclass Marker extends BaseMapDirective {\n    /**\n     * @param {?} nguiMapComp\n     */\n    constructor(nguiMapComp) {\n        super(nguiMapComp, 'Marker', INPUTS$11, OUTPUTS$11);\n        this.nguiMapComp = nguiMapComp;\n        this.objectOptions = /** @type {?} */ ({});\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.nguiMapComponent.mapIdledOnce) {\n            // map is ready already\n            this.initialize();\n        }\n        else {\n            this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n        }\n    }\n    /**\n     * @return {?}\n     */\n    initialize() {\n        super.initialize();\n        this.setPosition();\n    }\n    /**\n     * @return {?}\n     */\n    setPosition() {\n        if (!this['position']) {\n            this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(position => {\n                let /** @type {?} */ latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                this.mapObject.setPosition(latLng);\n            }, error => {\n                console.error('ngui-map, error finding the current location');\n                this.mapObject.setPosition(this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n            }));\n        }\n        else if (typeof this['position'] === 'string') {\n            this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({ address: this['position'] }).subscribe(results => {\n                this.mapObject.setPosition(results[0].geometry.location);\n            }, error => {\n                console.error('ngui-map, error finding the location from', this['position']);\n                this.mapObject.setPosition(this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n            }));\n        }\n    }\n}\nMarker.ɵfac = function Marker_Factory(t) { return new (t || Marker)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent)); };\nMarker.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: Marker, selectors: [[\"marker\"]], inputs: { anchorPoint: \"anchorPoint\", animation: \"animation\", clickable: \"clickable\", cursor: \"cursor\", draggable: \"draggable\", icon: \"icon\", label: \"label\", opacity: \"opacity\", optimized: \"optimized\", place: \"place\", position: \"position\", shape: \"shape\", title: \"title\", visible: \"visible\", zIndex: \"zIndex\", options: \"options\", geoFallbackPosition: \"geoFallbackPosition\" }, outputs: { animationChanged: \"animationChanged\", click: \"click\", clickableChanged: \"clickableChanged\", cursorChanged: \"cursorChanged\", dblclick: \"dblclick\", drag: \"drag\", dragend: \"dragend\", draggableChanged: \"draggableChanged\", dragstart: \"dragstart\", flatChanged: \"flatChanged\", iconChanged: \"iconChanged\", mousedown: \"mousedown\", mouseout: \"mouseout\", mouseover: \"mouseover\", mouseup: \"mouseup\", positionChanged: \"positionChanged\", rightclick: \"rightclick\", shapeChanged: \"shapeChanged\", titleChanged: \"titleChanged\", visibleChanged: \"visibleChanged\", zindexChanged: \"zindexChanged\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMarker.ctorParameters = () => [\n    { type: NguiMapComponent, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Marker, [{\n        type: Directive,\n        args: [{\n                selector: 'ngui-map > marker',\n                inputs: INPUTS$11,\n                outputs: OUTPUTS$11\n            }]\n    }], function () { return [{ type: NguiMapComponent }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass PlacesAutoComplete {\n    /**\n     * @param {?} optionBuilder\n     * @param {?} elementRef\n     * @param {?} apiLoader\n     */\n    constructor(optionBuilder, elementRef, apiLoader) {\n        this.optionBuilder = optionBuilder;\n        this.elementRef = elementRef;\n        this.apiLoader = apiLoader;\n        this.place_changed = new EventEmitter();\n        this.initialized$ = new EventEmitter();\n        // only called when map is ready\n        this.initialize = () => {\n            this.objectOptions =\n                this.optionBuilder.googlizeAllInputs(['bounds', 'componentRestrictions', 'types'], this);\n            if (!google.maps.places) {\n                throw missingLibraryError('PlacesAutoComplete', 'places');\n            }\n            this.autocomplete = new google.maps.places.Autocomplete(this.elementRef.nativeElement, this.objectOptions);\n            this.autocomplete.addListener('place_changed', place => {\n                this.place_changed.emit(this.autocomplete.getPlace());\n            });\n            this.initialized$.emit(this.autocomplete);\n        };\n        apiLoader.load();\n        apiLoader.api$\n            .pipe(first())\n            .subscribe(() => this.initialize());\n    }\n}\nPlacesAutoComplete.ɵfac = function PlacesAutoComplete_Factory(t) { return new (t || PlacesAutoComplete)(ɵngcc0.ɵɵdirectiveInject(OptionBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NgMapApiLoader)); };\nPlacesAutoComplete.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: PlacesAutoComplete, selectors: [[\"\", \"places-auto-complete\", \"\"]], inputs: { bounds: \"bounds\", componentRestrictions: \"componentRestrictions\", types: \"types\" }, outputs: { place_changed: \"place_changed\", initialized$: \"initialized$\" } });\n/** @nocollapse */\nPlacesAutoComplete.ctorParameters = () => [\n    { type: OptionBuilder, },\n    { type: ElementRef, },\n    { type: NgMapApiLoader, },\n];\nPlacesAutoComplete.propDecorators = {\n    \"bounds\": [{ type: Input },],\n    \"componentRestrictions\": [{ type: Input },],\n    \"types\": [{ type: Input },],\n    \"place_changed\": [{ type: Output, args: ['place_changed',] },],\n    \"initialized$\": [{ type: Output },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlacesAutoComplete, [{\n        type: Directive,\n        args: [{\n                selector: '[places-auto-complete]'\n            }]\n    }], function () { return [{ type: OptionBuilder }, { type: ɵngcc0.ElementRef }, { type: NgMapApiLoader }]; }, { place_changed: [{\n            type: Output,\n            args: ['place_changed']\n        }], initialized$: [{\n            type: Output\n        }], bounds: [{\n            type: Input\n        }], componentRestrictions: [{\n            type: Input\n        }], types: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$12 = [\n    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'paths',\n    'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n];\nconst OUTPUTS$12 = [\n    'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n    'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick',\n];\nclass Polygon extends BaseMapDirective {\n    /**\n     * @param {?} nguiMapComp\n     */\n    constructor(nguiMapComp) {\n        super(nguiMapComp, 'Polygon', INPUTS$12, OUTPUTS$12);\n    }\n}\nPolygon.ɵfac = function Polygon_Factory(t) { return new (t || Polygon)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent)); };\nPolygon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: Polygon, selectors: [[\"polygon\"], [\"map-polygon\"]], inputs: { clickable: \"clickable\", draggable: \"draggable\", editable: \"editable\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", geodesic: \"geodesic\", paths: \"paths\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", strokePosition: \"strokePosition\", strokeWeight: \"strokeWeight\", visible: \"visible\", zIndex: \"zIndex\", options: \"options\" }, outputs: { click: \"click\", dblclick: \"dblclick\", drag: \"drag\", dragend: \"dragend\", dragstart: \"dragstart\", mousedown: \"mousedown\", mousemove: \"mousemove\", mouseout: \"mouseout\", mouseover: \"mouseover\", mouseup: \"mouseup\", rightclick: \"rightclick\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nPolygon.ctorParameters = () => [\n    { type: NguiMapComponent, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Polygon, [{\n        type: Directive,\n        args: [{\n                selector: 'ngui-map>polygon, ngui-map>map-polygon',\n                inputs: INPUTS$12,\n                outputs: OUTPUTS$12\n            }]\n    }], function () { return [{ type: NguiMapComponent }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$13 = [\n    'clickable', 'draggable', 'editable', 'geodesic', 'icons', 'path', 'strokeColor',\n    'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'options'\n];\nconst OUTPUTS$13 = [\n    'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n    'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'\n];\nclass Polyline extends BaseMapDirective {\n    /**\n     * @param {?} nguiMapComp\n     */\n    constructor(nguiMapComp) {\n        super(nguiMapComp, 'Polyline', INPUTS$13, OUTPUTS$13);\n    }\n}\nPolyline.ɵfac = function Polyline_Factory(t) { return new (t || Polyline)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent)); };\nPolyline.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: Polyline, selectors: [[\"polyline\"]], inputs: { clickable: \"clickable\", draggable: \"draggable\", editable: \"editable\", geodesic: \"geodesic\", icons: \"icons\", path: \"path\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", strokeWeight: \"strokeWeight\", visible: \"visible\", zIndex: \"zIndex\", options: \"options\" }, outputs: { click: \"click\", dblclick: \"dblclick\", drag: \"drag\", dragend: \"dragend\", dragstart: \"dragstart\", mousedown: \"mousedown\", mousemove: \"mousemove\", mouseout: \"mouseout\", mouseover: \"mouseover\", mouseup: \"mouseup\", rightclick: \"rightclick\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nPolyline.ctorParameters = () => [\n    { type: NguiMapComponent, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Polyline, [{\n        type: Directive,\n        args: [{\n                selector: 'ngui-map > polyline',\n                inputs: INPUTS$13,\n                outputs: OUTPUTS$13\n            }]\n    }], function () { return [{ type: NguiMapComponent }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$14 = [\n    'selector', 'options',\n    'addressControl', 'addressControlOptions', 'clickToGo', 'disableDefaultUI', 'disableDoubleClickZoom',\n    'enableCloseButton', 'fullscreenControl', 'fullscreenControlOptions', 'imageDateControl', 'linksControl',\n    'motionTracking', 'motionTrackingControl', 'panControl', 'panControlOptions', 'pano',\n    'position', 'pov', 'scrollwheel', 'showRoadLabels', 'visible', 'zoomControl', 'zoomControlOptions'\n];\nconst OUTPUTS$14 = [\n    'closeclick', 'pano_changed', 'position_changed', 'pov_changed', 'resize', 'status_changed',\n    'visible_changed', 'zoom_changed'\n];\nclass StreetViewPanorama extends BaseMapDirective {\n    /**\n     * @param {?} nguiMapComp\n     */\n    constructor(nguiMapComp) {\n        super(nguiMapComp, 'StreetViewPanorama', INPUTS$14, OUTPUTS$14);\n    }\n    /**\n     * @return {?}\n     */\n    initialize() {\n        this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n        let /** @type {?} */ element;\n        if (this.objectOptions.selector) {\n            // noinspection TypeScriptValidateTypes\n            element = document.querySelector(this['selector']);\n            delete this.objectOptions.selector;\n        }\n        else {\n            element = this.nguiMapComponent.el;\n        }\n        // will be set after geocoded\n        typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n        this.mapObject = new google.maps[this.mapObjectName](element, this.objectOptions);\n        this.mapObject['mapObjectName'] = this.mapObjectName;\n        this.mapObject['nguiMapComponent'] = this.nguiMapComponent;\n        // set google events listeners and emits to this outputs listeners\n        this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n        this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n        this.initialized$.emit(this.mapObject);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.nguiMapComponent.el) {\n            this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');\n        }\n    }\n}\nStreetViewPanorama.ɵfac = function StreetViewPanorama_Factory(t) { return new (t || StreetViewPanorama)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent)); };\nStreetViewPanorama.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: StreetViewPanorama, selectors: [[\"street-view-panorama\"]], inputs: { selector: \"selector\", options: \"options\", addressControl: \"addressControl\", addressControlOptions: \"addressControlOptions\", clickToGo: \"clickToGo\", disableDefaultUI: \"disableDefaultUI\", disableDoubleClickZoom: \"disableDoubleClickZoom\", enableCloseButton: \"enableCloseButton\", fullscreenControl: \"fullscreenControl\", fullscreenControlOptions: \"fullscreenControlOptions\", imageDateControl: \"imageDateControl\", linksControl: \"linksControl\", motionTracking: \"motionTracking\", motionTrackingControl: \"motionTrackingControl\", panControl: \"panControl\", panControlOptions: \"panControlOptions\", pano: \"pano\", position: \"position\", pov: \"pov\", scrollwheel: \"scrollwheel\", showRoadLabels: \"showRoadLabels\", visible: \"visible\", zoomControl: \"zoomControl\", zoomControlOptions: \"zoomControlOptions\" }, outputs: { closeclick: \"closeclick\", pano_changed: \"pano_changed\", position_changed: \"position_changed\", pov_changed: \"pov_changed\", resize: \"resize\", status_changed: \"status_changed\", visible_changed: \"visible_changed\", zoom_changed: \"zoom_changed\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nStreetViewPanorama.ctorParameters = () => [\n    { type: NguiMapComponent, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StreetViewPanorama, [{\n        type: Directive,\n        args: [{\n                selector: 'ngui-map > street-view-panorama',\n                inputs: INPUTS$14,\n                outputs: OUTPUTS$14\n            }]\n    }], function () { return [{ type: NguiMapComponent }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$15 = ['autoRefresh', 'options'];\nconst OUTPUTS$15 = [];\nclass TrafficLayer extends BaseMapDirective {\n    /**\n     * @param {?} nguiMapComp\n     */\n    constructor(nguiMapComp) {\n        super(nguiMapComp, 'TrafficLayer', INPUTS$15, OUTPUTS$15);\n    }\n}\nTrafficLayer.ɵfac = function TrafficLayer_Factory(t) { return new (t || TrafficLayer)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent)); };\nTrafficLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: TrafficLayer, selectors: [[\"traffic-layer\"]], inputs: { autoRefresh: \"autoRefresh\", options: \"options\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nTrafficLayer.ctorParameters = () => [\n    { type: NguiMapComponent, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TrafficLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'ngui-map > traffic-layer',\n                inputs: INPUTS$15,\n                outputs: OUTPUTS$15\n            }]\n    }], function () { return [{ type: NguiMapComponent }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst INPUTS$16 = [];\nconst OUTPUTS$16 = [];\nclass TransitLayer extends BaseMapDirective {\n    /**\n     * @param {?} nguiMapComp\n     */\n    constructor(nguiMapComp) {\n        super(nguiMapComp, 'TransitLayer', INPUTS$16, OUTPUTS$16);\n    }\n}\nTransitLayer.ɵfac = function TransitLayer_Factory(t) { return new (t || TransitLayer)(ɵngcc0.ɵɵdirectiveInject(NguiMapComponent)); };\nTransitLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: TransitLayer, selectors: [[\"transit-layer\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nTransitLayer.ctorParameters = () => [\n    { type: NguiMapComponent, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransitLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'ngui-map > transit-layer',\n                inputs: INPUTS$16,\n                outputs: OUTPUTS$16\n            }]\n    }], function () { return [{ type: NguiMapComponent }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst COMPONENTS_DIRECTIVES = [\n    NguiMapComponent, InfoWindow,\n    Marker, Circle, CustomMarker, Polygon, InfoWindow, Polyline, GroundOverlay,\n    TransitLayer, TrafficLayer, HeatmapLayer, BicyclingLayer, KmlLayer, DataLayer,\n    StreetViewPanorama, PlacesAutoComplete, DirectionsRenderer,\n    DrawingManager,\n];\nclass NguiMapModule {\n    /**\n     * @param {?=} config\n     * @return {?}\n     */\n    static forRoot(config = {}) {\n        return {\n            ngModule: NguiMapModule,\n            providers: [\n                { provide: NG_MAP_CONFIG_TOKEN, useValue: config }\n            ],\n        };\n    }\n}\nNguiMapModule.ɵfac = function NguiMapModule_Factory(t) { return new (t || NguiMapModule)(); };\nNguiMapModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NguiMapModule });\nNguiMapModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        GeoCoder,\n        NavigatorGeolocation,\n        NguiMap,\n        OptionBuilder,\n        { provide: NgMapApiLoader, useClass: NgMapAsyncCallbackApiLoader },\n    ], imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguiMapModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: COMPONENTS_DIRECTIVES,\n                exports: [COMPONENTS_DIRECTIVES],\n                providers: [\n                    GeoCoder,\n                    NavigatorGeolocation,\n                    NguiMap,\n                    OptionBuilder,\n                    { provide: NgMapApiLoader, useClass: NgMapAsyncCallbackApiLoader },\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NguiMapModule, { declarations: function () { return [NguiMapComponent, InfoWindow, Marker, Circle, CustomMarker, Polygon, InfoWindow, Polyline, GroundOverlay, TransitLayer, TrafficLayer, HeatmapLayer, BicyclingLayer, KmlLayer, DataLayer, StreetViewPanorama, PlacesAutoComplete, DirectionsRenderer, DrawingManager]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NguiMapComponent, InfoWindow, Marker, Circle, CustomMarker, Polygon, InfoWindow, Polyline, GroundOverlay, TransitLayer, TrafficLayer, HeatmapLayer, BicyclingLayer, KmlLayer, DataLayer, StreetViewPanorama, PlacesAutoComplete, DirectionsRenderer, DrawingManager]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BicyclingLayer, NavigatorGeolocation, OptionBuilder, NG_MAP_CONFIG_TOKEN, NgMapApiLoader, NgMapAsyncApiLoader, NgMapAsyncCallbackApiLoader, NguiMapComponent, InfoWindow, CustomMarker, Circle, DataLayer, DirectionsRenderer, DrawingManager, GeoCoder, GroundOverlay, HeatmapLayer, KmlLayer, Marker, NguiMap, PlacesAutoComplete, Polygon, Polyline, StreetViewPanorama, TrafficLayer, TransitLayer, NguiMapModule, BaseMapDirective as ɵa };\n\n//# sourceMappingURL=ngui-map.js.map"]},"metadata":{},"sourceType":"module"}