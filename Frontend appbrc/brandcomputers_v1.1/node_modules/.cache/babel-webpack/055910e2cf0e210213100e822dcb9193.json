{"ast":null,"code":"import _inherits from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _slicedToArray from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _regeneratorRuntime from \"D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@babel/runtime/regenerator\";\nimport { __decorate, __metadata, __param, __awaiter } from 'tslib';\nimport { Injectable, NgZone, Input, Directive, EventEmitter, Output, Self, ElementRef, Component, Inject, PLATFORM_ID, QueryList, ContentChildren, forwardRef, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Optional, LOCALE_ID, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject, from, timer, Subject, fromEventPattern, merge, ReplaySubject, bindCallback, of, throwError } from 'rxjs';\nimport { flatMap, sample, switchMap, map, shareReplay, distinctUntilChanged, takeUntil, startWith, skip, multicast } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nvar _c0 = [\"*\"];\n\nvar MapsAPILoader = function MapsAPILoader() {\n  _classCallCheck(this, MapsAPILoader);\n};\n\nMapsAPILoader.ɵfac = function MapsAPILoader_Factory(t) {\n  return new (t || MapsAPILoader)();\n};\n\nMapsAPILoader.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: MapsAPILoader,\n  factory: function factory(t) {\n    return MapsAPILoader.ɵfac(t);\n  }\n});\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\n\nvar GoogleMapsAPIWrapper = /*#__PURE__*/function () {\n  function GoogleMapsAPIWrapper(_loader, _zone) {\n    var _this = this;\n\n    _classCallCheck(this, GoogleMapsAPIWrapper);\n\n    this._loader = _loader;\n    this._zone = _zone;\n    this._map = new Promise(function (resolve) {\n      _this._mapResolver = resolve;\n    });\n  }\n\n  _createClass(GoogleMapsAPIWrapper, [{\n    key: \"createMap\",\n    value: function createMap(el, mapOptions) {\n      var _this2 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this2._loader.load().then(function () {\n          var map = new google.maps.Map(el, mapOptions);\n\n          _this2._mapResolver(map);\n\n          return;\n        });\n      });\n    }\n  }, {\n    key: \"setMapOptions\",\n    value: function setMapOptions(options) {\n      var _this3 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        _this3._map.then(function (m) {\n          m.setOptions(options);\n        });\n      });\n    }\n    /**\n     * Creates a google map marker with the map context\n     */\n\n  }, {\n    key: \"createMarker\",\n    value: function createMarker() {\n      var _this4 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var addToMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return this._zone.runOutsideAngular(function () {\n        return _this4._map.then(function (map) {\n          if (addToMap) {\n            options.map = map;\n          }\n\n          return new google.maps.Marker(options);\n        });\n      });\n    }\n  }, {\n    key: \"createInfoWindow\",\n    value: function createInfoWindow(options) {\n      var _this5 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this5._map.then(function () {\n          return new google.maps.InfoWindow(options);\n        });\n      });\n    }\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n\n  }, {\n    key: \"createCircle\",\n    value: function createCircle(options) {\n      var _this6 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this6._map.then(function (map) {\n          if (typeof options.strokePosition === 'string') {\n            options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n          }\n\n          options.map = map;\n          return new google.maps.Circle(options);\n        });\n      });\n    }\n    /**\n     * Creates a google.map.Rectangle for the current map.\n     */\n\n  }, {\n    key: \"createRectangle\",\n    value: function createRectangle(options) {\n      var _this7 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this7._map.then(function (map) {\n          options.map = map;\n          return new google.maps.Rectangle(options);\n        });\n      });\n    }\n  }, {\n    key: \"createPolyline\",\n    value: function createPolyline(options) {\n      var _this8 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this8.getNativeMap().then(function (map) {\n          var line = new google.maps.Polyline(options);\n          line.setMap(map);\n          return line;\n        });\n      });\n    }\n  }, {\n    key: \"createPolygon\",\n    value: function createPolygon(options) {\n      var _this9 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this9.getNativeMap().then(function (map) {\n          var polygon = new google.maps.Polygon(options);\n          polygon.setMap(map);\n          return polygon;\n        });\n      });\n    }\n    /**\n     * Creates a new google.map.Data layer for the current map\n     */\n\n  }, {\n    key: \"createDataLayer\",\n    value: function createDataLayer(options) {\n      var _this10 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this10._map.then(function (m) {\n          var data = new google.maps.Data(options);\n          data.setMap(m);\n          return data;\n        });\n      });\n    }\n    /**\n     * Creates a TransitLayer instance for a map\n     * @param {TransitLayerOptions} options - used for setting layer options\n     * @returns {Promise<TransitLayer>} a new transit layer object\n     */\n\n  }, {\n    key: \"createTransitLayer\",\n    value: function createTransitLayer(options) {\n      var _this11 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this11._map.then(function (map) {\n          var newLayer = new google.maps.TransitLayer();\n          newLayer.setMap(options.visible ? map : null);\n          return newLayer;\n        });\n      });\n    }\n    /**\n     * Creates a BicyclingLayer instance for a map\n     * @param {BicyclingLayerOptions} options - used for setting layer options\n     * @returns {Promise<BicyclingLayer>} a new bicycling layer object\n     */\n\n  }, {\n    key: \"createBicyclingLayer\",\n    value: function createBicyclingLayer(options) {\n      var _this12 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this12._map.then(function (map) {\n          var newLayer = new google.maps.BicyclingLayer();\n          newLayer.setMap(options.visible ? map : null);\n          return newLayer;\n        });\n      });\n    }\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n\n  }, {\n    key: \"containsLocation\",\n    value: function containsLocation(latLng, polygon) {\n      return google.maps.geometry.poly.containsLocation(latLng, polygon);\n    }\n  }, {\n    key: \"subscribeToMapEvent\",\n    value: function subscribeToMapEvent(eventName) {\n      var _this13 = this;\n\n      return new Observable(function (observer) {\n        _this13._map.then(function (m) {\n          m.addListener(eventName, function (arg) {\n            _this13._zone.run(function () {\n              return observer.next(arg);\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"clearInstanceListeners\",\n    value: function clearInstanceListeners() {\n      var _this14 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        _this14._map.then(function (map) {\n          google.maps.event.clearInstanceListeners(map);\n        });\n      });\n    }\n  }, {\n    key: \"setCenter\",\n    value: function setCenter(latLng) {\n      var _this15 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this15._map.then(function (map) {\n          return map.setCenter(latLng);\n        });\n      });\n    }\n  }, {\n    key: \"getZoom\",\n    value: function getZoom() {\n      var _this16 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this16._map.then(function (map) {\n          return map.getZoom();\n        });\n      });\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      var _this17 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this17._map.then(function (map) {\n          return map.getBounds();\n        });\n      });\n    }\n  }, {\n    key: \"getMapTypeId\",\n    value: function getMapTypeId() {\n      var _this18 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this18._map.then(function (map) {\n          return map.getMapTypeId();\n        });\n      });\n    }\n  }, {\n    key: \"setZoom\",\n    value: function setZoom(zoom) {\n      var _this19 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this19._map.then(function (map) {\n          return map.setZoom(zoom);\n        });\n      });\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      var _this20 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this20._map.then(function (map) {\n          return map.getCenter();\n        });\n      });\n    }\n  }, {\n    key: \"panTo\",\n    value: function panTo(latLng) {\n      var _this21 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this21._map.then(function (map) {\n          return map.panTo(latLng);\n        });\n      });\n    }\n  }, {\n    key: \"panBy\",\n    value: function panBy(x, y) {\n      var _this22 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this22._map.then(function (map) {\n          return map.panBy(x, y);\n        });\n      });\n    }\n  }, {\n    key: \"fitBounds\",\n    value: function fitBounds(latLng, padding) {\n      var _this23 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this23._map.then(function (map) {\n          return map.fitBounds(latLng, padding);\n        });\n      });\n    }\n  }, {\n    key: \"panToBounds\",\n    value: function panToBounds(latLng, padding) {\n      var _this24 = this;\n\n      return this._zone.runOutsideAngular(function () {\n        return _this24._map.then(function (map) {\n          return map.panToBounds(latLng, padding);\n        });\n      });\n    }\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n\n  }, {\n    key: \"getNativeMap\",\n    value: function getNativeMap() {\n      return this._map;\n    }\n    /**\n     * Triggers the given event name on the map instance.\n     */\n\n  }, {\n    key: \"triggerMapEvent\",\n    value: function triggerMapEvent(eventName) {\n      return this._map.then(function (m) {\n        return google.maps.event.trigger(m, eventName);\n      });\n    }\n  }]);\n\n  return GoogleMapsAPIWrapper;\n}();\n\nGoogleMapsAPIWrapper.ɵfac = function GoogleMapsAPIWrapper_Factory(t) {\n  return new (t || GoogleMapsAPIWrapper)(ɵngcc0.ɵɵinject(MapsAPILoader), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nGoogleMapsAPIWrapper.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: GoogleMapsAPIWrapper,\n  factory: function factory(t) {\n    return GoogleMapsAPIWrapper.ɵfac(t);\n  }\n});\n\nGoogleMapsAPIWrapper.ctorParameters = function () {\n  return [{\n    type: MapsAPILoader\n  }, {\n    type: NgZone\n  }];\n};\n\nGoogleMapsAPIWrapper = __decorate([__metadata(\"design:paramtypes\", [MapsAPILoader, NgZone])], GoogleMapsAPIWrapper);\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\n\nvar LayerManager = /*#__PURE__*/function () {\n  function LayerManager(_wrapper) {\n    _classCallCheck(this, LayerManager);\n\n    this._wrapper = _wrapper;\n    this._layers = new Map();\n  }\n  /**\n   * Adds a transit layer to a map instance.\n   * @param {AgmTransitLayer} layer - a TransitLayer object\n   * @param {TransitLayerOptions} options - TransitLayerOptions options\n   * @returns void\n   */\n\n\n  _createClass(LayerManager, [{\n    key: \"addTransitLayer\",\n    value: function addTransitLayer(layer, options) {\n      var newLayer = this._wrapper.createTransitLayer(options);\n\n      this._layers.set(layer, newLayer);\n    }\n    /**\n     * Adds a bicycling layer to a map instance.\n     * @param {AgmBicyclingLayer} layer - a bicycling layer object\n     * @param {BicyclingLayerOptions} options - BicyclingLayer options\n     * @returns void\n     */\n\n  }, {\n    key: \"addBicyclingLayer\",\n    value: function addBicyclingLayer(layer, options) {\n      var newLayer = this._wrapper.createBicyclingLayer(options);\n\n      this._layers.set(layer, newLayer);\n    }\n    /**\n     * Deletes a map layer\n     * @param {AgmTransitLayer|AgmBicyclingLayer} layer - the layer to delete\n     * @returns  Promise<void>\n     */\n\n  }, {\n    key: \"deleteLayer\",\n    value: function deleteLayer(layer) {\n      var _this25 = this;\n\n      return this._layers.get(layer).then(function (currentLayer) {\n        currentLayer.setMap(null);\n\n        _this25._layers.delete(layer);\n      });\n    }\n    /**\n     * Hide/Show a google map layer\n     * @param { AgmTransitLayer|AgmBicyclingLayer} layer - the layer to hide/show\n     * @param {TransitLayerOptions|BicyclingLayerOptions} options - used to set visibility of the layer\n     * @returns Promise<void>\n     */\n\n  }, {\n    key: \"toggleLayerVisibility\",\n    value: function toggleLayerVisibility(layer, options) {\n      var _this26 = this;\n\n      return this._layers.get(layer).then(function (currentLayer) {\n        if (!options.visible) {\n          currentLayer.setMap(null);\n          return;\n        } else {\n          return _this26._wrapper.getNativeMap().then(function (map) {\n            currentLayer.setMap(map);\n          });\n        }\n      });\n    }\n  }]);\n\n  return LayerManager;\n}();\n\nLayerManager.ɵfac = function LayerManager_Factory(t) {\n  return new (t || LayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper));\n};\n\nLayerManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: LayerManager,\n  factory: function factory(t) {\n    return LayerManager.ɵfac(t);\n  }\n});\n\nLayerManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }];\n};\n\nLayerManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper])], LayerManager);\nvar layerId = 0;\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\n\nvar AgmBicyclingLayer = /*#__PURE__*/function () {\n  function AgmBicyclingLayer(_manager) {\n    _classCallCheck(this, AgmBicyclingLayer);\n\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId++).toString();\n    /**\n     * Hide/show bicycling layer\n     */\n\n    this.visible = true;\n  }\n\n  _createClass(AgmBicyclingLayer, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this._addedToManager) {\n        return;\n      }\n\n      this._manager.addBicyclingLayer(this, {\n        visible: this.visible\n      });\n\n      this._addedToManager = true;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._addedToManager) {\n        return;\n      }\n\n      if (changes['visible'] != null) {\n        this._manager.toggleLayerVisibility(this, {\n          visible: changes['visible'].currentValue\n        });\n      }\n    }\n    /** @internal */\n\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AgmBicyclingLayer-\".concat(this._id.toString());\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._manager.deleteLayer(this);\n    }\n  }]);\n\n  return AgmBicyclingLayer;\n}();\n\nAgmBicyclingLayer.ɵfac = function AgmBicyclingLayer_Factory(t) {\n  return new (t || AgmBicyclingLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager));\n};\n\nAgmBicyclingLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmBicyclingLayer,\n  selectors: [[\"agm-bicycling-layer\"]],\n  inputs: {\n    visible: \"visible\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nAgmBicyclingLayer.ctorParameters = function () {\n  return [{\n    type: LayerManager\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmBicyclingLayer.prototype, \"visible\", void 0);\n\nAgmBicyclingLayer = __decorate([__metadata(\"design:paramtypes\", [LayerManager])], AgmBicyclingLayer);\n\nvar CircleManager = /*#__PURE__*/function () {\n  function CircleManager(_apiWrapper, _zone) {\n    _classCallCheck(this, CircleManager);\n\n    this._apiWrapper = _apiWrapper;\n    this._zone = _zone;\n    this._circles = new Map();\n  }\n\n  _createClass(CircleManager, [{\n    key: \"addCircle\",\n    value: function addCircle(circle) {\n      this._circles.set(circle, this._apiWrapper.createCircle({\n        center: {\n          lat: circle.latitude,\n          lng: circle.longitude\n        },\n        clickable: circle.clickable,\n        draggable: circle.draggable,\n        editable: circle.editable,\n        fillColor: circle.fillColor,\n        fillOpacity: circle.fillOpacity,\n        radius: circle.radius,\n        strokeColor: circle.strokeColor,\n        strokeOpacity: circle.strokeOpacity,\n        strokePosition: circle.strokePosition,\n        strokeWeight: circle.strokeWeight,\n        visible: circle.visible,\n        zIndex: circle.zIndex\n      }));\n    }\n    /**\n     * Removes the given circle from the map.\n     */\n\n  }, {\n    key: \"removeCircle\",\n    value: function removeCircle(circle) {\n      var _this27 = this;\n\n      return this._circles.get(circle).then(function (c) {\n        c.setMap(null);\n\n        _this27._circles.delete(circle);\n      });\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(circle, options) {\n      return this._circles.get(circle).then(function (c) {\n        if (typeof options.strokePosition === 'string') {\n          options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n        }\n\n        c.setOptions(options);\n      });\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.getBounds();\n      });\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.getCenter();\n      });\n    }\n  }, {\n    key: \"getRadius\",\n    value: function getRadius(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.getRadius();\n      });\n    }\n  }, {\n    key: \"setCenter\",\n    value: function setCenter(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.setCenter({\n          lat: circle.latitude,\n          lng: circle.longitude\n        });\n      });\n    }\n  }, {\n    key: \"setEditable\",\n    value: function setEditable(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.setEditable(circle.editable);\n      });\n    }\n  }, {\n    key: \"setDraggable\",\n    value: function setDraggable(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.setDraggable(circle.draggable);\n      });\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.setVisible(circle.visible);\n      });\n    }\n  }, {\n    key: \"setRadius\",\n    value: function setRadius(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.setRadius(circle.radius);\n      });\n    }\n  }, {\n    key: \"getNativeCircle\",\n    value: function getNativeCircle(circle) {\n      return this._circles.get(circle);\n    }\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, circle) {\n      var _this28 = this;\n\n      return new Observable(function (observer) {\n        var listener = null;\n\n        _this28._circles.get(circle).then(function (c) {\n          listener = c.addListener(eventName, function (e) {\n            return _this28._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n\n        return function () {\n          if (listener !== null) {\n            listener.remove();\n          }\n        };\n      });\n    }\n  }]);\n\n  return CircleManager;\n}();\n\nCircleManager.ɵfac = function CircleManager_Factory(t) {\n  return new (t || CircleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nCircleManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: CircleManager,\n  factory: function factory(t) {\n    return CircleManager.ɵfac(t);\n  }\n});\n\nCircleManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }];\n};\n\nCircleManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], CircleManager);\nvar AgmCircle_1;\n\nvar AgmCircle = AgmCircle_1 = /*#__PURE__*/function () {\n  function AgmCircle(_manager) {\n    _classCallCheck(this, AgmCircle);\n\n    this._manager = _manager;\n    /**\n     * Indicates whether this Circle handles mouse events. Defaults to true.\n     */\n\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this circle over the map. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this circle by dragging the control points shown at\n     * the center and around the circumference of the circle. Defaults to false.\n     */\n\n    this.editable = false;\n    /**\n     * The radius in meters on the Earth's surface.\n     */\n\n    this.radius = 0;\n    /**\n     * The stroke position. Defaults to CENTER.\n     * This property is not supported on Internet Explorer 8 and earlier.\n     */\n\n    this.strokePosition = 'CENTER';\n    /**\n     * The stroke width in pixels.\n     */\n\n    this.strokeWeight = 0;\n    /**\n     * Whether this circle is visible on the map. Defaults to true.\n     */\n\n    this.visible = true;\n    /**\n     * This event is fired when the circle's center is changed.\n     */\n\n    this.centerChange = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the circle.\n     */\n\n    this.circleClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the circle.\n     */\n\n    this.circleDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the circle.\n     */\n\n    this.drag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the circle.\n     */\n\n    this.dragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the circle.\n     */\n\n    this.dragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the circle.\n     */\n\n    this.mouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the circle.\n     */\n\n    this.mouseMove = new EventEmitter();\n    /**\n     * This event is fired on circle mouseout.\n     */\n\n    this.mouseOut = new EventEmitter();\n    /**\n     * This event is fired on circle mouseover.\n     */\n\n    this.mouseOver = new EventEmitter();\n    /**\n     * This event is fired when the DOM mouseup event is fired on the circle.\n     */\n\n    this.mouseUp = new EventEmitter();\n    /**\n     * This event is fired when the circle's radius is changed.\n     */\n\n    this.radiusChange = new EventEmitter();\n    /**\n     * This event is fired when the circle is right-clicked on.\n     */\n\n    this.rightClick = new EventEmitter();\n    this._circleAddedToManager = false;\n    this._eventSubscriptions = [];\n  }\n  /** @internal */\n\n\n  _createClass(AgmCircle, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._manager.addCircle(this);\n\n      this._circleAddedToManager = true;\n\n      this._registerEventListeners();\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._circleAddedToManager) {\n        return;\n      }\n\n      if (changes['latitude'] || changes['longitude']) {\n        this._manager.setCenter(this);\n      }\n\n      if (changes['editable']) {\n        this._manager.setEditable(this);\n      }\n\n      if (changes['draggable']) {\n        this._manager.setDraggable(this);\n      }\n\n      if (changes['visible']) {\n        this._manager.setVisible(this);\n      }\n\n      if (changes['radius']) {\n        this._manager.setRadius(this);\n      }\n\n      this._updateCircleOptionsChanges(changes);\n    }\n  }, {\n    key: \"_updateCircleOptionsChanges\",\n    value: function _updateCircleOptionsChanges(changes) {\n      var options = {};\n      var optionKeys = Object.keys(changes).filter(function (k) {\n        return AgmCircle_1._mapOptions.indexOf(k) !== -1;\n      });\n      optionKeys.forEach(function (k) {\n        options[k] = changes[k].currentValue;\n      });\n\n      if (optionKeys.length > 0) {\n        this._manager.setOptions(this, options);\n      }\n    }\n  }, {\n    key: \"_registerEventListeners\",\n    value: function _registerEventListeners() {\n      var _this29 = this;\n\n      var events = new Map();\n      events.set('center_changed', this.centerChange);\n      events.set('click', this.circleClick);\n      events.set('dblclick', this.circleDblClick);\n      events.set('drag', this.drag);\n      events.set('dragend', this.dragEnd);\n      events.set('dragstart', this.dragStart);\n      events.set('mousedown', this.mouseDown);\n      events.set('mousemove', this.mouseMove);\n      events.set('mouseout', this.mouseOut);\n      events.set('mouseover', this.mouseOver);\n      events.set('mouseup', this.mouseUp);\n      events.set('radius_changed', this.radiusChange);\n      events.set('rightclick', this.rightClick);\n      events.forEach(function (eventEmitter, eventName) {\n        _this29._eventSubscriptions.push(_this29._manager.createEventObservable(eventName, _this29).subscribe(function (value) {\n          switch (eventName) {\n            case 'radius_changed':\n              _this29._manager.getRadius(_this29).then(function (radius) {\n                return eventEmitter.emit(radius);\n              });\n\n              break;\n\n            case 'center_changed':\n              _this29._manager.getCenter(_this29).then(function (center) {\n                return eventEmitter.emit({\n                  lat: center.lat(),\n                  lng: center.lng()\n                });\n              });\n\n              break;\n\n            default:\n              eventEmitter.emit({\n                coords: {\n                  lat: value.latLng.lat(),\n                  lng: value.latLng.lng()\n                }\n              });\n          }\n        }));\n      });\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._eventSubscriptions.forEach(function (s) {\n        s.unsubscribe();\n      });\n\n      this._eventSubscriptions = null;\n\n      this._manager.removeCircle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Circle.\n     */\n\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      return this._manager.getBounds(this);\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      return this._manager.getCenter(this);\n    }\n  }]);\n\n  return AgmCircle;\n}();\n\nAgmCircle.ɵfac = function AgmCircle_Factory(t) {\n  return new (t || AgmCircle)(ɵngcc0.ɵɵdirectiveInject(CircleManager));\n};\n\nAgmCircle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmCircle,\n  selectors: [[\"agm-circle\"]],\n  inputs: {\n    clickable: \"clickable\",\n    draggable: [\"circleDraggable\", \"draggable\"],\n    editable: \"editable\",\n    radius: \"radius\",\n    strokePosition: \"strokePosition\",\n    strokeWeight: \"strokeWeight\",\n    visible: \"visible\",\n    latitude: \"latitude\",\n    longitude: \"longitude\",\n    fillColor: \"fillColor\",\n    fillOpacity: \"fillOpacity\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    centerChange: \"centerChange\",\n    circleClick: \"circleClick\",\n    circleDblClick: \"circleDblClick\",\n    drag: \"drag\",\n    dragEnd: \"dragEnd\",\n    dragStart: \"dragStart\",\n    mouseDown: \"mouseDown\",\n    mouseMove: \"mouseMove\",\n    mouseOut: \"mouseOut\",\n    mouseOver: \"mouseOver\",\n    mouseUp: \"mouseUp\",\n    radiusChange: \"radiusChange\",\n    rightClick: \"rightClick\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmCircle._mapOptions = ['fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'clickable'];\n\nAgmCircle.ctorParameters = function () {\n  return [{\n    type: CircleManager\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"latitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"longitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"clickable\", void 0);\n\n__decorate([Input('circleDraggable'), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"draggable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"editable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmCircle.prototype, \"fillColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"fillOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"radius\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmCircle.prototype, \"strokeColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"strokeOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmCircle.prototype, \"strokePosition\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"strokeWeight\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"visible\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"zIndex\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"centerChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"circleClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"circleDblClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"drag\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"dragEnd\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"dragStart\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseDown\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseMove\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseOut\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseOver\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseUp\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"radiusChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"rightClick\", void 0);\n\nAgmCircle = AgmCircle_1 = __decorate([__metadata(\"design:paramtypes\", [CircleManager])], AgmCircle);\n/**\n * Manages all Data Layers for a Google Map instance.\n */\n\nvar DataLayerManager = /*#__PURE__*/function () {\n  function DataLayerManager(_wrapper, _zone) {\n    _classCallCheck(this, DataLayerManager);\n\n    this._wrapper = _wrapper;\n    this._zone = _zone;\n    this._layers = new Map();\n  }\n  /**\n   * Adds a new Data Layer to the map.\n   */\n\n\n  _createClass(DataLayerManager, [{\n    key: \"addDataLayer\",\n    value: function addDataLayer(layer) {\n      var _this30 = this;\n\n      var newLayer = this._wrapper.createDataLayer({\n        style: layer.style\n      }).then(function (d) {\n        if (layer.geoJson) {\n          _this30.getDataFeatures(d, layer.geoJson).then(function (features) {\n            return d.features = features;\n          });\n        }\n\n        return d;\n      });\n\n      this._layers.set(layer, newLayer);\n    }\n  }, {\n    key: \"deleteDataLayer\",\n    value: function deleteDataLayer(layer) {\n      var _this31 = this;\n\n      this._layers.get(layer).then(function (l) {\n        l.setMap(null);\n\n        _this31._layers.delete(layer);\n      });\n    }\n  }, {\n    key: \"updateGeoJson\",\n    value: function updateGeoJson(layer, geoJson) {\n      var _this32 = this;\n\n      this._layers.get(layer).then(function (l) {\n        l.forEach(function (feature) {\n          l.remove(feature);\n          var index = l.features.indexOf(feature, 0);\n\n          if (index > -1) {\n            l.features.splice(index, 1);\n          }\n        });\n\n        _this32.getDataFeatures(l, geoJson).then(function (features) {\n          return l.features = features;\n        });\n      });\n    }\n  }, {\n    key: \"setDataOptions\",\n    value: function setDataOptions(layer, options) {\n      this._layers.get(layer).then(function (l) {\n        l.setControlPosition(options.controlPosition);\n        l.setControls(options.controls);\n        l.setDrawingMode(options.drawingMode);\n        l.setStyle(options.style);\n      });\n    }\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, layer) {\n      var _this33 = this;\n\n      return new Observable(function (observer) {\n        _this33._layers.get(layer).then(function (d) {\n          d.addListener(eventName, function (e) {\n            return _this33._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n      });\n    }\n    /**\n     * Extract features from a geoJson using google.maps Data Class\n     * @param d : google.maps.Data class instance\n     * @param geoJson : url or geojson object\n     */\n\n  }, {\n    key: \"getDataFeatures\",\n    value: function getDataFeatures(d, geoJson) {\n      return new Promise(function (resolve, reject) {\n        if (typeof geoJson === 'object') {\n          try {\n            var features = d.addGeoJson(geoJson);\n            resolve(features);\n          } catch (e) {\n            reject(e);\n          }\n        } else if (typeof geoJson === 'string') {\n          d.loadGeoJson(geoJson, null, resolve);\n        } else {\n          reject(\"Impossible to extract features from geoJson: wrong argument type\");\n        }\n      });\n    }\n  }]);\n\n  return DataLayerManager;\n}();\n\nDataLayerManager.ɵfac = function DataLayerManager_Factory(t) {\n  return new (t || DataLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nDataLayerManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DataLayerManager,\n  factory: function factory(t) {\n    return DataLayerManager.ɵfac(t);\n  }\n});\n\nDataLayerManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }];\n};\n\nDataLayerManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], DataLayerManager);\nvar AgmDataLayer_1;\nvar layerId$1 = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\n\nvar AgmDataLayer = AgmDataLayer_1 = /*#__PURE__*/function () {\n  function AgmDataLayer(_manager) {\n    _classCallCheck(this, AgmDataLayer);\n\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId$1++).toString();\n    this._subscriptions = [];\n    /**\n     * This event is fired when a feature in the layer is clicked.\n     */\n\n    this.layerClick = new EventEmitter();\n    /**\n     * The geoJson to be displayed\n     */\n\n    this.geoJson = null;\n  }\n\n  _createClass(AgmDataLayer, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this._addedToManager) {\n        return;\n      }\n\n      this._manager.addDataLayer(this);\n\n      this._addedToManager = true;\n\n      this._addEventListeners();\n    }\n  }, {\n    key: \"_addEventListeners\",\n    value: function _addEventListeners() {\n      var _this34 = this;\n\n      var listeners = [{\n        name: 'click',\n        handler: function handler(ev) {\n          return _this34.layerClick.emit(ev);\n        }\n      }];\n      listeners.forEach(function (obj) {\n        var os = _this34._manager.createEventObservable(obj.name, _this34).subscribe(obj.handler);\n\n        _this34._subscriptions.push(os);\n      });\n    }\n    /** @internal */\n\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AgmDataLayer-\".concat(this._id.toString());\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._manager.deleteDataLayer(this); // unsubscribe all registered observable subscriptions\n\n\n      this._subscriptions.forEach(function (s) {\n        return s.unsubscribe();\n      });\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this35 = this;\n\n      if (!this._addedToManager) {\n        return;\n      }\n\n      var geoJsonChange = changes['geoJson'];\n\n      if (geoJsonChange) {\n        this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n      }\n\n      var dataOptions = {};\n\n      AgmDataLayer_1._dataOptionsAttributes.forEach(function (k) {\n        return dataOptions[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : _this35[k];\n      });\n\n      this._manager.setDataOptions(this, dataOptions);\n    }\n  }]);\n\n  return AgmDataLayer;\n}();\n\nAgmDataLayer.ɵfac = function AgmDataLayer_Factory(t) {\n  return new (t || AgmDataLayer)(ɵngcc0.ɵɵdirectiveInject(DataLayerManager));\n};\n\nAgmDataLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmDataLayer,\n  selectors: [[\"agm-data-layer\"]],\n  inputs: {\n    geoJson: \"geoJson\",\n    style: \"style\"\n  },\n  outputs: {\n    layerClick: \"layerClick\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmDataLayer._dataOptionsAttributes = ['style'];\n\nAgmDataLayer.ctorParameters = function () {\n  return [{\n    type: DataLayerManager\n  }];\n};\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmDataLayer.prototype, \"layerClick\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmDataLayer.prototype, \"geoJson\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Function)], AgmDataLayer.prototype, \"style\", void 0);\n\nAgmDataLayer = AgmDataLayer_1 = __decorate([__metadata(\"design:paramtypes\", [DataLayerManager])], AgmDataLayer);\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\n\nvar FitBoundsAccessor = function FitBoundsAccessor() {\n  _classCallCheck(this, FitBoundsAccessor);\n};\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n\n\nvar FitBoundsService = /*#__PURE__*/function () {\n  function FitBoundsService(loader) {\n    var _this36 = this;\n\n    _classCallCheck(this, FitBoundsService);\n\n    this._boundsChangeSampleTime$ = new BehaviorSubject(200);\n    this._includeInBounds$ = new BehaviorSubject(new Map());\n    this.bounds$ = from(loader.load()).pipe(flatMap(function () {\n      return _this36._includeInBounds$;\n    }), sample(this._boundsChangeSampleTime$.pipe(switchMap(function (time) {\n      return timer(0, time);\n    }))), map(function (includeInBounds) {\n      return _this36._generateBounds(includeInBounds);\n    }), shareReplay(1));\n  }\n\n  _createClass(FitBoundsService, [{\n    key: \"_generateBounds\",\n    value: function _generateBounds(includeInBounds) {\n      var bounds = new google.maps.LatLngBounds();\n      includeInBounds.forEach(function (b) {\n        return bounds.extend(b);\n      });\n      return bounds;\n    }\n  }, {\n    key: \"addToBounds\",\n    value: function addToBounds(latLng) {\n      var id = this._createIdentifier(latLng);\n\n      if (this._includeInBounds$.value.has(id)) {\n        return;\n      }\n\n      var map = this._includeInBounds$.value;\n      map.set(id, latLng);\n\n      this._includeInBounds$.next(map);\n    }\n  }, {\n    key: \"removeFromBounds\",\n    value: function removeFromBounds(latLng) {\n      var map = this._includeInBounds$.value;\n      map.delete(this._createIdentifier(latLng));\n\n      this._includeInBounds$.next(map);\n    }\n  }, {\n    key: \"changeFitBoundsChangeSampleTime\",\n    value: function changeFitBoundsChangeSampleTime(timeMs) {\n      this._boundsChangeSampleTime$.next(timeMs);\n    }\n  }, {\n    key: \"getBounds$\",\n    value: function getBounds$() {\n      return this.bounds$;\n    }\n  }, {\n    key: \"_createIdentifier\",\n    value: function _createIdentifier(latLng) {\n      return \"\".concat(latLng.lat, \"+\").concat(latLng.lng);\n    }\n  }]);\n\n  return FitBoundsService;\n}();\n\nFitBoundsService.ɵfac = function FitBoundsService_Factory(t) {\n  return new (t || FitBoundsService)(ɵngcc0.ɵɵinject(MapsAPILoader));\n};\n\nFitBoundsService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: FitBoundsService,\n  factory: function factory(t) {\n    return FitBoundsService.ɵfac(t);\n  }\n});\n\nFitBoundsService.ctorParameters = function () {\n  return [{\n    type: MapsAPILoader\n  }];\n};\n\nFitBoundsService = __decorate([__metadata(\"design:paramtypes\", [MapsAPILoader])], FitBoundsService);\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\n\nvar AgmFitBounds = /*#__PURE__*/function () {\n  function AgmFitBounds(_fitBoundsAccessor, _fitBoundsService) {\n    _classCallCheck(this, AgmFitBounds);\n\n    this._fitBoundsAccessor = _fitBoundsAccessor;\n    this._fitBoundsService = _fitBoundsService;\n    /**\n     * If the value is true, the element gets added to the bounds of the map.\n     * Default: true.\n     */\n\n    this.agmFitBounds = true;\n    this._destroyed$ = new Subject();\n    this._latestFitBoundsDetails = null;\n  }\n  /**\n   * @internal\n   */\n\n\n  _createClass(AgmFitBounds, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this._updateBounds();\n    }\n    /**\n     * @internal\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this37 = this;\n\n      this._fitBoundsAccessor.getFitBoundsDetails$().pipe(distinctUntilChanged(function (x, y) {\n        return x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng;\n      }), takeUntil(this._destroyed$)).subscribe(function (details) {\n        return _this37._updateBounds(details);\n      });\n    }\n    /*\n     Either the location changed, or visible status changed.\n     Possible state changes are\n     invisible -> visible\n     visible -> invisible\n     visible -> visible (new location)\n    */\n\n  }, {\n    key: \"_updateBounds\",\n    value: function _updateBounds(newFitBoundsDetails) {\n      // either visibility will change, or location, so remove the old one anyway\n      if (this._latestFitBoundsDetails) {\n        this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng); // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n        // true -> false -> true, in which case we still need old value cached here\n\n      }\n\n      if (newFitBoundsDetails) {\n        this._latestFitBoundsDetails = newFitBoundsDetails;\n      }\n\n      if (!this._latestFitBoundsDetails) {\n        return;\n      }\n\n      if (this.agmFitBounds === true) {\n        this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n      }\n    }\n    /**\n     * @internal\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyed$.next();\n\n      this._destroyed$.complete();\n\n      if (this._latestFitBoundsDetails !== null) {\n        this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n      }\n    }\n  }]);\n\n  return AgmFitBounds;\n}();\n\nAgmFitBounds.ɵfac = function AgmFitBounds_Factory(t) {\n  return new (t || AgmFitBounds)(ɵngcc0.ɵɵdirectiveInject(FitBoundsAccessor, 2), ɵngcc0.ɵɵdirectiveInject(FitBoundsService));\n};\n\nAgmFitBounds.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmFitBounds,\n  selectors: [[\"\", \"agmFitBounds\", \"\"]],\n  inputs: {\n    agmFitBounds: \"agmFitBounds\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nAgmFitBounds.ctorParameters = function () {\n  return [{\n    type: FitBoundsAccessor,\n    decorators: [{\n      type: Self\n    }]\n  }, {\n    type: FitBoundsService\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmFitBounds.prototype, \"agmFitBounds\", void 0);\n\nAgmFitBounds = __decorate([__param(0, Self()), __metadata(\"design:paramtypes\", [FitBoundsAccessor, FitBoundsService])], AgmFitBounds);\n\nvar MarkerManager = /*#__PURE__*/function () {\n  function MarkerManager(_mapsWrapper, _zone) {\n    _classCallCheck(this, MarkerManager);\n\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._markers = new Map();\n  }\n\n  _createClass(MarkerManager, [{\n    key: \"convertAnimation\",\n    value: function convertAnimation(uiAnim) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(uiAnim === null)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", null);\n\n              case 4:\n                return _context.abrupt(\"return\", this._mapsWrapper.getNativeMap().then(function () {\n                  return google.maps.Animation[uiAnim];\n                }));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"deleteMarker\",\n    value: function deleteMarker(marker) {\n      var _this38 = this;\n\n      var m = this._markers.get(marker);\n\n      if (m == null) {\n        // marker already deleted\n        return Promise.resolve();\n      }\n\n      return m.then(function (m) {\n        return _this38._zone.run(function () {\n          m.setMap(null);\n\n          _this38._markers.delete(marker);\n        });\n      });\n    }\n  }, {\n    key: \"updateMarkerPosition\",\n    value: function updateMarkerPosition(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setPosition({\n          lat: marker.latitude,\n          lng: marker.longitude\n        });\n      });\n    }\n  }, {\n    key: \"updateTitle\",\n    value: function updateTitle(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setTitle(marker.title);\n      });\n    }\n  }, {\n    key: \"updateLabel\",\n    value: function updateLabel(marker) {\n      return this._markers.get(marker).then(function (m) {\n        m.setLabel(marker.label);\n      });\n    }\n  }, {\n    key: \"updateDraggable\",\n    value: function updateDraggable(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setDraggable(marker.draggable);\n      });\n    }\n  }, {\n    key: \"updateIcon\",\n    value: function updateIcon(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setIcon(marker.iconUrl);\n      });\n    }\n  }, {\n    key: \"updateOpacity\",\n    value: function updateOpacity(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setOpacity(marker.opacity);\n      });\n    }\n  }, {\n    key: \"updateVisible\",\n    value: function updateVisible(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setVisible(marker.visible);\n      });\n    }\n  }, {\n    key: \"updateZIndex\",\n    value: function updateZIndex(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setZIndex(marker.zIndex);\n      });\n    }\n  }, {\n    key: \"updateClickable\",\n    value: function updateClickable(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setClickable(marker.clickable);\n      });\n    }\n  }, {\n    key: \"updateAnimation\",\n    value: function updateAnimation(marker) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var m;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this._markers.get(marker);\n\n              case 2:\n                m = _context2.sent;\n                _context2.t0 = m;\n                _context2.next = 6;\n                return this.convertAnimation(marker.animation);\n\n              case 6:\n                _context2.t1 = _context2.sent;\n\n                _context2.t0.setAnimation.call(_context2.t0, _context2.t1);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"addMarker\",\n    value: function addMarker(marker) {\n      var _this39 = this;\n\n      var markerPromise = new Promise(function (resolve) {\n        return __awaiter(_this39, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.t0 = this._mapsWrapper;\n                  _context3.t1 = {\n                    lat: marker.latitude,\n                    lng: marker.longitude\n                  };\n                  _context3.t2 = marker.label;\n                  _context3.t3 = marker.draggable;\n                  _context3.t4 = marker.iconUrl;\n                  _context3.t5 = marker.opacity;\n                  _context3.t6 = marker.visible;\n                  _context3.t7 = marker.zIndex;\n                  _context3.t8 = marker.title;\n                  _context3.t9 = marker.clickable;\n                  _context3.next = 12;\n                  return this.convertAnimation(marker.animation);\n\n                case 12:\n                  _context3.t10 = _context3.sent;\n                  _context3.t11 = {\n                    position: _context3.t1,\n                    label: _context3.t2,\n                    draggable: _context3.t3,\n                    icon: _context3.t4,\n                    opacity: _context3.t5,\n                    visible: _context3.t6,\n                    zIndex: _context3.t7,\n                    title: _context3.t8,\n                    clickable: _context3.t9,\n                    animation: _context3.t10\n                  };\n                  return _context3.abrupt(\"return\", _context3.t0.createMarker.call(_context3.t0, _context3.t11).then(resolve));\n\n                case 15:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n      });\n\n      this._markers.set(marker, markerPromise);\n    }\n  }, {\n    key: \"getNativeMarker\",\n    value: function getNativeMarker(marker) {\n      return this._markers.get(marker);\n    }\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, marker) {\n      var _this40 = this;\n\n      return new Observable(function (observer) {\n        _this40._markers.get(marker).then(function (m) {\n          m.addListener(eventName, function (e) {\n            return _this40._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n      });\n    }\n  }]);\n\n  return MarkerManager;\n}();\n\nMarkerManager.ɵfac = function MarkerManager_Factory(t) {\n  return new (t || MarkerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nMarkerManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: MarkerManager,\n  factory: function factory(t) {\n    return MarkerManager.ɵfac(t);\n  }\n});\n\nMarkerManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }];\n};\n\nMarkerManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], MarkerManager);\n\nvar InfoWindowManager = /*#__PURE__*/function () {\n  function InfoWindowManager(_mapsWrapper, _zone, _markerManager) {\n    _classCallCheck(this, InfoWindowManager);\n\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._markerManager = _markerManager;\n    this._infoWindows = new Map();\n  }\n\n  _createClass(InfoWindowManager, [{\n    key: \"deleteInfoWindow\",\n    value: function deleteInfoWindow(infoWindow) {\n      var _this41 = this;\n\n      var iWindow = this._infoWindows.get(infoWindow);\n\n      if (iWindow == null) {\n        // info window already deleted\n        return Promise.resolve();\n      }\n\n      return iWindow.then(function (i) {\n        return _this41._zone.run(function () {\n          i.close();\n\n          _this41._infoWindows.delete(infoWindow);\n        });\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(infoWindow) {\n      return this._infoWindows.get(infoWindow).then(function (i) {\n        return i.setPosition({\n          lat: infoWindow.latitude,\n          lng: infoWindow.longitude\n        });\n      });\n    }\n  }, {\n    key: \"setZIndex\",\n    value: function setZIndex(infoWindow) {\n      return this._infoWindows.get(infoWindow).then(function (i) {\n        return i.setZIndex(infoWindow.zIndex);\n      });\n    }\n  }, {\n    key: \"open\",\n    value: function open(infoWindow) {\n      var _this42 = this;\n\n      return this._infoWindows.get(infoWindow).then(function (w) {\n        if (infoWindow.hostMarker != null) {\n          return _this42._markerManager.getNativeMarker(infoWindow.hostMarker).then(function (marker) {\n            return _this42._mapsWrapper.getNativeMap().then(function (map) {\n              return w.open(map, marker);\n            });\n          });\n        }\n\n        return _this42._mapsWrapper.getNativeMap().then(function (map) {\n          return w.open(map);\n        });\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(infoWindow) {\n      return this._infoWindows.get(infoWindow).then(function (w) {\n        return w.close();\n      });\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(infoWindow, options) {\n      return this._infoWindows.get(infoWindow).then(function (i) {\n        return i.setOptions(options);\n      });\n    }\n  }, {\n    key: \"addInfoWindow\",\n    value: function addInfoWindow(infoWindow) {\n      var options = {\n        content: infoWindow.content,\n        maxWidth: infoWindow.maxWidth,\n        zIndex: infoWindow.zIndex,\n        disableAutoPan: infoWindow.disableAutoPan\n      };\n\n      if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n        options.position = {\n          lat: infoWindow.latitude,\n          lng: infoWindow.longitude\n        };\n      }\n\n      var infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n\n      this._infoWindows.set(infoWindow, infoWindowPromise);\n    }\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, infoWindow) {\n      var _this43 = this;\n\n      return new Observable(function (observer) {\n        _this43._infoWindows.get(infoWindow).then(function (i) {\n          i.addListener(eventName, function (e) {\n            return _this43._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n      });\n    }\n  }]);\n\n  return InfoWindowManager;\n}();\n\nInfoWindowManager.ɵfac = function InfoWindowManager_Factory(t) {\n  return new (t || InfoWindowManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(MarkerManager));\n};\n\nInfoWindowManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: InfoWindowManager,\n  factory: function factory(t) {\n    return InfoWindowManager.ɵfac(t);\n  }\n});\n\nInfoWindowManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }, {\n    type: MarkerManager\n  }];\n};\n\nInfoWindowManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone, MarkerManager])], InfoWindowManager);\nvar AgmInfoWindow_1;\nvar infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\n\nvar AgmInfoWindow = AgmInfoWindow_1 = /*#__PURE__*/function () {\n  function AgmInfoWindow(_infoWindowManager, _el) {\n    _classCallCheck(this, AgmInfoWindow);\n\n    this._infoWindowManager = _infoWindowManager;\n    this._el = _el;\n    /**\n     * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n     */\n\n    this.isOpen = false;\n    /**\n     * Emits an event when the info window is closed.\n     */\n\n    this.infoWindowClose = new EventEmitter();\n    this._infoWindowAddedToManager = false;\n    this._id = (infoWindowId++).toString();\n  }\n\n  _createClass(AgmInfoWindow, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n\n      this._infoWindowManager.addInfoWindow(this);\n\n      this._infoWindowAddedToManager = true;\n\n      this._updateOpenState();\n\n      this._registerEventListeners();\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._infoWindowAddedToManager) {\n        return;\n      }\n\n      if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' && typeof this.longitude === 'number') {\n        this._infoWindowManager.setPosition(this);\n      }\n\n      if (changes['zIndex']) {\n        this._infoWindowManager.setZIndex(this);\n      }\n\n      if (changes['isOpen']) {\n        this._updateOpenState();\n      }\n\n      this._setInfoWindowOptions(changes);\n    }\n  }, {\n    key: \"_registerEventListeners\",\n    value: function _registerEventListeners() {\n      var _this44 = this;\n\n      this._infoWindowManager.createEventObservable('closeclick', this).subscribe(function () {\n        _this44.isOpen = false;\n\n        _this44.infoWindowClose.emit();\n      });\n    }\n  }, {\n    key: \"_updateOpenState\",\n    value: function _updateOpenState() {\n      this.isOpen ? this.open() : this.close();\n    }\n  }, {\n    key: \"_setInfoWindowOptions\",\n    value: function _setInfoWindowOptions(changes) {\n      var options = {};\n      var optionKeys = Object.keys(changes).filter(function (k) {\n        return AgmInfoWindow_1._infoWindowOptionsInputs.indexOf(k) !== -1;\n      });\n      optionKeys.forEach(function (k) {\n        options[k] = changes[k].currentValue;\n      });\n\n      this._infoWindowManager.setOptions(this, options);\n    }\n    /**\n     * Opens the info window.\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      return this._infoWindowManager.open(this);\n    }\n    /**\n     * Closes the info window.\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this45 = this;\n\n      return this._infoWindowManager.close(this).then(function () {\n        _this45.infoWindowClose.emit();\n      });\n    }\n    /** @internal */\n\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return 'AgmInfoWindow-' + this._id.toString();\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._infoWindowManager.deleteInfoWindow(this);\n    }\n  }]);\n\n  return AgmInfoWindow;\n}();\n\nAgmInfoWindow.ɵfac = function AgmInfoWindow_Factory(t) {\n  return new (t || AgmInfoWindow)(ɵngcc0.ɵɵdirectiveInject(InfoWindowManager), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nAgmInfoWindow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: AgmInfoWindow,\n  selectors: [[\"agm-info-window\"]],\n  inputs: {\n    isOpen: \"isOpen\",\n    latitude: \"latitude\",\n    longitude: \"longitude\",\n    disableAutoPan: \"disableAutoPan\",\n    zIndex: \"zIndex\",\n    maxWidth: \"maxWidth\"\n  },\n  outputs: {\n    infoWindowClose: \"infoWindowClose\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"agm-info-window-content\"]],\n  template: function AgmInfoWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\nAgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\n\nAgmInfoWindow.ctorParameters = function () {\n  return [{\n    type: InfoWindowManager\n  }, {\n    type: ElementRef\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"latitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"longitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmInfoWindow.prototype, \"disableAutoPan\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"zIndex\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"maxWidth\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmInfoWindow.prototype, \"isOpen\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmInfoWindow.prototype, \"infoWindowClose\", void 0);\n\nAgmInfoWindow = AgmInfoWindow_1 = __decorate([__metadata(\"design:paramtypes\", [InfoWindowManager, ElementRef])], AgmInfoWindow);\n/**\n * Manages all KML Layers for a Google Map instance.\n */\n\nvar KmlLayerManager = /*#__PURE__*/function () {\n  function KmlLayerManager(_wrapper, _zone) {\n    _classCallCheck(this, KmlLayerManager);\n\n    this._wrapper = _wrapper;\n    this._zone = _zone;\n    this._layers = new Map();\n  }\n  /**\n   * Adds a new KML Layer to the map.\n   */\n\n\n  _createClass(KmlLayerManager, [{\n    key: \"addKmlLayer\",\n    value: function addKmlLayer(layer) {\n      var newLayer = this._wrapper.getNativeMap().then(function (m) {\n        return new google.maps.KmlLayer({\n          clickable: layer.clickable,\n          map: m,\n          preserveViewport: layer.preserveViewport,\n          screenOverlays: layer.screenOverlays,\n          suppressInfoWindows: layer.suppressInfoWindows,\n          url: layer.url,\n          zIndex: layer.zIndex\n        });\n      });\n\n      this._layers.set(layer, newLayer);\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(layer, options) {\n      this._layers.get(layer).then(function (l) {\n        return l.setOptions(options);\n      });\n    }\n  }, {\n    key: \"deleteKmlLayer\",\n    value: function deleteKmlLayer(layer) {\n      var _this46 = this;\n\n      this._layers.get(layer).then(function (l) {\n        l.setMap(null);\n\n        _this46._layers.delete(layer);\n      });\n    }\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, layer) {\n      var _this47 = this;\n\n      return new Observable(function (observer) {\n        _this47._layers.get(layer).then(function (m) {\n          m.addListener(eventName, function (e) {\n            return _this47._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n      });\n    }\n  }]);\n\n  return KmlLayerManager;\n}();\n\nKmlLayerManager.ɵfac = function KmlLayerManager_Factory(t) {\n  return new (t || KmlLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nKmlLayerManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: KmlLayerManager,\n  factory: function factory(t) {\n    return KmlLayerManager.ɵfac(t);\n  }\n});\n\nKmlLayerManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }];\n};\n\nKmlLayerManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], KmlLayerManager);\nvar AgmKmlLayer_1;\nvar layerId$2 = 0;\n\nvar AgmKmlLayer = AgmKmlLayer_1 = /*#__PURE__*/function () {\n  function AgmKmlLayer(_manager) {\n    _classCallCheck(this, AgmKmlLayer);\n\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId$2++).toString();\n    this._subscriptions = [];\n    /**\n     * If true, the layer receives mouse events. Default value is true.\n     */\n\n    this.clickable = true;\n    /**\n     * By default, the input map is centered and zoomed to the bounding box of the contents of the\n     * layer.\n     * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n     * were never set.\n     */\n\n    this.preserveViewport = false;\n    /**\n     * Whether to render the screen overlays. Default true.\n     */\n\n    this.screenOverlays = true;\n    /**\n     * Suppress the rendering of info windows when layer features are clicked.\n     */\n\n    this.suppressInfoWindows = false;\n    /**\n     * The URL of the KML document to display.\n     */\n\n    this.url = null;\n    /**\n     * The z-index of the layer.\n     */\n\n    this.zIndex = null;\n    /**\n     * This event is fired when a feature in the layer is clicked.\n     */\n\n    this.layerClick = new EventEmitter();\n    /**\n     * This event is fired when the KML layers default viewport has changed.\n     */\n\n    this.defaultViewportChange = new EventEmitter();\n    /**\n     * This event is fired when the KML layer has finished loading.\n     * At this point it is safe to read the status property to determine if the layer loaded\n     * successfully.\n     */\n\n    this.statusChange = new EventEmitter();\n  }\n\n  _createClass(AgmKmlLayer, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this._addedToManager) {\n        return;\n      }\n\n      this._manager.addKmlLayer(this);\n\n      this._addedToManager = true;\n\n      this._addEventListeners();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._addedToManager) {\n        return;\n      }\n\n      this._updatePolygonOptions(changes);\n    }\n  }, {\n    key: \"_updatePolygonOptions\",\n    value: function _updatePolygonOptions(changes) {\n      var options = Object.keys(changes).filter(function (k) {\n        return AgmKmlLayer_1._kmlLayerOptions.indexOf(k) !== -1;\n      }).reduce(function (obj, k) {\n        obj[k] = changes[k].currentValue;\n        return obj;\n      }, {});\n\n      if (Object.keys(options).length > 0) {\n        this._manager.setOptions(this, options);\n      }\n    }\n  }, {\n    key: \"_addEventListeners\",\n    value: function _addEventListeners() {\n      var _this48 = this;\n\n      var listeners = [{\n        name: 'click',\n        handler: function handler(ev) {\n          return _this48.layerClick.emit(ev);\n        }\n      }, {\n        name: 'defaultviewport_changed',\n        handler: function handler() {\n          return _this48.defaultViewportChange.emit();\n        }\n      }, {\n        name: 'status_changed',\n        handler: function handler() {\n          return _this48.statusChange.emit();\n        }\n      }];\n      listeners.forEach(function (obj) {\n        var os = _this48._manager.createEventObservable(obj.name, _this48).subscribe(obj.handler);\n\n        _this48._subscriptions.push(os);\n      });\n    }\n    /** @internal */\n\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AgmKmlLayer-\".concat(this._id.toString());\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._manager.deleteKmlLayer(this); // unsubscribe all registered observable subscriptions\n\n\n      this._subscriptions.forEach(function (s) {\n        return s.unsubscribe();\n      });\n    }\n  }]);\n\n  return AgmKmlLayer;\n}();\n\nAgmKmlLayer.ɵfac = function AgmKmlLayer_Factory(t) {\n  return new (t || AgmKmlLayer)(ɵngcc0.ɵɵdirectiveInject(KmlLayerManager));\n};\n\nAgmKmlLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmKmlLayer,\n  selectors: [[\"agm-kml-layer\"]],\n  inputs: {\n    clickable: \"clickable\",\n    preserveViewport: \"preserveViewport\",\n    screenOverlays: \"screenOverlays\",\n    suppressInfoWindows: \"suppressInfoWindows\",\n    url: \"url\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    layerClick: \"layerClick\",\n    defaultViewportChange: \"defaultViewportChange\",\n    statusChange: \"statusChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\n\nAgmKmlLayer.ctorParameters = function () {\n  return [{\n    type: KmlLayerManager\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"clickable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"preserveViewport\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"screenOverlays\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"suppressInfoWindows\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmKmlLayer.prototype, \"url\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmKmlLayer.prototype, \"zIndex\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmKmlLayer.prototype, \"layerClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmKmlLayer.prototype, \"defaultViewportChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmKmlLayer.prototype, \"statusChange\", void 0);\n\nAgmKmlLayer = AgmKmlLayer_1 = __decorate([__metadata(\"design:paramtypes\", [KmlLayerManager])], AgmKmlLayer);\n\nfunction createMVCEventObservable(array) {\n  var eventNames = ['insert_at', 'remove_at', 'set_at'];\n  return fromEventPattern(function (handler) {\n    return eventNames.map(function (evName) {\n      return array.addListener(evName, function (index, previous) {\n        return handler.apply(array, [{\n          'newArr': array.getArray(),\n          evName: evName,\n          index: index,\n          previous: previous\n        }]);\n      });\n    });\n  }, function (_handler, evListeners) {\n    return evListeners.forEach(function (evListener) {\n      return evListener.remove();\n    });\n  });\n}\n\nvar MvcArrayMock = /*#__PURE__*/function () {\n  function MvcArrayMock() {\n    _classCallCheck(this, MvcArrayMock);\n\n    this.vals = [];\n    this.listeners = {\n      'remove_at': [],\n      'insert_at': [],\n      'set_at': []\n    };\n  }\n\n  _createClass(MvcArrayMock, [{\n    key: \"clear\",\n    value: function clear() {\n      for (var i = this.vals.length - 1; i >= 0; i--) {\n        this.removeAt(i);\n      }\n    }\n  }, {\n    key: \"getArray\",\n    value: function getArray() {\n      return _toConsumableArray(this.vals);\n    }\n  }, {\n    key: \"getAt\",\n    value: function getAt(i) {\n      return this.vals[i];\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.vals.length;\n    }\n  }, {\n    key: \"insertAt\",\n    value: function insertAt(i, elem) {\n      this.vals.splice(i, 0, elem);\n      this.listeners.insert_at.map(function (listener) {\n        return listener(i);\n      });\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      var _this49 = this;\n\n      var deleted = this.vals.pop();\n      this.listeners.remove_at.map(function (listener) {\n        return listener(_this49.vals.length, deleted);\n      });\n      return deleted;\n    }\n  }, {\n    key: \"push\",\n    value: function push(elem) {\n      var _this50 = this;\n\n      this.vals.push(elem);\n      this.listeners.insert_at.map(function (listener) {\n        return listener(_this50.vals.length - 1);\n      });\n      return this.vals.length;\n    }\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(i) {\n      var deleted = this.vals.splice(i, 1)[0];\n      this.listeners.remove_at.map(function (listener) {\n        return listener(i, deleted);\n      });\n      return deleted;\n    }\n  }, {\n    key: \"setAt\",\n    value: function setAt(i, elem) {\n      var deleted = this.vals[i];\n      this.vals[i] = elem;\n      this.listeners.set_at.map(function (listener) {\n        return listener(i, deleted);\n      });\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      this.vals.forEach(callback);\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener(eventName, handler) {\n      var listenerArr = this.listeners[eventName];\n      listenerArr.push(handler);\n      return {\n        remove: function remove() {\n          listenerArr.splice(listenerArr.indexOf(handler), 1);\n        }\n      };\n    }\n  }]);\n\n  return MvcArrayMock;\n}();\n\nvar PolygonManager = /*#__PURE__*/function () {\n  function PolygonManager(_mapsWrapper, _zone) {\n    _classCallCheck(this, PolygonManager);\n\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._polygons = new Map();\n  }\n\n  _createClass(PolygonManager, [{\n    key: \"addPolygon\",\n    value: function addPolygon(path) {\n      var polygonPromise = this._mapsWrapper.createPolygon({\n        clickable: path.clickable,\n        draggable: path.draggable,\n        editable: path.editable,\n        fillColor: path.fillColor,\n        fillOpacity: path.fillOpacity,\n        geodesic: path.geodesic,\n        paths: path.paths,\n        strokeColor: path.strokeColor,\n        strokeOpacity: path.strokeOpacity,\n        strokeWeight: path.strokeWeight,\n        visible: path.visible,\n        zIndex: path.zIndex\n      });\n\n      this._polygons.set(path, polygonPromise);\n    }\n  }, {\n    key: \"updatePolygon\",\n    value: function updatePolygon(polygon) {\n      var _this51 = this;\n\n      var m = this._polygons.get(polygon);\n\n      if (m == null) {\n        return Promise.resolve();\n      }\n\n      return m.then(function (l) {\n        return _this51._zone.run(function () {\n          l.setPaths(polygon.paths);\n        });\n      });\n    }\n  }, {\n    key: \"setPolygonOptions\",\n    value: function setPolygonOptions(path, options) {\n      return this._polygons.get(path).then(function (l) {\n        l.setOptions(options);\n      });\n    }\n  }, {\n    key: \"deletePolygon\",\n    value: function deletePolygon(paths) {\n      var _this52 = this;\n\n      var m = this._polygons.get(paths);\n\n      if (m == null) {\n        return Promise.resolve();\n      }\n\n      return m.then(function (l) {\n        return _this52._zone.run(function () {\n          l.setMap(null);\n\n          _this52._polygons.delete(paths);\n        });\n      });\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath(polygon) {\n      return this._polygons.get(polygon).then(function (polygon) {\n        return polygon.getPath().getArray();\n      });\n    }\n  }, {\n    key: \"getPaths\",\n    value: function getPaths(polygon) {\n      return this._polygons.get(polygon).then(function (polygon) {\n        return polygon.getPaths().getArray().map(function (p) {\n          return p.getArray();\n        });\n      });\n    }\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, path) {\n      var _this53 = this;\n\n      return new Observable(function (observer) {\n        _this53._polygons.get(path).then(function (l) {\n          l.addListener(eventName, function (e) {\n            return _this53._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"createPathEventObservable\",\n    value: function createPathEventObservable(agmPolygon) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var polygon, paths, pathsChanges$;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this._polygons.get(agmPolygon);\n\n              case 2:\n                polygon = _context4.sent;\n                paths = polygon.getPaths();\n                pathsChanges$ = createMVCEventObservable(paths);\n                return _context4.abrupt(\"return\", pathsChanges$.pipe(startWith({\n                  newArr: paths.getArray()\n                }), // in order to subscribe to them all\n                switchMap(function (parentMVEvent) {\n                  return merge.apply(void 0, _toConsumableArray( // rest parameter\n                  parentMVEvent.newArr.map(function (chMVC, index) {\n                    return createMVCEventObservable(chMVC).pipe(map(function (chMVCEvent) {\n                      return {\n                        parentMVEvent: parentMVEvent,\n                        chMVCEvent: chMVCEvent,\n                        pathIndex: index\n                      };\n                    }));\n                  }))).pipe(startWith({\n                    parentMVEvent: parentMVEvent,\n                    chMVCEvent: null,\n                    pathIndex: null\n                  }));\n                }), // start the merged ob with an event signinifing change to parent\n                skip(1), // skip the manually added event\n                map(function (_ref) {\n                  var parentMVEvent = _ref.parentMVEvent,\n                      chMVCEvent = _ref.chMVCEvent,\n                      pathIndex = _ref.pathIndex;\n                  var retVal;\n\n                  if (!chMVCEvent) {\n                    retVal = {\n                      newArr: parentMVEvent.newArr.map(function (subArr) {\n                        return subArr.getArray().map(function (latLng) {\n                          return latLng.toJSON();\n                        });\n                      }),\n                      eventName: parentMVEvent.evName,\n                      index: parentMVEvent.index\n                    };\n\n                    if (parentMVEvent.previous) {\n                      retVal.previous = parentMVEvent.previous.getArray();\n                    }\n                  } else {\n                    retVal = {\n                      newArr: parentMVEvent.newArr.map(function (subArr) {\n                        return subArr.getArray().map(function (latLng) {\n                          return latLng.toJSON();\n                        });\n                      }),\n                      pathIndex: pathIndex,\n                      eventName: chMVCEvent.evName,\n                      index: chMVCEvent.index\n                    };\n\n                    if (chMVCEvent.previous) {\n                      retVal.previous = chMVCEvent.previous;\n                    }\n                  }\n\n                  return retVal;\n                })));\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }]);\n\n  return PolygonManager;\n}();\n\nPolygonManager.ɵfac = function PolygonManager_Factory(t) {\n  return new (t || PolygonManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nPolygonManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: PolygonManager,\n  factory: function factory(t) {\n    return PolygonManager.ɵfac(t);\n  }\n});\n\nPolygonManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }];\n};\n\nPolygonManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], PolygonManager);\nvar PolylineManager_1;\n\nvar PolylineManager = PolylineManager_1 = /*#__PURE__*/function () {\n  function PolylineManager(_mapsWrapper, _zone) {\n    _classCallCheck(this, PolylineManager);\n\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._polylines = new Map();\n  }\n\n  _createClass(PolylineManager, [{\n    key: \"addPolyline\",\n    value: function addPolyline(line) {\n      var _this54 = this;\n\n      var polylinePromise = this._mapsWrapper.getNativeMap().then(function () {\n        return [PolylineManager_1._convertPoints(line), PolylineManager_1._convertIcons(line)];\n      }).then(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n            path = _ref3[0],\n            icons = _ref3[1];\n\n        return _this54._mapsWrapper.createPolyline({\n          clickable: line.clickable,\n          draggable: line.draggable,\n          editable: line.editable,\n          geodesic: line.geodesic,\n          strokeColor: line.strokeColor,\n          strokeOpacity: line.strokeOpacity,\n          strokeWeight: line.strokeWeight,\n          visible: line.visible,\n          zIndex: line.zIndex,\n          path: path,\n          icons: icons\n        });\n      });\n\n      this._polylines.set(line, polylinePromise);\n    }\n  }, {\n    key: \"updatePolylinePoints\",\n    value: function updatePolylinePoints(line) {\n      var _this55 = this;\n\n      var path = PolylineManager_1._convertPoints(line);\n\n      var m = this._polylines.get(line);\n\n      if (m == null) {\n        return Promise.resolve();\n      }\n\n      return m.then(function (l) {\n        return _this55._zone.run(function () {\n          l.setPath(path);\n        });\n      });\n    }\n  }, {\n    key: \"updateIconSequences\",\n    value: function updateIconSequences(line) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var _this56 = this;\n\n        var icons, m;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this._mapsWrapper.getNativeMap();\n\n              case 2:\n                icons = PolylineManager_1._convertIcons(line);\n                m = this._polylines.get(line);\n\n                if (!(m == null)) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 6:\n                return _context5.abrupt(\"return\", m.then(function (l) {\n                  return _this56._zone.run(function () {\n                    return l.setOptions({\n                      icons: icons\n                    });\n                  });\n                }));\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"setPolylineOptions\",\n    value: function setPolylineOptions(line, options) {\n      return this._polylines.get(line).then(function (l) {\n        l.setOptions(options);\n      });\n    }\n  }, {\n    key: \"deletePolyline\",\n    value: function deletePolyline(line) {\n      var _this57 = this;\n\n      var m = this._polylines.get(line);\n\n      if (m == null) {\n        return Promise.resolve();\n      }\n\n      return m.then(function (l) {\n        return _this57._zone.run(function () {\n          l.setMap(null);\n\n          _this57._polylines.delete(line);\n        });\n      });\n    }\n  }, {\n    key: \"getMVCPath\",\n    value: function getMVCPath(agmPolyline) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var polyline;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this._polylines.get(agmPolyline);\n\n              case 2:\n                polyline = _context6.sent;\n                return _context6.abrupt(\"return\", polyline.getPath());\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath(agmPolyline) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.getMVCPath(agmPolyline);\n\n              case 2:\n                return _context7.abrupt(\"return\", _context7.sent.getArray());\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, line) {\n      var _this58 = this;\n\n      return new Observable(function (observer) {\n        _this58._polylines.get(line).then(function (l) {\n          l.addListener(eventName, function (e) {\n            return _this58._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"createPathEventObservable\",\n    value: function createPathEventObservable(line) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var mvcPath;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.getMVCPath(line);\n\n              case 2:\n                mvcPath = _context8.sent;\n                return _context8.abrupt(\"return\", createMVCEventObservable(mvcPath));\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n    }\n  }], [{\n    key: \"_convertPoints\",\n    value: function _convertPoints(line) {\n      var path = line._getPoints().map(function (point) {\n        return {\n          lat: point.latitude,\n          lng: point.longitude\n        };\n      });\n\n      return path;\n    }\n  }, {\n    key: \"_convertPath\",\n    value: function _convertPath(path) {\n      var symbolPath = google.maps.SymbolPath[path];\n\n      if (typeof symbolPath === 'number') {\n        return symbolPath;\n      } else {\n        return path;\n      }\n    }\n  }, {\n    key: \"_convertIcons\",\n    value: function _convertIcons(line) {\n      var icons = line._getIcons().map(function (agmIcon) {\n        return {\n          fixedRotation: agmIcon.fixedRotation,\n          offset: agmIcon.offset,\n          repeat: agmIcon.repeat,\n          icon: {\n            anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n            fillColor: agmIcon.fillColor,\n            fillOpacity: agmIcon.fillOpacity,\n            path: PolylineManager_1._convertPath(agmIcon.path),\n            rotation: agmIcon.rotation,\n            scale: agmIcon.scale,\n            strokeColor: agmIcon.strokeColor,\n            strokeOpacity: agmIcon.strokeOpacity,\n            strokeWeight: agmIcon.strokeWeight\n          }\n        };\n      }); // prune undefineds;\n\n\n      icons.forEach(function (icon) {\n        Object.entries(icon).forEach(function (_ref4) {\n          var _ref5 = _slicedToArray(_ref4, 2),\n              key = _ref5[0],\n              val = _ref5[1];\n\n          if (typeof val === 'undefined') {\n            delete icon[key];\n          }\n        });\n\n        if (typeof icon.icon.anchor.x === 'undefined' || typeof icon.icon.anchor.y === 'undefined') {\n          delete icon.icon.anchor;\n        }\n      });\n      return icons;\n    }\n  }]);\n\n  return PolylineManager;\n}();\n\nPolylineManager.ɵfac = function PolylineManager_Factory(t) {\n  return new (t || PolylineManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nPolylineManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: PolylineManager,\n  factory: function factory(t) {\n    return PolylineManager.ɵfac(t);\n  }\n});\n\nPolylineManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }];\n};\n\nPolylineManager = PolylineManager_1 = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], PolylineManager);\n\nvar RectangleManager = /*#__PURE__*/function () {\n  function RectangleManager(_apiWrapper, _zone) {\n    _classCallCheck(this, RectangleManager);\n\n    this._apiWrapper = _apiWrapper;\n    this._zone = _zone;\n    this._rectangles = new Map();\n  }\n\n  _createClass(RectangleManager, [{\n    key: \"addRectangle\",\n    value: function addRectangle(rectangle) {\n      this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n        bounds: {\n          north: rectangle.north,\n          east: rectangle.east,\n          south: rectangle.south,\n          west: rectangle.west\n        },\n        clickable: rectangle.clickable,\n        draggable: rectangle.draggable,\n        editable: rectangle.editable,\n        fillColor: rectangle.fillColor,\n        fillOpacity: rectangle.fillOpacity,\n        strokeColor: rectangle.strokeColor,\n        strokeOpacity: rectangle.strokeOpacity,\n        strokePosition: rectangle.strokePosition,\n        strokeWeight: rectangle.strokeWeight,\n        visible: rectangle.visible,\n        zIndex: rectangle.zIndex\n      }));\n    }\n    /**\n     * Removes the given rectangle from the map.\n     */\n\n  }, {\n    key: \"removeRectangle\",\n    value: function removeRectangle(rectangle) {\n      var _this59 = this;\n\n      return this._rectangles.get(rectangle).then(function (r) {\n        r.setMap(null);\n\n        _this59._rectangles.delete(rectangle);\n      });\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(rectangle, options) {\n      return this._rectangles.get(rectangle).then(function (r) {\n        return r.setOptions(options);\n      });\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds(rectangle) {\n      return this._rectangles.get(rectangle).then(function (r) {\n        return r.getBounds();\n      });\n    }\n  }, {\n    key: \"setBounds\",\n    value: function setBounds(rectangle) {\n      return this._rectangles.get(rectangle).then(function (r) {\n        return r.setBounds({\n          north: rectangle.north,\n          east: rectangle.east,\n          south: rectangle.south,\n          west: rectangle.west\n        });\n      });\n    }\n  }, {\n    key: \"setEditable\",\n    value: function setEditable(rectangle) {\n      return this._rectangles.get(rectangle).then(function (r) {\n        return r.setEditable(rectangle.editable);\n      });\n    }\n  }, {\n    key: \"setDraggable\",\n    value: function setDraggable(rectangle) {\n      return this._rectangles.get(rectangle).then(function (r) {\n        return r.setDraggable(rectangle.draggable);\n      });\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(rectangle) {\n      return this._rectangles.get(rectangle).then(function (r) {\n        return r.setVisible(rectangle.visible);\n      });\n    }\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, rectangle) {\n      var _this60 = this;\n\n      return Observable.create(function (observer) {\n        var listener = null;\n\n        _this60._rectangles.get(rectangle).then(function (r) {\n          listener = r.addListener(eventName, function (e) {\n            return _this60._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n\n        return function () {\n          if (listener !== null) {\n            listener.remove();\n          }\n        };\n      });\n    }\n  }]);\n\n  return RectangleManager;\n}();\n\nRectangleManager.ɵfac = function RectangleManager_Factory(t) {\n  return new (t || RectangleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nRectangleManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: RectangleManager,\n  factory: function factory(t) {\n    return RectangleManager.ɵfac(t);\n  }\n});\n\nRectangleManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }];\n};\n\nRectangleManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], RectangleManager);\nvar AgmMap_1;\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\n\nvar AgmMap = AgmMap_1 = /*#__PURE__*/function () {\n  function AgmMap(_elem, _mapsWrapper, _platformId, _fitBoundsService, _zone) {\n    _classCallCheck(this, AgmMap);\n\n    this._elem = _elem;\n    this._mapsWrapper = _mapsWrapper;\n    this._platformId = _platformId;\n    this._fitBoundsService = _fitBoundsService;\n    this._zone = _zone;\n    /**\n     * The longitude that defines the center of the map.\n     */\n\n    this.longitude = 0;\n    /**\n     * The latitude that defines the center of the map.\n     */\n\n    this.latitude = 0;\n    /**\n     * The zoom level of the map. The default zoom level is 8.\n     */\n\n    this.zoom = 8;\n    /**\n     * Enables/disables if map is draggable.\n     */\n    // tslint:disable-next-line:no-input-rename\n\n    this.draggable = true;\n    /**\n     * Enables/disables zoom and center on double click. Enabled by default.\n     */\n\n    this.disableDoubleClickZoom = false;\n    /**\n     * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n     * value cannot get updated.\n     */\n\n    this.disableDefaultUI = false;\n    /**\n     * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n     */\n\n    this.scrollwheel = true;\n    /**\n     * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n     * enabled by default.\n     */\n\n    this.keyboardShortcuts = true;\n    /**\n     * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n     * modes, these styles will only apply to labels and geometry.\n     */\n\n    this.styles = [];\n    /**\n     * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n     * used to\n     * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n     */\n\n    this.usePanning = false;\n    /**\n     * Sets the viewport to contain the given bounds.\n     * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n     */\n\n    this.fitBounds = false;\n    /**\n     * The initial enabled/disabled state of the Scale control. This is disabled by default.\n     */\n\n    this.scaleControl = false;\n    /**\n     * The initial enabled/disabled state of the Map type control.\n     */\n\n    this.mapTypeControl = false;\n    /**\n     * The initial enabled/disabled state of the Pan control.\n     */\n\n    this.panControl = false;\n    /**\n     * The initial enabled/disabled state of the Rotate control.\n     */\n\n    this.rotateControl = false;\n    /**\n     * The initial enabled/disabled state of the Fullscreen control.\n     */\n\n    this.fullscreenControl = false;\n    /**\n     * The map mapTypeId. Defaults to 'roadmap'.\n     */\n\n    this.mapTypeId = 'roadmap';\n    /**\n     * When false, map icons are not clickable. A map icon represents a point of interest,\n     * also known as a POI. By default map icons are clickable.\n     */\n\n    this.clickableIcons = true;\n    /**\n     * A map icon represents a point of interest, also known as a POI.\n     * When map icons are clickable by default, an info window is displayed.\n     * When this property is set to false, the info window will not be shown but the click event\n     * will still fire\n     */\n\n    this.showDefaultInfoWindow = true;\n    /**\n     * This setting controls how gestures on the map are handled.\n     * Allowed values:\n     * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n     * - 'greedy'      (All touch gestures pan or zoom the map.)\n     * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n     * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n     */\n\n    this.gestureHandling = 'auto';\n    /**\n     * Controls the automatic switching behavior for the angle of incidence of\n     * the map. The only allowed values are 0 and 45. The value 0 causes the map\n     * to always use a 0° overhead view regardless of the zoom level and\n     * viewport. The value 45 causes the tilt angle to automatically switch to\n     * 45 whenever 45° imagery is available for the current zoom level and\n     * viewport, and switch back to 0 whenever 45° imagery is not available\n     * (this is the default behavior). 45° imagery is only available for\n     * satellite and hybrid map types, within some locations, and at some zoom\n     * levels. Note: getTilt returns the current tilt angle, not the value\n     * specified by this option. Because getTilt and this option refer to\n     * different things, do not bind() the tilt property; doing so may yield\n     * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n     */\n\n    this.tilt = 0;\n    this._observableSubscriptions = [];\n    /**\n     * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n     * marker or infoWindow).\n     */\n\n    this.mapClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n     * on a marker or infoWindow).\n     */\n\n    this.mapRightClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n     * on a marker or infoWindow).\n     */\n\n    this.mapDblClick = new EventEmitter();\n    /**\n     * This event emitter is fired when the map center changes.\n     */\n\n    this.centerChange = new EventEmitter();\n    /**\n     * This event is fired when the viewport bounds have changed.\n     */\n\n    this.boundsChange = new EventEmitter();\n    /**\n     * This event is fired when the mapTypeId property changes.\n     */\n\n    this.mapTypeIdChange = new EventEmitter();\n    /**\n     * This event is fired when the map becomes idle after panning or zooming.\n     */\n\n    this.idle = new EventEmitter();\n    /**\n     * This event is fired when the zoom level has changed.\n     */\n\n    this.zoomChange = new EventEmitter();\n    /**\n     * This event is fired when the google map is fully initialized.\n     * You get the google.maps.Map instance as a result of this EventEmitter.\n     */\n\n    this.mapReady = new EventEmitter();\n    /**\n     * This event is fired when the visible tiles have finished loading.\n     */\n\n    this.tilesLoaded = new EventEmitter();\n  }\n  /** @internal */\n\n\n  _createClass(AgmMap, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this._platformId)) {\n        // The code is running on the server, do nothing\n        return;\n      } // todo: this should be solved with a new component and a viewChild decorator\n\n\n      var container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n\n      this._initMapInstance(container);\n    }\n  }, {\n    key: \"_initMapInstance\",\n    value: function _initMapInstance(el) {\n      var _this61 = this;\n\n      this._mapsWrapper.createMap(el, {\n        center: {\n          lat: this.latitude || 0,\n          lng: this.longitude || 0\n        },\n        zoom: this.zoom,\n        minZoom: this.minZoom,\n        maxZoom: this.maxZoom,\n        controlSize: this.controlSize,\n        disableDefaultUI: this.disableDefaultUI,\n        disableDoubleClickZoom: this.disableDoubleClickZoom,\n        scrollwheel: this.scrollwheel,\n        backgroundColor: this.backgroundColor,\n        draggable: this.draggable,\n        draggableCursor: this.draggableCursor,\n        draggingCursor: this.draggingCursor,\n        keyboardShortcuts: this.keyboardShortcuts,\n        styles: this.styles,\n        zoomControl: this.zoomControl,\n        zoomControlOptions: this.zoomControlOptions,\n        streetViewControl: this.streetViewControl,\n        streetViewControlOptions: this.streetViewControlOptions,\n        scaleControl: this.scaleControl,\n        scaleControlOptions: this.scaleControlOptions,\n        mapTypeControl: this.mapTypeControl,\n        mapTypeControlOptions: this.mapTypeControlOptions,\n        panControl: this.panControl,\n        panControlOptions: this.panControlOptions,\n        rotateControl: this.rotateControl,\n        rotateControlOptions: this.rotateControlOptions,\n        fullscreenControl: this.fullscreenControl,\n        fullscreenControlOptions: this.fullscreenControlOptions,\n        mapTypeId: this.mapTypeId,\n        clickableIcons: this.clickableIcons,\n        gestureHandling: this.gestureHandling,\n        tilt: this.tilt,\n        restriction: this.restriction\n      }).then(function () {\n        return _this61._mapsWrapper.getNativeMap();\n      }).then(function (map) {\n        return _this61.mapReady.emit(map);\n      }); // register event listeners\n\n\n      this._handleMapCenterChange();\n\n      this._handleMapZoomChange();\n\n      this._handleMapMouseEvents();\n\n      this._handleBoundsChange();\n\n      this._handleMapTypeIdChange();\n\n      this._handleTilesLoadedEvent();\n\n      this._handleIdleEvent();\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      // unsubscribe all registered observable subscriptions\n      this._observableSubscriptions.forEach(function (s) {\n        return s.unsubscribe();\n      }); // remove all listeners from the map instance\n\n\n      this._mapsWrapper.clearInstanceListeners();\n\n      if (this._fitBoundsSubscription) {\n        this._fitBoundsSubscription.unsubscribe();\n      }\n    }\n    /* @internal */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this._updateMapOptionsChanges(changes);\n\n      this._updatePosition(changes);\n    }\n  }, {\n    key: \"_updateMapOptionsChanges\",\n    value: function _updateMapOptionsChanges(changes) {\n      var options = {};\n      var optionKeys = Object.keys(changes).filter(function (k) {\n        return AgmMap_1._mapOptionsAttributes.indexOf(k) !== -1;\n      });\n      optionKeys.forEach(function (k) {\n        options[k] = changes[k].currentValue;\n      });\n\n      this._mapsWrapper.setMapOptions(options);\n    }\n    /**\n     * Triggers a resize event on the google map instance.\n     * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n\n  }, {\n    key: \"triggerResize\",\n    value: function triggerResize() {\n      var _this62 = this;\n\n      var recenter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      // Note: When we would trigger the resize event and show the map in the same turn (which is a\n      // common case for triggering a resize event), then the resize event would not\n      // work (to show the map), so we trigger the event in a timeout.\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          return _this62._mapsWrapper.triggerMapEvent('resize').then(function () {\n            if (recenter) {\n              _this62.fitBounds != null ? _this62._fitBounds() : _this62._setCenter();\n            }\n\n            resolve();\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_updatePosition\",\n    value: function _updatePosition(changes) {\n      if (changes['latitude'] == null && changes['longitude'] == null && !changes['fitBounds']) {\n        // no position update needed\n        return;\n      } // we prefer fitBounds in changes\n\n\n      if ('fitBounds' in changes) {\n        this._fitBounds();\n\n        return;\n      }\n\n      if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n        return;\n      }\n\n      this._setCenter();\n    }\n  }, {\n    key: \"_setCenter\",\n    value: function _setCenter() {\n      var newCenter = {\n        lat: this.latitude,\n        lng: this.longitude\n      };\n\n      if (this.usePanning) {\n        this._mapsWrapper.panTo(newCenter);\n      } else {\n        this._mapsWrapper.setCenter(newCenter);\n      }\n    }\n  }, {\n    key: \"_fitBounds\",\n    value: function _fitBounds() {\n      switch (this.fitBounds) {\n        case true:\n          this._subscribeToFitBoundsUpdates();\n\n          break;\n\n        case false:\n          if (this._fitBoundsSubscription) {\n            this._fitBoundsSubscription.unsubscribe();\n          }\n\n          break;\n\n        default:\n          this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n\n      }\n    }\n  }, {\n    key: \"_subscribeToFitBoundsUpdates\",\n    value: function _subscribeToFitBoundsUpdates() {\n      var _this63 = this;\n\n      this._zone.runOutsideAngular(function () {\n        _this63._fitBoundsSubscription = _this63._fitBoundsService.getBounds$().subscribe(function (b) {\n          _this63._zone.run(function () {\n            return _this63._updateBounds(b, _this63.fitBoundsPadding);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_updateBounds\",\n    value: function _updateBounds(bounds, padding) {\n      if (!bounds) {\n        return;\n      }\n\n      if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n        var newBounds = new google.maps.LatLngBounds();\n        newBounds.union(bounds);\n        bounds = newBounds;\n      }\n\n      if (this.usePanning) {\n        this._mapsWrapper.panToBounds(bounds, padding);\n\n        return;\n      }\n\n      this._mapsWrapper.fitBounds(bounds, padding);\n    }\n  }, {\n    key: \"_isLatLngBoundsLiteral\",\n    value: function _isLatLngBoundsLiteral(bounds) {\n      return bounds != null && bounds.extend === undefined;\n    }\n  }, {\n    key: \"_handleMapCenterChange\",\n    value: function _handleMapCenterChange() {\n      var _this64 = this;\n\n      var s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(function () {\n        _this64._mapsWrapper.getCenter().then(function (center) {\n          _this64.latitude = center.lat();\n          _this64.longitude = center.lng();\n\n          _this64.centerChange.emit({\n            lat: _this64.latitude,\n            lng: _this64.longitude\n          });\n        });\n      });\n\n      this._observableSubscriptions.push(s);\n    }\n  }, {\n    key: \"_handleBoundsChange\",\n    value: function _handleBoundsChange() {\n      var _this65 = this;\n\n      var s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(function () {\n        _this65._mapsWrapper.getBounds().then(function (bounds) {\n          _this65.boundsChange.emit(bounds);\n        });\n      });\n\n      this._observableSubscriptions.push(s);\n    }\n  }, {\n    key: \"_handleMapTypeIdChange\",\n    value: function _handleMapTypeIdChange() {\n      var _this66 = this;\n\n      var s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(function () {\n        _this66._mapsWrapper.getMapTypeId().then(function (mapTypeId) {\n          _this66.mapTypeIdChange.emit(mapTypeId);\n        });\n      });\n\n      this._observableSubscriptions.push(s);\n    }\n  }, {\n    key: \"_handleMapZoomChange\",\n    value: function _handleMapZoomChange() {\n      var _this67 = this;\n\n      var s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(function () {\n        _this67._mapsWrapper.getZoom().then(function (z) {\n          _this67.zoom = z;\n\n          _this67.zoomChange.emit(z);\n        });\n      });\n\n      this._observableSubscriptions.push(s);\n    }\n  }, {\n    key: \"_handleIdleEvent\",\n    value: function _handleIdleEvent() {\n      var _this68 = this;\n\n      var s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(function () {\n        _this68.idle.emit(void 0);\n      });\n\n      this._observableSubscriptions.push(s);\n    }\n  }, {\n    key: \"_handleTilesLoadedEvent\",\n    value: function _handleTilesLoadedEvent() {\n      var _this69 = this;\n\n      var s = this._mapsWrapper.subscribeToMapEvent('tilesloaded').subscribe(function () {\n        return _this69.tilesLoaded.emit(void 0);\n      });\n\n      this._observableSubscriptions.push(s);\n    }\n  }, {\n    key: \"_handleMapMouseEvents\",\n    value: function _handleMapMouseEvents() {\n      var _this70 = this;\n\n      var events = [{\n        name: 'click',\n        emitter: this.mapClick\n      }, {\n        name: 'rightclick',\n        emitter: this.mapRightClick\n      }, {\n        name: 'dblclick',\n        emitter: this.mapDblClick\n      }];\n      events.forEach(function (e) {\n        var s = _this70._mapsWrapper.subscribeToMapEvent(e.name).subscribe(function (event) {\n          var value = {\n            coords: {\n              lat: event.latLng.lat(),\n              lng: event.latLng.lng()\n            },\n            placeId: event.placeId\n          }; // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n\n          if (value.placeId && !_this70.showDefaultInfoWindow) {\n            event.stop();\n          }\n\n          e.emitter.emit(value);\n        });\n\n        _this70._observableSubscriptions.push(s);\n      });\n    }\n  }]);\n\n  return AgmMap;\n}();\n\nAgmMap.ɵfac = function AgmMap_Factory(t) {\n  return new (t || AgmMap)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(FitBoundsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nAgmMap.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: AgmMap,\n  selectors: [[\"agm-map\"]],\n  hostVars: 2,\n  hostBindings: function AgmMap_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"sebm-google-map-container\", true);\n    }\n  },\n  inputs: {\n    longitude: \"longitude\",\n    latitude: \"latitude\",\n    zoom: \"zoom\",\n    draggable: [\"mapDraggable\", \"draggable\"],\n    disableDoubleClickZoom: \"disableDoubleClickZoom\",\n    disableDefaultUI: \"disableDefaultUI\",\n    scrollwheel: \"scrollwheel\",\n    keyboardShortcuts: \"keyboardShortcuts\",\n    styles: \"styles\",\n    usePanning: \"usePanning\",\n    fitBounds: \"fitBounds\",\n    scaleControl: \"scaleControl\",\n    mapTypeControl: \"mapTypeControl\",\n    panControl: \"panControl\",\n    rotateControl: \"rotateControl\",\n    fullscreenControl: \"fullscreenControl\",\n    mapTypeId: \"mapTypeId\",\n    clickableIcons: \"clickableIcons\",\n    showDefaultInfoWindow: \"showDefaultInfoWindow\",\n    gestureHandling: \"gestureHandling\",\n    tilt: \"tilt\",\n    minZoom: \"minZoom\",\n    maxZoom: \"maxZoom\",\n    controlSize: \"controlSize\",\n    backgroundColor: \"backgroundColor\",\n    draggableCursor: \"draggableCursor\",\n    draggingCursor: \"draggingCursor\",\n    zoomControl: \"zoomControl\",\n    zoomControlOptions: \"zoomControlOptions\",\n    streetViewControl: \"streetViewControl\",\n    streetViewControlOptions: \"streetViewControlOptions\",\n    fitBoundsPadding: \"fitBoundsPadding\",\n    scaleControlOptions: \"scaleControlOptions\",\n    mapTypeControlOptions: \"mapTypeControlOptions\",\n    panControlOptions: \"panControlOptions\",\n    rotateControlOptions: \"rotateControlOptions\",\n    fullscreenControlOptions: \"fullscreenControlOptions\",\n    restriction: \"restriction\"\n  },\n  outputs: {\n    mapClick: \"mapClick\",\n    mapRightClick: \"mapRightClick\",\n    mapDblClick: \"mapDblClick\",\n    centerChange: \"centerChange\",\n    boundsChange: \"boundsChange\",\n    mapTypeIdChange: \"mapTypeIdChange\",\n    idle: \"idle\",\n    zoomChange: \"zoomChange\",\n    mapReady: \"mapReady\",\n    tilesLoaded: \"tilesLoaded\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([CircleManager, DataLayerManager, DataLayerManager, FitBoundsService, GoogleMapsAPIWrapper, InfoWindowManager, KmlLayerManager, LayerManager, MarkerManager, PolygonManager, PolylineManager, RectangleManager]), ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"agm-map-container-inner\", \"sebm-google-map-container-inner\"], [1, \"agm-map-content\"]],\n  template: function AgmMap_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".agm-map-container-inner[_ngcontent-%COMP%] {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content[_ngcontent-%COMP%] {\\n      display:none;\\n    }\"]\n});\n/**\n * Map option attributes that can change over time\n */\n\nAgmMap._mapOptionsAttributes = ['disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor', 'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl', 'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom', 'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions', 'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions', 'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction'];\n\nAgmMap.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: FitBoundsService\n  }, {\n    type: NgZone\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"longitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"latitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"zoom\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMap.prototype, \"minZoom\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMap.prototype, \"maxZoom\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMap.prototype, \"controlSize\", void 0);\n\n__decorate([Input('mapDraggable'), __metadata(\"design:type\", Object)], AgmMap.prototype, \"draggable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"disableDoubleClickZoom\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"disableDefaultUI\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"scrollwheel\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"backgroundColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"draggableCursor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"draggingCursor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"keyboardShortcuts\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmMap.prototype, \"zoomControl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"zoomControlOptions\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Array)], AgmMap.prototype, \"styles\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"usePanning\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmMap.prototype, \"streetViewControl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"streetViewControlOptions\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fitBounds\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fitBoundsPadding\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"scaleControl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"scaleControlOptions\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"mapTypeControl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"mapTypeControlOptions\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"panControl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"panControlOptions\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"rotateControl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"rotateControlOptions\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fullscreenControl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fullscreenControlOptions\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"mapTypeId\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"clickableIcons\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"showDefaultInfoWindow\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"gestureHandling\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"tilt\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"restriction\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapRightClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapDblClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"centerChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"boundsChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapTypeIdChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"idle\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"zoomChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapReady\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"tilesLoaded\", void 0);\n\nAgmMap = AgmMap_1 = __decorate([__param(2, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, GoogleMapsAPIWrapper, Object, FitBoundsService, NgZone])], AgmMap);\nvar AgmMarker_1;\nvar markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\n\nvar AgmMarker = AgmMarker_1 = /*#__PURE__*/function () {\n  function AgmMarker(_markerManager) {\n    _classCallCheck(this, AgmMarker);\n\n    this._markerManager = _markerManager;\n    /**\n     * If true, the marker can be dragged. Default value is false.\n     */\n    // tslint:disable-next-line:no-input-rename\n\n    this.draggable = false;\n    /**\n     * If true, the marker is visible\n     */\n\n    this.visible = true;\n    /**\n     * Whether to automatically open the child info window when the marker is clicked.\n     */\n\n    this.openInfoWindow = true;\n    /**\n     * The marker's opacity between 0.0 and 1.0.\n     */\n\n    this.opacity = 1;\n    /**\n     * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n     * front of markers with lower values. By default, markers are displayed according to their\n     * vertical position on screen, with lower markers appearing in front of markers further up the\n     * screen.\n     */\n\n    this.zIndex = 1;\n    /**\n     * If true, the marker can be clicked. Default value is true.\n     */\n    // tslint:disable-next-line:no-input-rename\n\n    this.clickable = true;\n    /**\n     * This event is fired when the marker's animation property changes.\n     *\n     * @memberof AgmMarker\n     */\n\n    this.animationChange = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the marker.\n     */\n\n    this.markerClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks twice on the marker.\n     */\n\n    this.markerDblClick = new EventEmitter();\n    /**\n     * This event is fired when the user rightclicks on the marker.\n     */\n\n    this.markerRightClick = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the marker.\n     */\n\n    this.dragStart = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the marker.\n     */\n\n    this.drag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the marker.\n     */\n\n    this.dragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user mouses over the marker.\n     */\n\n    this.mouseOver = new EventEmitter();\n    /**\n     * This event is fired when the user mouses outside the marker.\n     */\n\n    this.mouseOut = new EventEmitter();\n    /** @internal */\n\n    this.infoWindow = new QueryList();\n    this._markerAddedToManger = false;\n    this._observableSubscriptions = [];\n    this._fitBoundsDetails$ = new ReplaySubject(1);\n    this._id = (markerId++).toString();\n  }\n  /* @internal */\n\n\n  _createClass(AgmMarker, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this71 = this;\n\n      this.handleInfoWindowUpdate();\n      this.infoWindow.changes.subscribe(function () {\n        return _this71.handleInfoWindowUpdate();\n      });\n    }\n  }, {\n    key: \"handleInfoWindowUpdate\",\n    value: function handleInfoWindowUpdate() {\n      var _this72 = this;\n\n      if (this.infoWindow.length > 1) {\n        throw new Error('Expected no more than one info window.');\n      }\n\n      this.infoWindow.forEach(function (marker) {\n        marker.hostMarker = _this72;\n      });\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (typeof this.latitude === 'string') {\n        this.latitude = Number(this.latitude);\n      }\n\n      if (typeof this.longitude === 'string') {\n        this.longitude = Number(this.longitude);\n      }\n\n      if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n        return;\n      }\n\n      if (!this._markerAddedToManger) {\n        this._markerManager.addMarker(this);\n\n        this._updateFitBoundsDetails();\n\n        this._markerAddedToManger = true;\n\n        this._addEventListeners();\n\n        return;\n      }\n\n      if (changes['latitude'] || changes['longitude']) {\n        this._markerManager.updateMarkerPosition(this);\n\n        this._updateFitBoundsDetails();\n      }\n\n      if (changes['title']) {\n        this._markerManager.updateTitle(this);\n      }\n\n      if (changes['label']) {\n        this._markerManager.updateLabel(this);\n      }\n\n      if (changes['draggable']) {\n        this._markerManager.updateDraggable(this);\n      }\n\n      if (changes['iconUrl']) {\n        this._markerManager.updateIcon(this);\n      }\n\n      if (changes['opacity']) {\n        this._markerManager.updateOpacity(this);\n      }\n\n      if (changes['visible']) {\n        this._markerManager.updateVisible(this);\n      }\n\n      if (changes['zIndex']) {\n        this._markerManager.updateZIndex(this);\n      }\n\n      if (changes['clickable']) {\n        this._markerManager.updateClickable(this);\n      }\n\n      if (changes['animation']) {\n        this._markerManager.updateAnimation(this);\n      }\n    }\n    /** @internal */\n\n  }, {\n    key: \"getFitBoundsDetails$\",\n    value: function getFitBoundsDetails$() {\n      return this._fitBoundsDetails$.asObservable();\n    }\n  }, {\n    key: \"_updateFitBoundsDetails\",\n    value: function _updateFitBoundsDetails() {\n      this._fitBoundsDetails$.next({\n        latLng: {\n          lat: this.latitude,\n          lng: this.longitude\n        }\n      });\n    }\n  }, {\n    key: \"_addEventListeners\",\n    value: function _addEventListeners() {\n      var _this73 = this;\n\n      var cs = this._markerManager.createEventObservable('click', this).subscribe(function () {\n        if (_this73.openInfoWindow) {\n          _this73.infoWindow.forEach(function (infoWindow) {\n            return infoWindow.open();\n          });\n        }\n\n        _this73.markerClick.emit(_this73);\n      });\n\n      this._observableSubscriptions.push(cs);\n\n      var dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(function () {\n        _this73.markerDblClick.emit(null);\n      });\n\n      this._observableSubscriptions.push(dcs);\n\n      var rc = this._markerManager.createEventObservable('rightclick', this).subscribe(function () {\n        _this73.markerRightClick.emit(null);\n      });\n\n      this._observableSubscriptions.push(rc);\n\n      var ds = this._markerManager.createEventObservable('dragstart', this).subscribe(function (e) {\n        _this73.dragStart.emit({\n          coords: {\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng()\n          }\n        });\n      });\n\n      this._observableSubscriptions.push(ds);\n\n      var d = this._markerManager.createEventObservable('drag', this).subscribe(function (e) {\n        _this73.drag.emit({\n          coords: {\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng()\n          }\n        });\n      });\n\n      this._observableSubscriptions.push(d);\n\n      var de = this._markerManager.createEventObservable('dragend', this).subscribe(function (e) {\n        _this73.dragEnd.emit({\n          coords: {\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng()\n          }\n        });\n      });\n\n      this._observableSubscriptions.push(de);\n\n      var mover = this._markerManager.createEventObservable('mouseover', this).subscribe(function (e) {\n        _this73.mouseOver.emit({\n          coords: {\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng()\n          }\n        });\n      });\n\n      this._observableSubscriptions.push(mover);\n\n      var mout = this._markerManager.createEventObservable('mouseout', this).subscribe(function (e) {\n        _this73.mouseOut.emit({\n          coords: {\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng()\n          }\n        });\n      });\n\n      this._observableSubscriptions.push(mout);\n\n      var anChng = this._markerManager.createEventObservable('animation_changed', this).subscribe(function () {\n        _this73.animationChange.emit(_this73.animation);\n      });\n\n      this._observableSubscriptions.push(anChng);\n    }\n    /** @internal */\n\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return 'AgmMarker-' + this._id.toString();\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._markerManager.deleteMarker(this); // unsubscribe all registered observable subscriptions\n\n\n      this._observableSubscriptions.forEach(function (s) {\n        return s.unsubscribe();\n      });\n    }\n  }]);\n\n  return AgmMarker;\n}();\n\nAgmMarker.ɵfac = function AgmMarker_Factory(t) {\n  return new (t || AgmMarker)(ɵngcc0.ɵɵdirectiveInject(MarkerManager));\n};\n\nAgmMarker.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmMarker,\n  selectors: [[\"agm-marker\"]],\n  contentQueries: function AgmMarker_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, AgmInfoWindow, 4);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.infoWindow = _t);\n    }\n  },\n  inputs: {\n    latitude: \"latitude\",\n    longitude: \"longitude\",\n    title: \"title\",\n    label: \"label\",\n    draggable: [\"markerDraggable\", \"draggable\"],\n    iconUrl: \"iconUrl\",\n    openInfoWindow: \"openInfoWindow\",\n    opacity: \"opacity\",\n    visible: \"visible\",\n    zIndex: \"zIndex\",\n    animation: \"animation\",\n    clickable: [\"markerClickable\", \"clickable\"]\n  },\n  outputs: {\n    markerClick: \"markerClick\",\n    dragStart: \"dragStart\",\n    drag: \"drag\",\n    dragEnd: \"dragEnd\",\n    mouseOver: \"mouseOver\",\n    mouseOut: \"mouseOut\",\n    animationChange: \"animationChange\",\n    markerDblClick: \"markerDblClick\",\n    markerRightClick: \"markerRightClick\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FitBoundsAccessor,\n    useExisting: forwardRef(function () {\n      return AgmMarker_1;\n    })\n  }]), ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nAgmMarker.ctorParameters = function () {\n  return [{\n    type: MarkerManager\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMarker.prototype, \"latitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMarker.prototype, \"longitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMarker.prototype, \"title\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"label\", void 0);\n\n__decorate([Input('markerDraggable'), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"draggable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMarker.prototype, \"iconUrl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"visible\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"openInfoWindow\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"opacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"zIndex\", void 0);\n\n__decorate([Input('markerClickable'), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"clickable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMarker.prototype, \"animation\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"animationChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"markerClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"markerDblClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"markerRightClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"dragStart\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"drag\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"dragEnd\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"mouseOver\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"mouseOut\", void 0);\n\n__decorate([ContentChildren(AgmInfoWindow), __metadata(\"design:type\", QueryList)], AgmMarker.prototype, \"infoWindow\", void 0);\n\nAgmMarker = AgmMarker_1 = __decorate([__metadata(\"design:paramtypes\", [MarkerManager])], AgmMarker);\nvar AgmPolygon_1;\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\n\nvar AgmPolygon = AgmPolygon_1 = /*#__PURE__*/function () {\n  function AgmPolygon(_polygonManager) {\n    _classCallCheck(this, AgmPolygon);\n\n    this._polygonManager = _polygonManager;\n    /**\n     * Indicates whether this Polygon handles mouse events. Defaults to true.\n     */\n\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this shape over the map. The geodesic\n     * property defines the mode of dragging. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this shape by dragging the control\n     * points shown at the vertices and on each segment. Defaults to false.\n     */\n\n    this.editable = false;\n    /**\n     * When true, edges of the polygon are interpreted as geodesic and will\n     * follow the curvature of the Earth. When false, edges of the polygon are\n     * rendered as straight lines in screen space. Note that the shape of a\n     * geodesic polygon may appear to change when dragged, as the dimensions\n     * are maintained relative to the surface of the earth. Defaults to false.\n     */\n\n    this.geodesic = false;\n    /**\n     * The ordered sequence of coordinates that designates a closed loop.\n     * Unlike polylines, a polygon may consist of one or more paths.\n     *  As a result, the paths property may specify one or more arrays of\n     * LatLng coordinates. Paths are closed automatically; do not repeat the\n     * first vertex of the path as the last vertex. Simple polygons may be\n     * defined using a single array of LatLngs. More complex polygons may\n     * specify an array of arrays. Any simple arrays are converted into Arrays.\n     * Inserting or removing LatLngs from the Array will automatically update\n     * the polygon on the map.\n     */\n\n    this.paths = [];\n    /**\n     * This event is fired when the DOM click event is fired on the Polygon.\n     */\n\n    this.polyClick = new EventEmitter();\n    /**\n     * This event is fired when the DOM dblclick event is fired on the Polygon.\n     */\n\n    this.polyDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the polygon.\n     */\n\n    this.polyDrag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the polygon.\n     */\n\n    this.polyDragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the polygon.\n     */\n\n    this.polyDragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the Polygon.\n     */\n\n    this.polyMouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the Polygon.\n     */\n\n    this.polyMouseMove = new EventEmitter();\n    /**\n     * This event is fired on Polygon mouseout.\n     */\n\n    this.polyMouseOut = new EventEmitter();\n    /**\n     * This event is fired on Polygon mouseover.\n     */\n\n    this.polyMouseOver = new EventEmitter();\n    /**\n     * This event is fired whe the DOM mouseup event is fired on the Polygon\n     */\n\n    this.polyMouseUp = new EventEmitter();\n    /**\n     * This event is fired when the Polygon is right-clicked on.\n     */\n\n    this.polyRightClick = new EventEmitter();\n    /**\n     * This event is fired after Polygon first path changes.\n     */\n\n    this.polyPathsChange = new EventEmitter();\n    this._polygonAddedToManager = false;\n    this._subscriptions = [];\n  }\n  /** @internal */\n\n\n  _createClass(AgmPolygon, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      if (!this._polygonAddedToManager) {\n        this._init();\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._polygonAddedToManager) {\n        this._init();\n\n        return;\n      }\n\n      this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      this._polygonManager.addPolygon(this);\n\n      this._polygonAddedToManager = true;\n\n      this._addEventListeners();\n    }\n  }, {\n    key: \"_addEventListeners\",\n    value: function _addEventListeners() {\n      var _this74 = this;\n\n      var handlers = [{\n        name: 'click',\n        handler: function handler(ev) {\n          return _this74.polyClick.emit(ev);\n        }\n      }, {\n        name: 'dblclick',\n        handler: function handler(ev) {\n          return _this74.polyDblClick.emit(ev);\n        }\n      }, {\n        name: 'drag',\n        handler: function handler(ev) {\n          return _this74.polyDrag.emit(ev);\n        }\n      }, {\n        name: 'dragend',\n        handler: function handler(ev) {\n          return _this74.polyDragEnd.emit(ev);\n        }\n      }, {\n        name: 'dragstart',\n        handler: function handler(ev) {\n          return _this74.polyDragStart.emit(ev);\n        }\n      }, {\n        name: 'mousedown',\n        handler: function handler(ev) {\n          return _this74.polyMouseDown.emit(ev);\n        }\n      }, {\n        name: 'mousemove',\n        handler: function handler(ev) {\n          return _this74.polyMouseMove.emit(ev);\n        }\n      }, {\n        name: 'mouseout',\n        handler: function handler(ev) {\n          return _this74.polyMouseOut.emit(ev);\n        }\n      }, {\n        name: 'mouseover',\n        handler: function handler(ev) {\n          return _this74.polyMouseOver.emit(ev);\n        }\n      }, {\n        name: 'mouseup',\n        handler: function handler(ev) {\n          return _this74.polyMouseUp.emit(ev);\n        }\n      }, {\n        name: 'rightclick',\n        handler: function handler(ev) {\n          return _this74.polyRightClick.emit(ev);\n        }\n      }];\n      handlers.forEach(function (obj) {\n        var os = _this74._polygonManager.createEventObservable(obj.name, _this74).subscribe(obj.handler);\n\n        _this74._subscriptions.push(os);\n      });\n\n      this._polygonManager.createPathEventObservable(this).then(function (paths$) {\n        var os = paths$.subscribe(function (pathEvent) {\n          return _this74.polyPathsChange.emit(pathEvent);\n        });\n\n        _this74._subscriptions.push(os);\n      });\n    }\n  }, {\n    key: \"_updatePolygonOptions\",\n    value: function _updatePolygonOptions(changes) {\n      return Object.keys(changes).filter(function (k) {\n        return AgmPolygon_1._polygonOptionsAttributes.indexOf(k) !== -1;\n      }).reduce(function (obj, k) {\n        obj[k] = changes[k].currentValue;\n        return obj;\n      }, {});\n    }\n    /** @internal */\n\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._polygonManager.deletePolygon(this); // unsubscribe all registered observable subscriptions\n\n\n      this._subscriptions.forEach(function (s) {\n        return s.unsubscribe();\n      });\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      return this._polygonManager.getPath(this);\n    }\n  }, {\n    key: \"getPaths\",\n    value: function getPaths() {\n      return this._polygonManager.getPaths(this);\n    }\n  }]);\n\n  return AgmPolygon;\n}();\n\nAgmPolygon.ɵfac = function AgmPolygon_Factory(t) {\n  return new (t || AgmPolygon)(ɵngcc0.ɵɵdirectiveInject(PolygonManager));\n};\n\nAgmPolygon.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmPolygon,\n  selectors: [[\"agm-polygon\"]],\n  inputs: {\n    clickable: \"clickable\",\n    draggable: [\"polyDraggable\", \"draggable\"],\n    editable: \"editable\",\n    geodesic: \"geodesic\",\n    paths: \"paths\",\n    fillColor: \"fillColor\",\n    fillOpacity: \"fillOpacity\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    strokeWeight: \"strokeWeight\",\n    visible: \"visible\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    polyClick: \"polyClick\",\n    polyDblClick: \"polyDblClick\",\n    polyDrag: \"polyDrag\",\n    polyDragEnd: \"polyDragEnd\",\n    polyDragStart: \"polyDragStart\",\n    polyMouseDown: \"polyMouseDown\",\n    polyMouseMove: \"polyMouseMove\",\n    polyMouseOut: \"polyMouseOut\",\n    polyMouseOver: \"polyMouseOver\",\n    polyMouseUp: \"polyMouseUp\",\n    polyRightClick: \"polyRightClick\",\n    polyPathsChange: \"polyPathsChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmPolygon._polygonOptionsAttributes = ['clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map', 'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable', 'editable', 'visible'];\n\nAgmPolygon.ctorParameters = function () {\n  return [{\n    type: PolygonManager\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"clickable\", void 0);\n\n__decorate([Input('polyDraggable'), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"draggable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"editable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolygon.prototype, \"fillColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"fillOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"geodesic\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Array)], AgmPolygon.prototype, \"paths\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolygon.prototype, \"strokeColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"strokeOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"strokeWeight\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmPolygon.prototype, \"visible\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"zIndex\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDblClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDrag\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDragEnd\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDragStart\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseDown\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseMove\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseOut\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseOver\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseUp\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyRightClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"polyPathsChange\", void 0);\n\nAgmPolygon = AgmPolygon_1 = __decorate([__metadata(\"design:paramtypes\", [PolygonManager])], AgmPolygon);\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n *\n * @export\n * @class AgmPolylineIcon\n */\n\nvar AgmPolylineIcon = /*#__PURE__*/function () {\n  function AgmPolylineIcon() {\n    _classCallCheck(this, AgmPolylineIcon);\n  }\n\n  _createClass(AgmPolylineIcon, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.path == null) {\n        throw new Error('Icon Sequence path is required');\n      }\n    }\n  }]);\n\n  return AgmPolylineIcon;\n}();\n\nAgmPolylineIcon.ɵfac = function AgmPolylineIcon_Factory(t) {\n  return new (t || AgmPolylineIcon)();\n};\n\nAgmPolylineIcon.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmPolylineIcon,\n  selectors: [[\"agm-icon-sequence\"]],\n  inputs: {\n    fixedRotation: \"fixedRotation\",\n    offset: \"offset\",\n    repeat: \"repeat\",\n    anchorX: \"anchorX\",\n    anchorY: \"anchorY\",\n    fillColor: \"fillColor\",\n    fillOpacity: \"fillOpacity\",\n    path: \"path\",\n    rotation: \"rotation\",\n    scale: \"scale\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    strokeWeight: \"strokeWeight\"\n  }\n});\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmPolylineIcon.prototype, \"fixedRotation\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"offset\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"repeat\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"anchorX\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"anchorY\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"fillColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"fillOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"path\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"rotation\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"scale\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"strokeColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"strokeOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"strokeWeight\", void 0);\n\nvar AgmPolylinePoint_1;\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\n\nvar AgmPolylinePoint = AgmPolylinePoint_1 = /*#__PURE__*/function () {\n  function AgmPolylinePoint() {\n    _classCallCheck(this, AgmPolylinePoint);\n\n    /**\n     * This event emitter gets emitted when the position of the point changed.\n     */\n    this.positionChanged = new EventEmitter();\n  }\n\n  _createClass(AgmPolylinePoint, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes['latitude'] || changes['longitude']) {\n        var position = {\n          lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n          lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude\n        };\n        this.positionChanged.emit(position);\n      }\n    }\n    /** @internal */\n\n  }, {\n    key: \"getFitBoundsDetails$\",\n    value: function getFitBoundsDetails$() {\n      return this.positionChanged.pipe(startWith({\n        lat: this.latitude,\n        lng: this.longitude\n      }), map(function (position) {\n        return {\n          latLng: position\n        };\n      }));\n    }\n  }]);\n\n  return AgmPolylinePoint;\n}();\n\nAgmPolylinePoint.ɵfac = function AgmPolylinePoint_Factory(t) {\n  return new (t || AgmPolylinePoint)();\n};\n\nAgmPolylinePoint.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmPolylinePoint,\n  selectors: [[\"agm-polyline-point\"]],\n  inputs: {\n    latitude: \"latitude\",\n    longitude: \"longitude\"\n  },\n  outputs: {\n    positionChanged: \"positionChanged\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FitBoundsAccessor,\n    useExisting: forwardRef(function () {\n      return AgmPolylinePoint_1;\n    })\n  }]), ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylinePoint.prototype, \"latitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylinePoint.prototype, \"longitude\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolylinePoint.prototype, \"positionChanged\", void 0);\n\nAgmPolylinePoint = AgmPolylinePoint_1 = __decorate([__metadata(\"design:paramtypes\", [])], AgmPolylinePoint);\nvar AgmPolyline_1;\nvar polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\n\nvar AgmPolyline = AgmPolyline_1 = /*#__PURE__*/function () {\n  function AgmPolyline(_polylineManager) {\n    _classCallCheck(this, AgmPolyline);\n\n    this._polylineManager = _polylineManager;\n    /**\n     * Indicates whether this Polyline handles mouse events. Defaults to true.\n     */\n\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this shape over the map. The geodesic property defines the\n     * mode of dragging. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this shape by dragging the control points shown at the\n     * vertices and on each segment. Defaults to false.\n     */\n\n    this.editable = false;\n    /**\n     * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n     * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n     * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n     * are maintained relative to the surface of the earth. Defaults to false.\n     */\n\n    this.geodesic = false;\n    /**\n     * Whether this polyline is visible on the map. Defaults to true.\n     */\n\n    this.visible = true;\n    /**\n     * This event is fired when the DOM click event is fired on the Polyline.\n     */\n\n    this.lineClick = new EventEmitter();\n    /**\n     * This event is fired when the DOM dblclick event is fired on the Polyline.\n     */\n\n    this.lineDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the polyline.\n     */\n\n    this.lineDrag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the polyline.\n     */\n\n    this.lineDragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the polyline.\n     */\n\n    this.lineDragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the Polyline.\n     */\n\n    this.lineMouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the Polyline.\n     */\n\n    this.lineMouseMove = new EventEmitter();\n    /**\n     * This event is fired on Polyline mouseout.\n     */\n\n    this.lineMouseOut = new EventEmitter();\n    /**\n     * This event is fired on Polyline mouseover.\n     */\n\n    this.lineMouseOver = new EventEmitter();\n    /**\n     * This event is fired whe the DOM mouseup event is fired on the Polyline\n     */\n\n    this.lineMouseUp = new EventEmitter();\n    /**\n     * This event is fired when the Polyline is right-clicked on.\n     */\n\n    this.lineRightClick = new EventEmitter();\n    /**\n     * This event is fired after Polyline's path changes.\n     */\n\n    this.polyPathChange = new EventEmitter();\n    this._polylineAddedToManager = false;\n    this._subscriptions = [];\n    this._id = (polylineId++).toString();\n  }\n  /** @internal */\n\n\n  _createClass(AgmPolyline, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this75 = this;\n\n      if (this.points.length) {\n        this.points.forEach(function (point) {\n          var s = point.positionChanged.subscribe(function () {\n            _this75._polylineManager.updatePolylinePoints(_this75);\n          });\n\n          _this75._subscriptions.push(s);\n        });\n      }\n\n      if (!this._polylineAddedToManager) {\n        this._init();\n      }\n\n      var pointSub = this.points.changes.subscribe(function () {\n        return _this75._polylineManager.updatePolylinePoints(_this75);\n      });\n\n      this._subscriptions.push(pointSub);\n\n      this._polylineManager.updatePolylinePoints(this);\n\n      var iconSub = this.iconSequences.changes.subscribe(function () {\n        return _this75._polylineManager.updateIconSequences(_this75);\n      });\n\n      this._subscriptions.push(iconSub);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._polylineAddedToManager) {\n        this._init();\n\n        return;\n      }\n\n      var options = {};\n      var optionKeys = Object.keys(changes).filter(function (k) {\n        return AgmPolyline_1._polylineOptionsAttributes.indexOf(k) !== -1;\n      });\n      optionKeys.forEach(function (k) {\n        return options[k] = changes[k].currentValue;\n      });\n\n      this._polylineManager.setPolylineOptions(this, options);\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      return this._polylineManager.getPath(this);\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      this._polylineManager.addPolyline(this);\n\n      this._polylineAddedToManager = true;\n\n      this._addEventListeners();\n    }\n  }, {\n    key: \"_addEventListeners\",\n    value: function _addEventListeners() {\n      var _this76 = this;\n\n      var handlers = [{\n        name: 'click',\n        handler: function handler(ev) {\n          return _this76.lineClick.emit(ev);\n        }\n      }, {\n        name: 'dblclick',\n        handler: function handler(ev) {\n          return _this76.lineDblClick.emit(ev);\n        }\n      }, {\n        name: 'drag',\n        handler: function handler(ev) {\n          return _this76.lineDrag.emit(ev);\n        }\n      }, {\n        name: 'dragend',\n        handler: function handler(ev) {\n          return _this76.lineDragEnd.emit(ev);\n        }\n      }, {\n        name: 'dragstart',\n        handler: function handler(ev) {\n          return _this76.lineDragStart.emit(ev);\n        }\n      }, {\n        name: 'mousedown',\n        handler: function handler(ev) {\n          return _this76.lineMouseDown.emit(ev);\n        }\n      }, {\n        name: 'mousemove',\n        handler: function handler(ev) {\n          return _this76.lineMouseMove.emit(ev);\n        }\n      }, {\n        name: 'mouseout',\n        handler: function handler(ev) {\n          return _this76.lineMouseOut.emit(ev);\n        }\n      }, {\n        name: 'mouseover',\n        handler: function handler(ev) {\n          return _this76.lineMouseOver.emit(ev);\n        }\n      }, {\n        name: 'mouseup',\n        handler: function handler(ev) {\n          return _this76.lineMouseUp.emit(ev);\n        }\n      }, {\n        name: 'rightclick',\n        handler: function handler(ev) {\n          return _this76.lineRightClick.emit(ev);\n        }\n      }];\n      handlers.forEach(function (obj) {\n        var os = _this76._polylineManager.createEventObservable(obj.name, _this76).subscribe(obj.handler);\n\n        _this76._subscriptions.push(os);\n      });\n\n      this._polylineManager.createPathEventObservable(this).then(function (ob$) {\n        var os = ob$.subscribe(function (pathEvent) {\n          return _this76.polyPathChange.emit(pathEvent);\n        });\n\n        _this76._subscriptions.push(os);\n      });\n    }\n    /** @internal */\n\n  }, {\n    key: \"_getPoints\",\n    value: function _getPoints() {\n      if (this.points) {\n        return this.points.toArray();\n      }\n\n      return [];\n    }\n  }, {\n    key: \"_getIcons\",\n    value: function _getIcons() {\n      if (this.iconSequences) {\n        return this.iconSequences.toArray();\n      }\n\n      return [];\n    }\n    /** @internal */\n\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._polylineManager.deletePolyline(this); // unsubscribe all registered observable subscriptions\n\n\n      this._subscriptions.forEach(function (s) {\n        return s.unsubscribe();\n      });\n    }\n  }]);\n\n  return AgmPolyline;\n}();\n\nAgmPolyline.ɵfac = function AgmPolyline_Factory(t) {\n  return new (t || AgmPolyline)(ɵngcc0.ɵɵdirectiveInject(PolylineManager));\n};\n\nAgmPolyline.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmPolyline,\n  selectors: [[\"agm-polyline\"]],\n  contentQueries: function AgmPolyline_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylinePoint, 4);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylineIcon, 4);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.points = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.iconSequences = _t);\n    }\n  },\n  inputs: {\n    clickable: \"clickable\",\n    draggable: [\"polylineDraggable\", \"draggable\"],\n    editable: \"editable\",\n    geodesic: \"geodesic\",\n    visible: \"visible\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    strokeWeight: \"strokeWeight\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    lineClick: \"lineClick\",\n    lineDblClick: \"lineDblClick\",\n    lineDrag: \"lineDrag\",\n    lineDragEnd: \"lineDragEnd\",\n    lineDragStart: \"lineDragStart\",\n    lineMouseDown: \"lineMouseDown\",\n    lineMouseMove: \"lineMouseMove\",\n    lineMouseOut: \"lineMouseOut\",\n    lineMouseOver: \"lineMouseOver\",\n    lineMouseUp: \"lineMouseUp\",\n    lineRightClick: \"lineRightClick\",\n    polyPathChange: \"polyPathChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmPolyline._polylineOptionsAttributes = ['draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'zIndex'];\n\nAgmPolyline.ctorParameters = function () {\n  return [{\n    type: PolylineManager\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"clickable\", void 0);\n\n__decorate([Input('polylineDraggable'), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"draggable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"editable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"geodesic\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolyline.prototype, \"strokeColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolyline.prototype, \"strokeOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolyline.prototype, \"strokeWeight\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"visible\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolyline.prototype, \"zIndex\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDblClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDrag\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDragEnd\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDragStart\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseDown\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseMove\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseOut\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseOver\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseUp\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineRightClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"polyPathChange\", void 0);\n\n__decorate([ContentChildren(AgmPolylinePoint), __metadata(\"design:type\", QueryList)], AgmPolyline.prototype, \"points\", void 0);\n\n__decorate([ContentChildren(AgmPolylineIcon), __metadata(\"design:type\", QueryList)], AgmPolyline.prototype, \"iconSequences\", void 0);\n\nAgmPolyline = AgmPolyline_1 = __decorate([__metadata(\"design:paramtypes\", [PolylineManager])], AgmPolyline);\nvar AgmRectangle_1;\n\nvar AgmRectangle = AgmRectangle_1 = /*#__PURE__*/function () {\n  function AgmRectangle(_manager) {\n    _classCallCheck(this, AgmRectangle);\n\n    this._manager = _manager;\n    /**\n     * Indicates whether this Rectangle handles mouse events. Defaults to true.\n     */\n\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this rectangle over the map. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this rectangle by dragging the control points shown at\n     * the center and around the circumference of the rectangle. Defaults to false.\n     */\n\n    this.editable = false;\n    /**\n     * The stroke position. Defaults to CENTER.\n     * This property is not supported on Internet Explorer 8 and earlier.\n     */\n\n    this.strokePosition = 'CENTER';\n    /**\n     * The stroke width in pixels.\n     */\n\n    this.strokeWeight = 0;\n    /**\n     * Whether this rectangle is visible on the map. Defaults to true.\n     */\n\n    this.visible = true;\n    /**\n     * This event is fired when the rectangle's is changed.\n     */\n\n    this.boundsChange = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the rectangle.\n     */\n\n    this.rectangleClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the rectangle.\n     */\n\n    this.rectangleDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the rectangle.\n     */\n\n    this.drag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the rectangle.\n     */\n\n    this.dragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the rectangle.\n     */\n\n    this.dragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the rectangle.\n     */\n\n    this.mouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the rectangle.\n     */\n\n    this.mouseMove = new EventEmitter();\n    /**\n     * This event is fired on rectangle mouseout.\n     */\n\n    this.mouseOut = new EventEmitter();\n    /**\n     * This event is fired on rectangle mouseover.\n     */\n\n    this.mouseOver = new EventEmitter();\n    /**\n     * This event is fired when the DOM mouseup event is fired on the rectangle.\n     */\n\n    this.mouseUp = new EventEmitter();\n    /**\n     * This event is fired when the rectangle is right-clicked on.\n     */\n\n    this.rightClick = new EventEmitter();\n    this._rectangleAddedToManager = false;\n    this._eventSubscriptions = [];\n  }\n  /** @internal */\n\n\n  _createClass(AgmRectangle, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._manager.addRectangle(this);\n\n      this._rectangleAddedToManager = true;\n\n      this._registerEventListeners();\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._rectangleAddedToManager) {\n        return;\n      }\n\n      if (changes['north'] || changes['east'] || changes['south'] || changes['west']) {\n        this._manager.setBounds(this);\n      }\n\n      if (changes['editable']) {\n        this._manager.setEditable(this);\n      }\n\n      if (changes['draggable']) {\n        this._manager.setDraggable(this);\n      }\n\n      if (changes['visible']) {\n        this._manager.setVisible(this);\n      }\n\n      this._updateRectangleOptionsChanges(changes);\n    }\n  }, {\n    key: \"_updateRectangleOptionsChanges\",\n    value: function _updateRectangleOptionsChanges(changes) {\n      var options = {};\n      var optionKeys = Object.keys(changes).filter(function (k) {\n        return AgmRectangle_1._mapOptions.indexOf(k) !== -1;\n      });\n      optionKeys.forEach(function (k) {\n        options[k] = changes[k].currentValue;\n      });\n\n      if (optionKeys.length > 0) {\n        this._manager.setOptions(this, options);\n      }\n    }\n  }, {\n    key: \"_registerEventListeners\",\n    value: function _registerEventListeners() {\n      var _this77 = this;\n\n      var events = new Map();\n      events.set('bounds_changed', this.boundsChange);\n      events.set('click', this.rectangleClick);\n      events.set('dblclick', this.rectangleDblClick);\n      events.set('drag', this.drag);\n      events.set('dragend', this.dragEnd);\n      events.set('dragStart', this.dragStart);\n      events.set('mousedown', this.mouseDown);\n      events.set('mousemove', this.mouseMove);\n      events.set('mouseout', this.mouseOut);\n      events.set('mouseover', this.mouseOver);\n      events.set('mouseup', this.mouseUp);\n      events.set('rightclick', this.rightClick);\n      events.forEach(function (eventEmitter, eventName) {\n        _this77._eventSubscriptions.push(_this77._manager.createEventObservable(eventName, _this77).subscribe(function (value) {\n          switch (eventName) {\n            case 'bounds_changed':\n              _this77._manager.getBounds(_this77).then(function (bounds) {\n                return eventEmitter.emit({\n                  north: bounds.getNorthEast().lat(),\n                  east: bounds.getNorthEast().lng(),\n                  south: bounds.getSouthWest().lat(),\n                  west: bounds.getSouthWest().lng()\n                });\n              });\n\n              break;\n\n            default:\n              eventEmitter.emit({\n                coords: {\n                  lat: value.latLng.lat(),\n                  lng: value.latLng.lng()\n                }\n              });\n          }\n        }));\n      });\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._eventSubscriptions.forEach(function (s) {\n        s.unsubscribe();\n      });\n\n      this._eventSubscriptions = null;\n\n      this._manager.removeRectangle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Rectangle.\n     */\n\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      return this._manager.getBounds(this);\n    }\n  }]);\n\n  return AgmRectangle;\n}();\n\nAgmRectangle.ɵfac = function AgmRectangle_Factory(t) {\n  return new (t || AgmRectangle)(ɵngcc0.ɵɵdirectiveInject(RectangleManager));\n};\n\nAgmRectangle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmRectangle,\n  selectors: [[\"agm-rectangle\"]],\n  inputs: {\n    clickable: \"clickable\",\n    draggable: [\"rectangleDraggable\", \"draggable\"],\n    editable: \"editable\",\n    strokePosition: \"strokePosition\",\n    strokeWeight: \"strokeWeight\",\n    visible: \"visible\",\n    north: \"north\",\n    east: \"east\",\n    south: \"south\",\n    west: \"west\",\n    fillColor: \"fillColor\",\n    fillOpacity: \"fillOpacity\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    boundsChange: \"boundsChange\",\n    rectangleClick: \"rectangleClick\",\n    rectangleDblClick: \"rectangleDblClick\",\n    drag: \"drag\",\n    dragEnd: \"dragEnd\",\n    dragStart: \"dragStart\",\n    mouseDown: \"mouseDown\",\n    mouseMove: \"mouseMove\",\n    mouseOut: \"mouseOut\",\n    mouseOver: \"mouseOver\",\n    mouseUp: \"mouseUp\",\n    rightClick: \"rightClick\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmRectangle._mapOptions = ['fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'clickable'];\n\nAgmRectangle.ctorParameters = function () {\n  return [{\n    type: RectangleManager\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"north\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"east\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"south\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"west\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"clickable\", void 0);\n\n__decorate([Input('rectangleDraggable'), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"draggable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"editable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmRectangle.prototype, \"fillColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"fillOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmRectangle.prototype, \"strokeColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"strokeOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmRectangle.prototype, \"strokePosition\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"strokeWeight\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"visible\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"zIndex\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"boundsChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"rectangleClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"rectangleDblClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"drag\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"dragEnd\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"dragStart\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseDown\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseMove\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseOut\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseOver\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseUp\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"rightClick\", void 0);\n\nAgmRectangle = AgmRectangle_1 = __decorate([__metadata(\"design:paramtypes\", [RectangleManager])], AgmRectangle);\nvar layerId$3 = 0;\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\n\nvar AgmTransitLayer = /*#__PURE__*/function () {\n  function AgmTransitLayer(_manager) {\n    _classCallCheck(this, AgmTransitLayer);\n\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId$3++).toString();\n    /**\n     * Hide/show transit layer\n     */\n\n    this.visible = true;\n  }\n\n  _createClass(AgmTransitLayer, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this._addedToManager) {\n        return;\n      }\n\n      this._manager.addTransitLayer(this, {\n        visible: this.visible\n      });\n\n      this._addedToManager = true;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._addedToManager) {\n        return;\n      }\n\n      if (changes['visible'] != null) {\n        this._manager.toggleLayerVisibility(this, {\n          visible: changes['visible'].currentValue\n        });\n      }\n    }\n    /** @internal */\n\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AgmTransitLayer-\".concat(this._id.toString());\n    }\n    /** @internal */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._manager.deleteLayer(this);\n    }\n  }]);\n\n  return AgmTransitLayer;\n}();\n\nAgmTransitLayer.ɵfac = function AgmTransitLayer_Factory(t) {\n  return new (t || AgmTransitLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager));\n};\n\nAgmTransitLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmTransitLayer,\n  selectors: [[\"agm-transit-layer\"]],\n  inputs: {\n    visible: \"visible\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nAgmTransitLayer.ctorParameters = function () {\n  return [{\n    type: LayerManager\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmTransitLayer.prototype, \"visible\", void 0);\n\nAgmTransitLayer = __decorate([__metadata(\"design:paramtypes\", [LayerManager])], AgmTransitLayer);\nvar google$1;\nvar SymbolPath;\n\n(function (SymbolPath) {\n  SymbolPath[SymbolPath[\"BACKWARD_CLOSED_ARROW\"] = 3] = \"BACKWARD_CLOSED_ARROW\";\n  SymbolPath[SymbolPath[\"BACKWARD_OPEN_ARROW\"] = 4] = \"BACKWARD_OPEN_ARROW\";\n  SymbolPath[SymbolPath[\"CIRCLE\"] = 0] = \"CIRCLE\";\n  SymbolPath[SymbolPath[\"FORWARD_CLOSED_ARROW\"] = 1] = \"FORWARD_CLOSED_ARROW\";\n  SymbolPath[SymbolPath[\"FORWARD_OPEN_ARROW\"] = 2] = \"FORWARD_OPEN_ARROW\";\n})(SymbolPath || (SymbolPath = {}));\n/**\n * Identifiers used to specify the placement of controls on the map. Controls are\n * positioned relative to other controls in the same layout position. Controls that\n * are added first are positioned closer to the edge of the map.\n */\n\n\nvar ControlPosition;\n\n(function (ControlPosition) {\n  ControlPosition[ControlPosition[\"RIGHT_BOTTOM\"] = 0] = \"RIGHT_BOTTOM\";\n  ControlPosition[ControlPosition[\"TOP_LEFT\"] = 1] = \"TOP_LEFT\";\n  ControlPosition[ControlPosition[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n  ControlPosition[ControlPosition[\"TOP_RIGHT\"] = 3] = \"TOP_RIGHT\";\n  ControlPosition[ControlPosition[\"LEFT_CENTER\"] = 4] = \"LEFT_CENTER\";\n  ControlPosition[ControlPosition[\"LEFT_TOP\"] = 5] = \"LEFT_TOP\";\n  ControlPosition[ControlPosition[\"LEFT_BOTTOM\"] = 6] = \"LEFT_BOTTOM\";\n  ControlPosition[ControlPosition[\"RIGHT_TOP\"] = 7] = \"RIGHT_TOP\";\n  ControlPosition[ControlPosition[\"RIGHT_CENTER\"] = 8] = \"RIGHT_CENTER\";\n  ControlPosition[ControlPosition[\"BOTTOM_RIGHT\"] = 9] = \"BOTTOM_RIGHT\";\n  ControlPosition[ControlPosition[\"BOTTOM_LEFT\"] = 10] = \"BOTTOM_LEFT\";\n  ControlPosition[ControlPosition[\"BOTTOM_CENTER\"] = 11] = \"BOTTOM_CENTER\";\n})(ControlPosition || (ControlPosition = {}));\n\nvar MapTypeId;\n\n(function (MapTypeId) {\n  /** This map type displays a transparent layer of major streets on satellite images. */\n  MapTypeId[MapTypeId[\"HYBRID\"] = 0] = \"HYBRID\";\n  /** This map type displays a normal street map. */\n\n  MapTypeId[MapTypeId[\"ROADMAP\"] = 1] = \"ROADMAP\";\n  /** This map type displays satellite images. */\n\n  MapTypeId[MapTypeId[\"SATELLITE\"] = 2] = \"SATELLITE\";\n  /** This map type displays maps with physical features such as terrain and vegetation. */\n\n  MapTypeId[MapTypeId[\"TERRAIN\"] = 3] = \"TERRAIN\";\n})(MapTypeId || (MapTypeId = {}));\n\nvar MapTypeControlStyle;\n\n(function (MapTypeControlStyle) {\n  MapTypeControlStyle[MapTypeControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n  MapTypeControlStyle[MapTypeControlStyle[\"DROPDOWN_MENU\"] = 2] = \"DROPDOWN_MENU\";\n  MapTypeControlStyle[MapTypeControlStyle[\"HORIZONTAL_BAR\"] = 1] = \"HORIZONTAL_BAR\";\n})(MapTypeControlStyle || (MapTypeControlStyle = {}));\n\nvar ScaleControlStyle;\n\n(function (ScaleControlStyle) {\n  ScaleControlStyle[ScaleControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(ScaleControlStyle || (ScaleControlStyle = {}));\n\nvar ZoomControlStyle;\n\n(function (ZoomControlStyle) {\n  ZoomControlStyle[ZoomControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n  ZoomControlStyle[ZoomControlStyle[\"LARGE\"] = 1] = \"LARGE\";\n  ZoomControlStyle[ZoomControlStyle[\"SMALL\"] = 2] = \"SMALL\";\n})(ZoomControlStyle || (ZoomControlStyle = {}));\n\nvar GeocoderLocationType;\n\n(function (GeocoderLocationType) {\n  GeocoderLocationType[\"APPROXIMATE\"] = \"APPROXIMATE\";\n  GeocoderLocationType[\"GEOMETRIC_CENTER\"] = \"GEOMETRIC_CENTER\";\n  GeocoderLocationType[\"RANGE_INTERPOLATED\"] = \"RANGE_INTERPOLATED\";\n  GeocoderLocationType[\"ROOFTOP\"] = \"ROOFTOP\";\n})(GeocoderLocationType || (GeocoderLocationType = {}));\n\nvar GeocoderStatus;\n\n(function (GeocoderStatus) {\n  GeocoderStatus[\"ERROR\"] = \"ERROR\";\n  GeocoderStatus[\"INVALID_REQUEST\"] = \"INVALID_REQUEST\";\n  GeocoderStatus[\"OK\"] = \"OK\";\n  GeocoderStatus[\"OVER_QUERY_LIMIT\"] = \"OVER_QUERY_LIMIT\";\n  GeocoderStatus[\"REQUEST_DENIED\"] = \"REQUEST_DENIED\";\n  GeocoderStatus[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n  GeocoderStatus[\"ZERO_RESULTS\"] = \"ZERO_RESULTS\";\n})(GeocoderStatus || (GeocoderStatus = {}));\n\nvar AgmGeocoder = /*#__PURE__*/function () {\n  function AgmGeocoder(loader) {\n    var _this78 = this;\n\n    _classCallCheck(this, AgmGeocoder);\n\n    var connectableGeocoder$ = new Observable(function (subscriber) {\n      loader.load().then(function () {\n        return subscriber.next();\n      });\n    }).pipe(map(function () {\n      return _this78._createGeocoder();\n    }), multicast(new ReplaySubject(1)));\n    connectableGeocoder$.connect(); // ignore the subscription\n    // since we will remain subscribed till application exits\n\n    this.geocoder$ = connectableGeocoder$;\n  }\n\n  _createClass(AgmGeocoder, [{\n    key: \"geocode\",\n    value: function geocode(request) {\n      var _this79 = this;\n\n      return this.geocoder$.pipe(switchMap(function (geocoder) {\n        return _this79._getGoogleResults(geocoder, request);\n      }));\n    }\n  }, {\n    key: \"_getGoogleResults\",\n    value: function _getGoogleResults(geocoder, request) {\n      var geocodeObservable = bindCallback(geocoder.geocode);\n      return geocodeObservable(request).pipe(switchMap(function (_ref6) {\n        var _ref7 = _slicedToArray(_ref6, 2),\n            results = _ref7[0],\n            status = _ref7[1];\n\n        if (status === GeocoderStatus.OK) {\n          return of(results);\n        }\n\n        return throwError(status);\n      }));\n    }\n  }, {\n    key: \"_createGeocoder\",\n    value: function _createGeocoder() {\n      return new google.maps.Geocoder();\n    }\n  }]);\n\n  return AgmGeocoder;\n}();\n\nAgmGeocoder.ɵfac = function AgmGeocoder_Factory(t) {\n  return new (t || AgmGeocoder)(ɵngcc0.ɵɵinject(MapsAPILoader));\n};\n\nAgmGeocoder.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: AgmGeocoder,\n  factory: function factory(t) {\n    return AgmGeocoder.ɵfac(t);\n  },\n  providedIn: 'root'\n});\n\nAgmGeocoder.ctorParameters = function () {\n  return [{\n    type: MapsAPILoader\n  }];\n};\n\nAgmGeocoder.ngInjectableDef = ɵɵdefineInjectable({\n  factory: function AgmGeocoder_Factory() {\n    return new AgmGeocoder(ɵɵinject(MapsAPILoader));\n  },\n  token: AgmGeocoder,\n  providedIn: \"root\"\n});\nAgmGeocoder = __decorate([__metadata(\"design:paramtypes\", [MapsAPILoader])], AgmGeocoder);\n\nvar WindowRef = /*#__PURE__*/function () {\n  function WindowRef() {\n    _classCallCheck(this, WindowRef);\n  }\n\n  _createClass(WindowRef, [{\n    key: \"getNativeWindow\",\n    value: function getNativeWindow() {\n      return window;\n    }\n  }]);\n\n  return WindowRef;\n}();\n\nvar DocumentRef = /*#__PURE__*/function () {\n  function DocumentRef() {\n    _classCallCheck(this, DocumentRef);\n  }\n\n  _createClass(DocumentRef, [{\n    key: \"getNativeDocument\",\n    value: function getNativeDocument() {\n      return document;\n    }\n  }]);\n\n  return DocumentRef;\n}();\n\nvar BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\nvar GoogleMapsScriptProtocol;\n\n(function (GoogleMapsScriptProtocol) {\n  GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n  GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n  GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\n\n\nvar LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\n\nvar LazyMapsAPILoader = /*#__PURE__*/function (_MapsAPILoader) {\n  _inherits(LazyMapsAPILoader, _MapsAPILoader);\n\n  var _super = _createSuper(LazyMapsAPILoader);\n\n  function LazyMapsAPILoader() {\n    var _this80;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var w = arguments.length > 1 ? arguments[1] : undefined;\n    var d = arguments.length > 2 ? arguments[2] : undefined;\n    var localeId = arguments.length > 3 ? arguments[3] : undefined;\n\n    _classCallCheck(this, LazyMapsAPILoader);\n\n    _this80 = _super.call(this);\n    _this80.localeId = localeId;\n    _this80._SCRIPT_ID = 'agmGoogleMapsApiScript';\n    _this80.callbackName = \"agmLazyMapsAPILoader\";\n    _this80._config = config || {};\n    _this80._windowRef = w;\n    _this80._documentRef = d;\n    return _this80;\n  }\n\n  _createClass(LazyMapsAPILoader, [{\n    key: \"load\",\n    value: function load() {\n      var window = this._windowRef.getNativeWindow();\n\n      if (window.google && window.google.maps) {\n        // Google maps already loaded on the page.\n        return Promise.resolve();\n      }\n\n      if (this._scriptLoadingPromise) {\n        return this._scriptLoadingPromise;\n      } // this can happen in HMR situations or Stackblitz.io editors.\n\n\n      var scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n\n      if (scriptOnPage) {\n        this._assignScriptLoadingPromise(scriptOnPage);\n\n        return this._scriptLoadingPromise;\n      }\n\n      var script = this._documentRef.getNativeDocument().createElement('script');\n\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.id = this._SCRIPT_ID;\n      script.src = this._getScriptSrc(this.callbackName);\n\n      this._assignScriptLoadingPromise(script);\n\n      this._documentRef.getNativeDocument().body.appendChild(script);\n\n      return this._scriptLoadingPromise;\n    }\n  }, {\n    key: \"_assignScriptLoadingPromise\",\n    value: function _assignScriptLoadingPromise(scriptElem) {\n      var _this81 = this;\n\n      this._scriptLoadingPromise = new Promise(function (resolve, reject) {\n        _this81._windowRef.getNativeWindow()[_this81.callbackName] = function () {\n          resolve();\n        };\n\n        scriptElem.onerror = function (error) {\n          reject(error);\n        };\n      });\n    }\n  }, {\n    key: \"_getScriptSrc\",\n    value: function _getScriptSrc(callbackName) {\n      var protocolType = this._config && this._config.protocol || GoogleMapsScriptProtocol.HTTPS;\n      var protocol;\n\n      switch (protocolType) {\n        case GoogleMapsScriptProtocol.AUTO:\n          protocol = '';\n          break;\n\n        case GoogleMapsScriptProtocol.HTTP:\n          protocol = 'http:';\n          break;\n\n        case GoogleMapsScriptProtocol.HTTPS:\n          protocol = 'https:';\n          break;\n      }\n\n      var hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n      var queryParams = {\n        v: this._config.apiVersion || 'quarterly',\n        callback: callbackName,\n        key: this._config.apiKey,\n        client: this._config.clientId,\n        channel: this._config.channel,\n        libraries: this._config.libraries,\n        region: this._config.region,\n        language: this._config.language || this.localeId !== 'en-US' ? this.localeId : null\n      };\n      var params = Object.keys(queryParams).filter(function (k) {\n        return queryParams[k] != null;\n      }).filter(function (k) {\n        // remove empty arrays\n        return !Array.isArray(queryParams[k]) || Array.isArray(queryParams[k]) && queryParams[k].length > 0;\n      }).map(function (k) {\n        // join arrays as comma seperated strings\n        var i = queryParams[k];\n\n        if (Array.isArray(i)) {\n          return {\n            key: k,\n            value: i.join(',')\n          };\n        }\n\n        return {\n          key: k,\n          value: queryParams[k]\n        };\n      }).map(function (entry) {\n        return \"\".concat(entry.key, \"=\").concat(entry.value);\n      }).join('&');\n      return \"\".concat(protocol, \"//\").concat(hostAndPath, \"?\").concat(params);\n    }\n  }]);\n\n  return LazyMapsAPILoader;\n}(MapsAPILoader);\n\nLazyMapsAPILoader.ɵfac = function LazyMapsAPILoader_Factory(t) {\n  return new (t || LazyMapsAPILoader)(ɵngcc0.ɵɵinject(LAZY_MAPS_API_CONFIG, 8), ɵngcc0.ɵɵinject(WindowRef), ɵngcc0.ɵɵinject(DocumentRef), ɵngcc0.ɵɵinject(LOCALE_ID));\n};\n\nLazyMapsAPILoader.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: LazyMapsAPILoader,\n  factory: function factory(t) {\n    return LazyMapsAPILoader.ɵfac(t);\n  }\n});\n\nLazyMapsAPILoader.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [LAZY_MAPS_API_CONFIG]\n    }]\n  }, {\n    type: WindowRef\n  }, {\n    type: DocumentRef\n  }, {\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }];\n};\n\nLazyMapsAPILoader = __decorate([__param(0, Optional()), __param(0, Inject(LAZY_MAPS_API_CONFIG)), __param(3, Inject(LOCALE_ID)), __metadata(\"design:paramtypes\", [Object, WindowRef, DocumentRef, String])], LazyMapsAPILoader);\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\n\nvar NoOpMapsAPILoader = /*#__PURE__*/function () {\n  function NoOpMapsAPILoader() {\n    _classCallCheck(this, NoOpMapsAPILoader);\n  }\n\n  _createClass(NoOpMapsAPILoader, [{\n    key: \"load\",\n    value: function load() {\n      if (!window.google || !window.google.maps) {\n        throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n      }\n\n      return Promise.resolve();\n    }\n  }]);\n\n  return NoOpMapsAPILoader;\n}(); // exported map types\n\n\nvar AgmCoreModule_1;\n/**\n * @internal\n */\n\nfunction coreDirectives() {\n  return [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer];\n}\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\n\n\nvar AgmCoreModule = AgmCoreModule_1 = /*#__PURE__*/function () {\n  function AgmCoreModule() {\n    _classCallCheck(this, AgmCoreModule);\n  }\n\n  _createClass(AgmCoreModule, null, [{\n    key: \"forRoot\",\n    value:\n    /**\n     * Please use this method when you register the module at the root level.\n     */\n    function forRoot(lazyMapsAPILoaderConfig) {\n      return {\n        ngModule: AgmCoreModule_1,\n        providers: [].concat(BROWSER_GLOBALS_PROVIDERS, [{\n          provide: MapsAPILoader,\n          useClass: LazyMapsAPILoader\n        }, {\n          provide: LAZY_MAPS_API_CONFIG,\n          useValue: lazyMapsAPILoaderConfig\n        }])\n      };\n    }\n  }]);\n\n  return AgmCoreModule;\n}();\n\nAgmCoreModule.ɵfac = function AgmCoreModule_Factory(t) {\n  return new (t || AgmCoreModule)();\n};\n\nAgmCoreModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: AgmCoreModule\n});\nAgmCoreModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MapsAPILoader, [{\n    type: Injectable\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GoogleMapsAPIWrapper, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: MapsAPILoader\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmBicyclingLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-bicycling-layer'\n    }]\n  }], function () {\n    return [{\n      type: LayerManager\n    }];\n  }, {\n    visible: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CircleManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmCircle, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-circle'\n    }]\n  }], function () {\n    return [{\n      type: CircleManager\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: ['circleDraggable']\n    }],\n    editable: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    strokePosition: [{\n      type: Input\n    }],\n    strokeWeight: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    centerChange: [{\n      type: Output\n    }],\n    circleClick: [{\n      type: Output\n    }],\n    circleDblClick: [{\n      type: Output\n    }],\n    drag: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    mouseDown: [{\n      type: Output\n    }],\n    mouseMove: [{\n      type: Output\n    }],\n    mouseOut: [{\n      type: Output\n    }],\n    mouseOver: [{\n      type: Output\n    }],\n    mouseUp: [{\n      type: Output\n    }],\n    radiusChange: [{\n      type: Output\n    }],\n    rightClick: [{\n      type: Output\n    }],\n    latitude: [{\n      type: Input\n    }],\n    longitude: [{\n      type: Input\n    }],\n    fillColor: [{\n      type: Input\n    }],\n    fillOpacity: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeOpacity: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataLayerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmDataLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-data-layer'\n    }]\n  }], function () {\n    return [{\n      type: DataLayerManager\n    }];\n  }, {\n    layerClick: [{\n      type: Output\n    }],\n    geoJson: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FitBoundsService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: MapsAPILoader\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmFitBounds, [{\n    type: Directive,\n    args: [{\n      selector: '[agmFitBounds]'\n    }]\n  }], function () {\n    return [{\n      type: FitBoundsAccessor,\n      decorators: [{\n        type: Self\n      }]\n    }, {\n      type: FitBoundsService\n    }];\n  }, {\n    agmFitBounds: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MarkerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InfoWindowManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: MarkerManager\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmInfoWindow, [{\n    type: Component,\n    args: [{\n      selector: 'agm-info-window',\n      template: \"<div class='agm-info-window-content'>\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: InfoWindowManager\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    isOpen: [{\n      type: Input\n    }],\n    infoWindowClose: [{\n      type: Output\n    }],\n    latitude: [{\n      type: Input\n    }],\n    longitude: [{\n      type: Input\n    }],\n    disableAutoPan: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    maxWidth: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KmlLayerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmKmlLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-kml-layer'\n    }]\n  }], function () {\n    return [{\n      type: KmlLayerManager\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    preserveViewport: [{\n      type: Input\n    }],\n    screenOverlays: [{\n      type: Input\n    }],\n    suppressInfoWindows: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    layerClick: [{\n      type: Output\n    }],\n    defaultViewportChange: [{\n      type: Output\n    }],\n    statusChange: [{\n      type: Output\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PolygonManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PolylineManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RectangleManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMap, [{\n    type: Component,\n    args: [{\n      selector: 'agm-map',\n      providers: [CircleManager, DataLayerManager, DataLayerManager, FitBoundsService, GoogleMapsAPIWrapper, InfoWindowManager, KmlLayerManager, LayerManager, MarkerManager, PolygonManager, PolylineManager, RectangleManager],\n      host: {\n        // todo: deprecated - we will remove it with the next version\n        '[class.sebm-google-map-container]': 'true'\n      },\n      template: \"\\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\\n              <div class='agm-map-content'>\\n                <ng-content></ng-content>\\n              </div>\\n  \",\n      styles: [\"\\n    .agm-map-container-inner {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content {\\n      display:none;\\n    }\\n  \"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: FitBoundsService\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    longitude: [{\n      type: Input\n    }],\n    latitude: [{\n      type: Input\n    }],\n    zoom: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: ['mapDraggable']\n    }],\n    disableDoubleClickZoom: [{\n      type: Input\n    }],\n    disableDefaultUI: [{\n      type: Input\n    }],\n    scrollwheel: [{\n      type: Input\n    }],\n    keyboardShortcuts: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    usePanning: [{\n      type: Input\n    }],\n    fitBounds: [{\n      type: Input\n    }],\n    scaleControl: [{\n      type: Input\n    }],\n    mapTypeControl: [{\n      type: Input\n    }],\n    panControl: [{\n      type: Input\n    }],\n    rotateControl: [{\n      type: Input\n    }],\n    fullscreenControl: [{\n      type: Input\n    }],\n    mapTypeId: [{\n      type: Input\n    }],\n    clickableIcons: [{\n      type: Input\n    }],\n    showDefaultInfoWindow: [{\n      type: Input\n    }],\n    gestureHandling: [{\n      type: Input\n    }],\n    tilt: [{\n      type: Input\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapRightClick: [{\n      type: Output\n    }],\n    mapDblClick: [{\n      type: Output\n    }],\n    centerChange: [{\n      type: Output\n    }],\n    boundsChange: [{\n      type: Output\n    }],\n    mapTypeIdChange: [{\n      type: Output\n    }],\n    idle: [{\n      type: Output\n    }],\n    zoomChange: [{\n      type: Output\n    }],\n    mapReady: [{\n      type: Output\n    }],\n    tilesLoaded: [{\n      type: Output\n    }],\n    minZoom: [{\n      type: Input\n    }],\n    maxZoom: [{\n      type: Input\n    }],\n    controlSize: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    draggableCursor: [{\n      type: Input\n    }],\n    draggingCursor: [{\n      type: Input\n    }],\n    zoomControl: [{\n      type: Input\n    }],\n    zoomControlOptions: [{\n      type: Input\n    }],\n    streetViewControl: [{\n      type: Input\n    }],\n    streetViewControlOptions: [{\n      type: Input\n    }],\n    fitBoundsPadding: [{\n      type: Input\n    }],\n    scaleControlOptions: [{\n      type: Input\n    }],\n    mapTypeControlOptions: [{\n      type: Input\n    }],\n    panControlOptions: [{\n      type: Input\n    }],\n    rotateControlOptions: [{\n      type: Input\n    }],\n    fullscreenControlOptions: [{\n      type: Input\n    }],\n    restriction: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMarker, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-marker',\n      providers: [{\n        provide: FitBoundsAccessor,\n        useExisting: forwardRef(function () {\n          return AgmMarker_1;\n        })\n      }],\n      inputs: ['latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl', 'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation'],\n      outputs: ['markerClick', 'dragStart', 'drag', 'dragEnd', 'mouseOver', 'mouseOut']\n    }]\n  }], function () {\n    return [{\n      type: MarkerManager\n    }];\n  }, {\n    draggable: [{\n      type: Input,\n      args: ['markerDraggable']\n    }],\n    visible: [{\n      type: Input\n    }],\n    openInfoWindow: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    clickable: [{\n      type: Input,\n      args: ['markerClickable']\n    }],\n    animationChange: [{\n      type: Output\n    }],\n    markerClick: [{\n      type: Output\n    }],\n    markerDblClick: [{\n      type: Output\n    }],\n    markerRightClick: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    drag: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }],\n    mouseOver: [{\n      type: Output\n    }],\n    mouseOut: [{\n      type: Output\n    }],\n    infoWindow: [{\n      type: ContentChildren,\n      args: [AgmInfoWindow]\n    }],\n    latitude: [{\n      type: Input\n    }],\n    longitude: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    iconUrl: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolygon, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-polygon'\n    }]\n  }], function () {\n    return [{\n      type: PolygonManager\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: ['polyDraggable']\n    }],\n    editable: [{\n      type: Input\n    }],\n    geodesic: [{\n      type: Input\n    }],\n    paths: [{\n      type: Input\n    }],\n    polyClick: [{\n      type: Output\n    }],\n    polyDblClick: [{\n      type: Output\n    }],\n    polyDrag: [{\n      type: Output\n    }],\n    polyDragEnd: [{\n      type: Output\n    }],\n    polyDragStart: [{\n      type: Output\n    }],\n    polyMouseDown: [{\n      type: Output\n    }],\n    polyMouseMove: [{\n      type: Output\n    }],\n    polyMouseOut: [{\n      type: Output\n    }],\n    polyMouseOver: [{\n      type: Output\n    }],\n    polyMouseUp: [{\n      type: Output\n    }],\n    polyRightClick: [{\n      type: Output\n    }],\n    polyPathsChange: [{\n      type: Output\n    }],\n    fillColor: [{\n      type: Input\n    }],\n    fillOpacity: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeOpacity: [{\n      type: Input\n    }],\n    strokeWeight: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolylineIcon, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-polyline agm-icon-sequence'\n    }]\n  }], null, {\n    fixedRotation: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    repeat: [{\n      type: Input\n    }],\n    anchorX: [{\n      type: Input\n    }],\n    anchorY: [{\n      type: Input\n    }],\n    fillColor: [{\n      type: Input\n    }],\n    fillOpacity: [{\n      type: Input\n    }],\n    path: [{\n      type: Input\n    }],\n    rotation: [{\n      type: Input\n    }],\n    scale: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeOpacity: [{\n      type: Input\n    }],\n    strokeWeight: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolylinePoint, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-polyline-point',\n      providers: [{\n        provide: FitBoundsAccessor,\n        useExisting: forwardRef(function () {\n          return AgmPolylinePoint_1;\n        })\n      }]\n    }]\n  }], function () {\n    return [];\n  }, {\n    positionChanged: [{\n      type: Output\n    }],\n    latitude: [{\n      type: Input\n    }],\n    longitude: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolyline, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-polyline'\n    }]\n  }], function () {\n    return [{\n      type: PolylineManager\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: ['polylineDraggable']\n    }],\n    editable: [{\n      type: Input\n    }],\n    geodesic: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    lineClick: [{\n      type: Output\n    }],\n    lineDblClick: [{\n      type: Output\n    }],\n    lineDrag: [{\n      type: Output\n    }],\n    lineDragEnd: [{\n      type: Output\n    }],\n    lineDragStart: [{\n      type: Output\n    }],\n    lineMouseDown: [{\n      type: Output\n    }],\n    lineMouseMove: [{\n      type: Output\n    }],\n    lineMouseOut: [{\n      type: Output\n    }],\n    lineMouseOver: [{\n      type: Output\n    }],\n    lineMouseUp: [{\n      type: Output\n    }],\n    lineRightClick: [{\n      type: Output\n    }],\n    polyPathChange: [{\n      type: Output\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeOpacity: [{\n      type: Input\n    }],\n    strokeWeight: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    points: [{\n      type: ContentChildren,\n      args: [AgmPolylinePoint]\n    }],\n    iconSequences: [{\n      type: ContentChildren,\n      args: [AgmPolylineIcon]\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmRectangle, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-rectangle'\n    }]\n  }], function () {\n    return [{\n      type: RectangleManager\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: ['rectangleDraggable']\n    }],\n    editable: [{\n      type: Input\n    }],\n    strokePosition: [{\n      type: Input\n    }],\n    strokeWeight: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    boundsChange: [{\n      type: Output\n    }],\n    rectangleClick: [{\n      type: Output\n    }],\n    rectangleDblClick: [{\n      type: Output\n    }],\n    drag: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    mouseDown: [{\n      type: Output\n    }],\n    mouseMove: [{\n      type: Output\n    }],\n    mouseOut: [{\n      type: Output\n    }],\n    mouseOver: [{\n      type: Output\n    }],\n    mouseUp: [{\n      type: Output\n    }],\n    rightClick: [{\n      type: Output\n    }],\n    north: [{\n      type: Input\n    }],\n    east: [{\n      type: Input\n    }],\n    south: [{\n      type: Input\n    }],\n    west: [{\n      type: Input\n    }],\n    fillColor: [{\n      type: Input\n    }],\n    fillOpacity: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeOpacity: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmTransitLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-transit-layer'\n    }]\n  }], function () {\n    return [{\n      type: LayerManager\n    }];\n  }, {\n    visible: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmGeocoder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: MapsAPILoader\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LazyMapsAPILoader, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [LAZY_MAPS_API_CONFIG]\n      }]\n    }, {\n      type: WindowRef\n    }, {\n      type: DocumentRef\n    }, {\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmCoreModule, [{\n    type: NgModule,\n    args: [{\n      declarations: coreDirectives(),\n      exports: coreDirectives()\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AgmCoreModule, {\n    declarations: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer],\n    exports: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer]\n  });\n})(); // main modules\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AgmBicyclingLayer, AgmCircle, AgmCoreModule, AgmDataLayer, AgmFitBounds, AgmGeocoder, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer, CircleManager, ControlPosition, DataLayerManager, FitBoundsAccessor, GeocoderLocationType, GeocoderStatus, GoogleMapsAPIWrapper, GoogleMapsScriptProtocol, InfoWindowManager, KmlLayerManager, LAZY_MAPS_API_CONFIG, LayerManager, LazyMapsAPILoader, MapTypeId, MapsAPILoader, MarkerManager, NoOpMapsAPILoader, PolygonManager, PolylineManager, RectangleManager, ScaleControlStyle, ZoomControlStyle, FitBoundsService as ɵa, coreDirectives as ɵb, WindowRef as ɵc, DocumentRef as ɵd, BROWSER_GLOBALS_PROVIDERS as ɵe }; //# sourceMappingURL=agm-core.js.map","map":{"version":3,"sources":["D:/AppBrc/Frontend appbrc/brandcomputers_v1.1/node_modules/@agm/core/__ivy_ngcc__/fesm2015/agm-core.js"],"names":["__decorate","__metadata","__param","__awaiter","Injectable","NgZone","Input","Directive","EventEmitter","Output","Self","ElementRef","Component","Inject","PLATFORM_ID","QueryList","ContentChildren","forwardRef","ɵɵdefineInjectable","ɵɵinject","InjectionToken","Optional","LOCALE_ID","NgModule","Observable","BehaviorSubject","from","timer","Subject","fromEventPattern","merge","ReplaySubject","bindCallback","of","throwError","flatMap","sample","switchMap","map","shareReplay","distinctUntilChanged","takeUntil","startWith","skip","multicast","isPlatformServer","ɵngcc0","_c0","MapsAPILoader","ɵfac","MapsAPILoader_Factory","t","ɵprov","token","factory","GoogleMapsAPIWrapper","_loader","_zone","_map","Promise","resolve","_mapResolver","el","mapOptions","runOutsideAngular","load","then","google","maps","Map","options","m","setOptions","addToMap","Marker","InfoWindow","strokePosition","StrokePosition","Circle","Rectangle","getNativeMap","line","Polyline","setMap","polygon","Polygon","data","Data","newLayer","TransitLayer","visible","BicyclingLayer","latLng","geometry","poly","containsLocation","eventName","observer","addListener","arg","run","next","event","clearInstanceListeners","setCenter","getZoom","getBounds","getMapTypeId","zoom","setZoom","getCenter","panTo","x","y","panBy","padding","fitBounds","panToBounds","trigger","GoogleMapsAPIWrapper_Factory","ctorParameters","type","LayerManager","_wrapper","_layers","layer","createTransitLayer","set","createBicyclingLayer","get","currentLayer","delete","LayerManager_Factory","layerId","AgmBicyclingLayer","_manager","_addedToManager","_id","toString","addBicyclingLayer","changes","toggleLayerVisibility","currentValue","deleteLayer","AgmBicyclingLayer_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","inputs","features","ɵɵNgOnChangesFeature","Object","prototype","CircleManager","_apiWrapper","_circles","circle","createCircle","center","lat","latitude","lng","longitude","clickable","draggable","editable","fillColor","fillOpacity","radius","strokeColor","strokeOpacity","strokeWeight","zIndex","c","getRadius","setEditable","setDraggable","setVisible","setRadius","listener","e","remove","CircleManager_Factory","AgmCircle_1","AgmCircle","centerChange","circleClick","circleDblClick","drag","dragEnd","dragStart","mouseDown","mouseMove","mouseOut","mouseOver","mouseUp","radiusChange","rightClick","_circleAddedToManager","_eventSubscriptions","addCircle","_registerEventListeners","_updateCircleOptionsChanges","optionKeys","keys","filter","k","_mapOptions","indexOf","forEach","length","events","eventEmitter","push","createEventObservable","subscribe","value","emit","coords","s","unsubscribe","removeCircle","AgmCircle_Factory","outputs","Number","String","DataLayerManager","createDataLayer","style","d","geoJson","getDataFeatures","l","feature","index","splice","setControlPosition","controlPosition","setControls","controls","setDrawingMode","drawingMode","setStyle","reject","addGeoJson","loadGeoJson","DataLayerManager_Factory","AgmDataLayer_1","layerId$1","AgmDataLayer","_subscriptions","layerClick","addDataLayer","_addEventListeners","listeners","name","handler","ev","obj","os","deleteDataLayer","geoJsonChange","updateGeoJson","dataOptions","_dataOptionsAttributes","hasOwnProperty","setDataOptions","AgmDataLayer_Factory","Function","FitBoundsAccessor","FitBoundsService","loader","_boundsChangeSampleTime$","_includeInBounds$","bounds$","pipe","time","includeInBounds","_generateBounds","bounds","LatLngBounds","b","extend","id","_createIdentifier","has","timeMs","FitBoundsService_Factory","AgmFitBounds","_fitBoundsAccessor","_fitBoundsService","agmFitBounds","_destroyed$","_latestFitBoundsDetails","_updateBounds","getFitBoundsDetails$","details","newFitBoundsDetails","removeFromBounds","addToBounds","complete","AgmFitBounds_Factory","decorators","MarkerManager","_mapsWrapper","_markers","uiAnim","Animation","marker","setPosition","setTitle","title","setLabel","label","setIcon","iconUrl","setOpacity","opacity","setZIndex","setClickable","convertAnimation","animation","setAnimation","markerPromise","position","icon","createMarker","MarkerManager_Factory","InfoWindowManager","_markerManager","_infoWindows","infoWindow","iWindow","i","close","w","hostMarker","getNativeMarker","open","content","maxWidth","disableAutoPan","infoWindowPromise","createInfoWindow","InfoWindowManager_Factory","AgmInfoWindow_1","infoWindowId","AgmInfoWindow","_infoWindowManager","_el","isOpen","infoWindowClose","_infoWindowAddedToManager","nativeElement","querySelector","addInfoWindow","_updateOpenState","_setInfoWindowOptions","_infoWindowOptionsInputs","deleteInfoWindow","AgmInfoWindow_Factory","ɵcmp","ɵɵdefineComponent","ngContentSelectors","decls","vars","consts","template","AgmInfoWindow_Template","rf","ctx","ɵɵprojectionDef","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","encapsulation","Boolean","KmlLayerManager","KmlLayer","preserveViewport","screenOverlays","suppressInfoWindows","url","KmlLayerManager_Factory","AgmKmlLayer_1","layerId$2","AgmKmlLayer","defaultViewportChange","statusChange","addKmlLayer","_updatePolygonOptions","_kmlLayerOptions","reduce","deleteKmlLayer","AgmKmlLayer_Factory","createMVCEventObservable","array","eventNames","evName","previous","apply","getArray","_handler","evListeners","evListener","MvcArrayMock","vals","removeAt","elem","insert_at","deleted","pop","remove_at","set_at","callback","listenerArr","PolygonManager","_polygons","path","polygonPromise","createPolygon","geodesic","paths","setPaths","getPath","getPaths","p","agmPolygon","pathsChanges$","newArr","parentMVEvent","chMVC","chMVCEvent","pathIndex","retVal","subArr","toJSON","PolygonManager_Factory","PolylineManager_1","PolylineManager","_polylines","polylinePromise","_convertPoints","_convertIcons","icons","createPolyline","setPath","agmPolyline","polyline","getMVCPath","mvcPath","_getPoints","point","symbolPath","SymbolPath","_getIcons","agmIcon","fixedRotation","offset","repeat","anchor","Point","anchorX","anchorY","_convertPath","rotation","scale","entries","key","val","PolylineManager_Factory","RectangleManager","_rectangles","rectangle","createRectangle","north","east","south","west","r","setBounds","create","RectangleManager_Factory","AgmMap_1","AgmMap","_elem","_platformId","disableDoubleClickZoom","disableDefaultUI","scrollwheel","keyboardShortcuts","styles","usePanning","scaleControl","mapTypeControl","panControl","rotateControl","fullscreenControl","mapTypeId","clickableIcons","showDefaultInfoWindow","gestureHandling","tilt","_observableSubscriptions","mapClick","mapRightClick","mapDblClick","boundsChange","mapTypeIdChange","idle","zoomChange","mapReady","tilesLoaded","container","_initMapInstance","createMap","minZoom","maxZoom","controlSize","backgroundColor","draggableCursor","draggingCursor","zoomControl","zoomControlOptions","streetViewControl","streetViewControlOptions","scaleControlOptions","mapTypeControlOptions","panControlOptions","rotateControlOptions","fullscreenControlOptions","restriction","_handleMapCenterChange","_handleMapZoomChange","_handleMapMouseEvents","_handleBoundsChange","_handleMapTypeIdChange","_handleTilesLoadedEvent","_handleIdleEvent","_fitBoundsSubscription","_updateMapOptionsChanges","_updatePosition","_mapOptionsAttributes","setMapOptions","recenter","setTimeout","triggerMapEvent","_fitBounds","_setCenter","newCenter","_subscribeToFitBoundsUpdates","fitBoundsPadding","getBounds$","_isLatLngBoundsLiteral","newBounds","union","undefined","subscribeToMapEvent","z","emitter","placeId","stop","AgmMap_Factory","hostVars","hostBindings","AgmMap_HostBindings","ɵɵclassProp","ɵɵProvidersFeature","AgmMap_Template","ɵɵelement","args","Array","AgmMarker_1","markerId","AgmMarker","openInfoWindow","animationChange","markerClick","markerDblClick","markerRightClick","_markerAddedToManger","_fitBoundsDetails$","handleInfoWindowUpdate","Error","addMarker","_updateFitBoundsDetails","updateMarkerPosition","updateTitle","updateLabel","updateDraggable","updateIcon","updateOpacity","updateVisible","updateZIndex","updateClickable","updateAnimation","asObservable","cs","dcs","rc","ds","de","mover","mout","anChng","deleteMarker","AgmMarker_Factory","contentQueries","AgmMarker_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","provide","useExisting","AgmPolygon_1","AgmPolygon","_polygonManager","polyClick","polyDblClick","polyDrag","polyDragEnd","polyDragStart","polyMouseDown","polyMouseMove","polyMouseOut","polyMouseOver","polyMouseUp","polyRightClick","polyPathsChange","_polygonAddedToManager","_init","setPolygonOptions","addPolygon","handlers","createPathEventObservable","paths$","pathEvent","_polygonOptionsAttributes","deletePolygon","AgmPolygon_Factory","AgmPolylineIcon","AgmPolylineIcon_Factory","AgmPolylinePoint_1","AgmPolylinePoint","positionChanged","AgmPolylinePoint_Factory","AgmPolyline_1","polylineId","AgmPolyline","_polylineManager","lineClick","lineDblClick","lineDrag","lineDragEnd","lineDragStart","lineMouseDown","lineMouseMove","lineMouseOut","lineMouseOver","lineMouseUp","lineRightClick","polyPathChange","_polylineAddedToManager","points","updatePolylinePoints","pointSub","iconSub","iconSequences","updateIconSequences","_polylineOptionsAttributes","setPolylineOptions","addPolyline","ob$","toArray","deletePolyline","AgmPolyline_Factory","AgmPolyline_ContentQueries","AgmRectangle_1","AgmRectangle","rectangleClick","rectangleDblClick","_rectangleAddedToManager","addRectangle","_updateRectangleOptionsChanges","getNorthEast","getSouthWest","removeRectangle","AgmRectangle_Factory","layerId$3","AgmTransitLayer","addTransitLayer","AgmTransitLayer_Factory","google$1","ControlPosition","MapTypeId","MapTypeControlStyle","ScaleControlStyle","ZoomControlStyle","GeocoderLocationType","GeocoderStatus","AgmGeocoder","connectableGeocoder$","subscriber","_createGeocoder","connect","geocoder$","request","geocoder","_getGoogleResults","geocodeObservable","geocode","results","status","OK","Geocoder","AgmGeocoder_Factory","providedIn","ngInjectableDef","WindowRef","window","DocumentRef","document","BROWSER_GLOBALS_PROVIDERS","GoogleMapsScriptProtocol","LAZY_MAPS_API_CONFIG","LazyMapsAPILoader","config","localeId","_SCRIPT_ID","callbackName","_config","_windowRef","_documentRef","getNativeWindow","_scriptLoadingPromise","scriptOnPage","getNativeDocument","getElementById","_assignScriptLoadingPromise","script","createElement","async","defer","src","_getScriptSrc","body","appendChild","scriptElem","onerror","error","protocolType","protocol","HTTPS","AUTO","HTTP","hostAndPath","queryParams","v","apiVersion","apiKey","client","clientId","channel","libraries","region","language","params","isArray","join","entry","LazyMapsAPILoader_Factory","NoOpMapsAPILoader","AgmCoreModule_1","coreDirectives","AgmCoreModule","lazyMapsAPILoaderConfig","ngModule","providers","useClass","useValue","AgmCoreModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","ngDevMode","ɵsetClassMetadata","selector","host","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","ɵa","ɵb","ɵc","ɵd","ɵe"],"mappings":";;;;;;;AAAA,SAASA,UAAT,EAAqBC,UAArB,EAAiCC,OAAjC,EAA0CC,SAA1C,QAA2D,OAA3D;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,YAA/C,EAA6DC,MAA7D,EAAqEC,IAArE,EAA2EC,UAA3E,EAAuFC,SAAvF,EAAkGC,MAAlG,EAA0GC,WAA1G,EAAuHC,SAAvH,EAAkIC,eAAlI,EAAmJC,UAAnJ,EAA+JC,kBAA/J,EAAmLC,QAAnL,EAA6LC,cAA7L,EAA6MC,QAA7M,EAAuNC,SAAvN,EAAkOC,QAAlO,QAAkP,eAAlP;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,IAAtC,EAA4CC,KAA5C,EAAmDC,OAAnD,EAA4DC,gBAA5D,EAA8EC,KAA9E,EAAqFC,aAArF,EAAoGC,YAApG,EAAkHC,EAAlH,EAAsHC,UAAtH,QAAwI,MAAxI;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,SAA1B,EAAqCC,GAArC,EAA0CC,WAA1C,EAAuDC,oBAAvD,EAA6EC,SAA7E,EAAwFC,SAAxF,EAAmGC,IAAnG,EAAyGC,SAAzG,QAA0H,gBAA1H;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AAEA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AAEA,IAAMC,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,IAAIC,aAAa;AAAA;AAAA,CAAjB;;AAEAA,aAAa,CAACC,IAAd,GAAqB,SAASC,qBAAT,CAA+BC,CAA/B,EAAkC;AAAE,SAAO,KAAKA,CAAC,IAAIH,aAAV,GAAP;AAAoC,CAA7F;;AACAA,aAAa,CAACI,KAAd,GAAsB,aAAcN,MAAM,CAAC5B,kBAAP,CAA0B;AAAEmC,EAAAA,KAAK,EAAEL,aAAT;AAAwBM,EAAAA,OAAO,EAAE,iBAAUH,CAAV,EAAa;AAAE,WAAOH,aAAa,CAACC,IAAd,CAAmBE,CAAnB,CAAP;AAA+B;AAA/E,CAA1B,CAApC;AAEA;AACA;AACA;AACA;;AACA,IAAII,oBAAoB;AACpB,gCAAYC,OAAZ,EAAqBC,KAArB,EAA4B;AAAA;;AAAA;;AACxB,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GACI,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAAE,MAAA,KAAI,CAACC,YAAL,GAAoBD,OAApB;AAA8B,KAAzD,CADJ;AAEH;;AANmB;AAAA;AAAA,WAOpB,mBAAUE,EAAV,EAAcC,UAAd,EAA0B;AAAA;;AACtB,aAAO,KAAKN,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,MAAI,CAACR,OAAL,CAAaS,IAAb,GAAoBC,IAApB,CAAyB,YAAM;AAClC,cAAM5B,GAAG,GAAG,IAAI6B,MAAM,CAACC,IAAP,CAAYC,GAAhB,CAAoBP,EAApB,EAAwBC,UAAxB,CAAZ;;AACA,UAAA,MAAI,CAACF,YAAL,CAAkBvB,GAAlB;;AACA;AACH,SAJM,CAAP;AAKH,OANM,CAAP;AAOH;AAfmB;AAAA;AAAA,WAgBpB,uBAAcgC,OAAd,EAAuB;AAAA;;AACnB,aAAO,KAAKb,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,QAAA,MAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAACK,CAAD,EAAO;AAAEA,UAAAA,CAAC,CAACC,UAAF,CAAaF,OAAb;AAAwB,SAAhD;AACH,OAFM,CAAP;AAGH;AACD;AACJ;AACA;;AAvBwB;AAAA;AAAA,WAwBpB,wBAA4C;AAAA;;AAAA,UAA/BA,OAA+B,uEAArB,EAAqB;AAAA,UAAjBG,QAAiB,uEAAN,IAAM;AACxC,aAAO,KAAKhB,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,MAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD,EAAS;AAC3B,cAAImC,QAAJ,EAAc;AACVH,YAAAA,OAAO,CAAChC,GAAR,GAAcA,GAAd;AACH;;AACD,iBAAO,IAAI6B,MAAM,CAACC,IAAP,CAAYM,MAAhB,CAAuBJ,OAAvB,CAAP;AACH,SALM,CAAP;AAMH,OAPM,CAAP;AAQH;AAjCmB;AAAA;AAAA,WAkCpB,0BAAiBA,OAAjB,EAA0B;AAAA;;AACtB,aAAO,KAAKb,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,MAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,YAAM;AAAE,iBAAO,IAAIC,MAAM,CAACC,IAAP,CAAYO,UAAhB,CAA2BL,OAA3B,CAAP;AAA6C,SAApE,CAAP;AACH,OAFM,CAAP;AAGH;AACD;AACJ;AACA;;AAzCwB;AAAA;AAAA,WA0CpB,sBAAaA,OAAb,EAAsB;AAAA;;AAClB,aAAO,KAAKb,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,MAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD,EAAS;AAC3B,cAAI,OAAOgC,OAAO,CAACM,cAAf,KAAkC,QAAtC,EAAgD;AAC5CN,YAAAA,OAAO,CAACM,cAAR,GAAyBT,MAAM,CAACC,IAAP,CAAYS,cAAZ,CAA2BP,OAAO,CAACM,cAAnC,CAAzB;AACH;;AACDN,UAAAA,OAAO,CAAChC,GAAR,GAAcA,GAAd;AACA,iBAAO,IAAI6B,MAAM,CAACC,IAAP,CAAYU,MAAhB,CAAuBR,OAAvB,CAAP;AACH,SANM,CAAP;AAOH,OARM,CAAP;AASH;AACD;AACJ;AACA;;AAvDwB;AAAA;AAAA,WAwDpB,yBAAgBA,OAAhB,EAAyB;AAAA;;AACrB,aAAO,KAAKb,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,MAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD,EAAS;AAC3BgC,UAAAA,OAAO,CAAChC,GAAR,GAAcA,GAAd;AACA,iBAAO,IAAI6B,MAAM,CAACC,IAAP,CAAYW,SAAhB,CAA0BT,OAA1B,CAAP;AACH,SAHM,CAAP;AAIH,OALM,CAAP;AAMH;AA/DmB;AAAA;AAAA,WAgEpB,wBAAeA,OAAf,EAAwB;AAAA;;AACpB,aAAO,KAAKb,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,MAAI,CAACgB,YAAL,GAAoBd,IAApB,CAAyB,UAAC5B,GAAD,EAAS;AACrC,cAAI2C,IAAI,GAAG,IAAId,MAAM,CAACC,IAAP,CAAYc,QAAhB,CAAyBZ,OAAzB,CAAX;AACAW,UAAAA,IAAI,CAACE,MAAL,CAAY7C,GAAZ;AACA,iBAAO2C,IAAP;AACH,SAJM,CAAP;AAKH,OANM,CAAP;AAOH;AAxEmB;AAAA;AAAA,WAyEpB,uBAAcX,OAAd,EAAuB;AAAA;;AACnB,aAAO,KAAKb,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,MAAI,CAACgB,YAAL,GAAoBd,IAApB,CAAyB,UAAC5B,GAAD,EAAS;AACrC,cAAI8C,OAAO,GAAG,IAAIjB,MAAM,CAACC,IAAP,CAAYiB,OAAhB,CAAwBf,OAAxB,CAAd;AACAc,UAAAA,OAAO,CAACD,MAAR,CAAe7C,GAAf;AACA,iBAAO8C,OAAP;AACH,SAJM,CAAP;AAKH,OANM,CAAP;AAOH;AACD;AACJ;AACA;;AApFwB;AAAA;AAAA,WAqFpB,yBAAgBd,OAAhB,EAAyB;AAAA;;AACrB,aAAO,KAAKb,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,OAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAAK,CAAC,EAAI;AACvB,cAAIe,IAAI,GAAG,IAAInB,MAAM,CAACC,IAAP,CAAYmB,IAAhB,CAAqBjB,OAArB,CAAX;AACAgB,UAAAA,IAAI,CAACH,MAAL,CAAYZ,CAAZ;AACA,iBAAOe,IAAP;AACH,SAJM,CAAP;AAKH,OANM,CAAP;AAOH;AACD;AACJ;AACA;AACA;AACA;;AAlGwB;AAAA;AAAA,WAmGpB,4BAAmBhB,OAAnB,EAA4B;AAAA;;AACxB,aAAO,KAAKb,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,OAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD,EAAS;AAC3B,cAAIkD,QAAQ,GAAG,IAAIrB,MAAM,CAACC,IAAP,CAAYqB,YAAhB,EAAf;AACAD,UAAAA,QAAQ,CAACL,MAAT,CAAgBb,OAAO,CAACoB,OAAR,GAAkBpD,GAAlB,GAAwB,IAAxC;AACA,iBAAOkD,QAAP;AACH,SAJM,CAAP;AAKH,OANM,CAAP;AAOH;AACD;AACJ;AACA;AACA;AACA;;AAhHwB;AAAA;AAAA,WAiHpB,8BAAqBlB,OAArB,EAA8B;AAAA;;AAC1B,aAAO,KAAKb,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,OAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD,EAAS;AAC3B,cAAIkD,QAAQ,GAAG,IAAIrB,MAAM,CAACC,IAAP,CAAYuB,cAAhB,EAAf;AACAH,UAAAA,QAAQ,CAACL,MAAT,CAAgBb,OAAO,CAACoB,OAAR,GAAkBpD,GAAlB,GAAwB,IAAxC;AACA,iBAAOkD,QAAP;AACH,SAJM,CAAP;AAKH,OANM,CAAP;AAOH;AACD;AACJ;AACA;;AA5HwB;AAAA;AAAA,WA6HpB,0BAAiBI,MAAjB,EAAyBR,OAAzB,EAAkC;AAC9B,aAAOjB,MAAM,CAACC,IAAP,CAAYyB,QAAZ,CAAqBC,IAArB,CAA0BC,gBAA1B,CAA2CH,MAA3C,EAAmDR,OAAnD,CAAP;AACH;AA/HmB;AAAA;AAAA,WAgIpB,6BAAoBY,SAApB,EAA+B;AAAA;;AAC3B,aAAO,IAAIxE,UAAJ,CAAe,UAACyE,QAAD,EAAc;AAChC,QAAA,OAAI,CAACvC,IAAL,CAAUQ,IAAV,CAAe,UAACK,CAAD,EAAO;AAClBA,UAAAA,CAAC,CAAC2B,WAAF,CAAcF,SAAd,EAAyB,UAACG,GAAD,EAAS;AAAE,YAAA,OAAI,CAAC1C,KAAL,CAAW2C,GAAX,CAAe;AAAA,qBAAMH,QAAQ,CAACI,IAAT,CAAcF,GAAd,CAAN;AAAA,aAAf;AAA2C,WAA/E;AACH,SAFD;AAGH,OAJM,CAAP;AAKH;AAtImB;AAAA;AAAA,WAuIpB,kCAAyB;AAAA;;AACrB,aAAO,KAAK1C,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,QAAA,OAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD,EAAS;AACpB6B,UAAAA,MAAM,CAACC,IAAP,CAAYkC,KAAZ,CAAkBC,sBAAlB,CAAyCjE,GAAzC;AACH,SAFD;AAGH,OAJM,CAAP;AAKH;AA7ImB;AAAA;AAAA,WA8IpB,mBAAUsD,MAAV,EAAkB;AAAA;;AACd,aAAO,KAAKnC,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,OAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD;AAAA,iBAASA,GAAG,CAACkE,SAAJ,CAAcZ,MAAd,CAAT;AAAA,SAAf,CAAP;AACH,OAFM,CAAP;AAGH;AAlJmB;AAAA;AAAA,WAmJpB,mBAAU;AAAA;;AACN,aAAO,KAAKnC,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,OAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD;AAAA,iBAASA,GAAG,CAACmE,OAAJ,EAAT;AAAA,SAAf,CAAP;AACH,OAFM,CAAP;AAGH;AAvJmB;AAAA;AAAA,WAwJpB,qBAAY;AAAA;;AACR,aAAO,KAAKhD,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,OAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD;AAAA,iBAASA,GAAG,CAACoE,SAAJ,EAAT;AAAA,SAAf,CAAP;AACH,OAFM,CAAP;AAGH;AA5JmB;AAAA;AAAA,WA6JpB,wBAAe;AAAA;;AACX,aAAO,KAAKjD,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,OAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD;AAAA,iBAASA,GAAG,CAACqE,YAAJ,EAAT;AAAA,SAAf,CAAP;AACH,OAFM,CAAP;AAGH;AAjKmB;AAAA;AAAA,WAkKpB,iBAAQC,IAAR,EAAc;AAAA;;AACV,aAAO,KAAKnD,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,OAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD;AAAA,iBAASA,GAAG,CAACuE,OAAJ,CAAYD,IAAZ,CAAT;AAAA,SAAf,CAAP;AACH,OAFM,CAAP;AAGH;AAtKmB;AAAA;AAAA,WAuKpB,qBAAY;AAAA;;AACR,aAAO,KAAKnD,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,OAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD;AAAA,iBAASA,GAAG,CAACwE,SAAJ,EAAT;AAAA,SAAf,CAAP;AACH,OAFM,CAAP;AAGH;AA3KmB;AAAA;AAAA,WA4KpB,eAAMlB,MAAN,EAAc;AAAA;;AACV,aAAO,KAAKnC,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,OAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD;AAAA,iBAASA,GAAG,CAACyE,KAAJ,CAAUnB,MAAV,CAAT;AAAA,SAAf,CAAP;AACH,OAFM,CAAP;AAGH;AAhLmB;AAAA;AAAA,WAiLpB,eAAMoB,CAAN,EAASC,CAAT,EAAY;AAAA;;AACR,aAAO,KAAKxD,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,OAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD;AAAA,iBAASA,GAAG,CAAC4E,KAAJ,CAAUF,CAAV,EAAaC,CAAb,CAAT;AAAA,SAAf,CAAP;AACH,OAFM,CAAP;AAGH;AArLmB;AAAA;AAAA,WAsLpB,mBAAUrB,MAAV,EAAkBuB,OAAlB,EAA2B;AAAA;;AACvB,aAAO,KAAK1D,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,OAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD;AAAA,iBAASA,GAAG,CAAC8E,SAAJ,CAAcxB,MAAd,EAAsBuB,OAAtB,CAAT;AAAA,SAAf,CAAP;AACH,OAFM,CAAP;AAGH;AA1LmB;AAAA;AAAA,WA2LpB,qBAAYvB,MAAZ,EAAoBuB,OAApB,EAA6B;AAAA;;AACzB,aAAO,KAAK1D,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AACtC,eAAO,OAAI,CAACN,IAAL,CAAUQ,IAAV,CAAe,UAAC5B,GAAD;AAAA,iBAASA,GAAG,CAAC+E,WAAJ,CAAgBzB,MAAhB,EAAwBuB,OAAxB,CAAT;AAAA,SAAf,CAAP;AACH,OAFM,CAAP;AAGH;AACD;AACJ;AACA;;AAlMwB;AAAA;AAAA,WAmMpB,wBAAe;AAAE,aAAO,KAAKzD,IAAZ;AAAmB;AACpC;AACJ;AACA;;AAtMwB;AAAA;AAAA,WAuMpB,yBAAgBsC,SAAhB,EAA2B;AACvB,aAAO,KAAKtC,IAAL,CAAUQ,IAAV,CAAe,UAACK,CAAD;AAAA,eAAOJ,MAAM,CAACC,IAAP,CAAYkC,KAAZ,CAAkBgB,OAAlB,CAA0B/C,CAA1B,EAA6ByB,SAA7B,CAAP;AAAA,OAAf,CAAP;AACH;AAzMmB;;AAAA;AAAA,GAAxB;;AA2MAzC,oBAAoB,CAACN,IAArB,GAA4B,SAASsE,4BAAT,CAAsCpE,CAAtC,EAAyC;AAAE,SAAO,KAAKA,CAAC,IAAII,oBAAV,EAAgCT,MAAM,CAAC3B,QAAP,CAAgB6B,aAAhB,CAAhC,EAAgEF,MAAM,CAAC3B,QAAP,CAAgB2B,MAAM,CAACzC,MAAvB,CAAhE,CAAP;AAAyG,CAAhL;;AACAkD,oBAAoB,CAACH,KAArB,GAA6B,aAAcN,MAAM,CAAC5B,kBAAP,CAA0B;AAAEmC,EAAAA,KAAK,EAAEE,oBAAT;AAA+BD,EAAAA,OAAO,EAAE,iBAAUH,CAAV,EAAa;AAAE,WAAOI,oBAAoB,CAACN,IAArB,CAA0BE,CAA1B,CAAP;AAAsC;AAA7F,CAA1B,CAA3C;;AACAI,oBAAoB,CAACiE,cAArB,GAAsC;AAAA,SAAM,CACxC;AAAEC,IAAAA,IAAI,EAAEzE;AAAR,GADwC,EAExC;AAAEyE,IAAAA,IAAI,EAAEpH;AAAR,GAFwC,CAAN;AAAA,CAAtC;;AAIAkD,oBAAoB,GAAGvD,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAAC+C,aAAD,EAAgB3C,MAAhB,CAAtB,CAAZ,CAAD,EAC9BkD,oBAD8B,CAAjC;AAGA;AACA;AACA;;AACA,IAAImE,YAAY;AACZ,wBAAYC,QAAZ,EAAsB;AAAA;;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,OAAL,GAAe,IAAIvD,GAAJ,EAAf;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AAVgB;AAAA;AAAA,WAWZ,yBAAgBwD,KAAhB,EAAuBvD,OAAvB,EAAgC;AAC5B,UAAMkB,QAAQ,GAAG,KAAKmC,QAAL,CAAcG,kBAAd,CAAiCxD,OAAjC,CAAjB;;AACA,WAAKsD,OAAL,CAAaG,GAAb,CAAiBF,KAAjB,EAAwBrC,QAAxB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;AApBgB;AAAA;AAAA,WAqBZ,2BAAkBqC,KAAlB,EAAyBvD,OAAzB,EAAkC;AAC9B,UAAMkB,QAAQ,GAAG,KAAKmC,QAAL,CAAcK,oBAAd,CAAmC1D,OAAnC,CAAjB;;AACA,WAAKsD,OAAL,CAAaG,GAAb,CAAiBF,KAAjB,EAAwBrC,QAAxB;AACH;AACD;AACJ;AACA;AACA;AACA;;AA7BgB;AAAA;AAAA,WA8BZ,qBAAYqC,KAAZ,EAAmB;AAAA;;AACf,aAAO,KAAKD,OAAL,CAAaK,GAAb,CAAiBJ,KAAjB,EAAwB3D,IAAxB,CAA6B,UAAAgE,YAAY,EAAI;AAChDA,QAAAA,YAAY,CAAC/C,MAAb,CAAoB,IAApB;;AACA,QAAA,OAAI,CAACyC,OAAL,CAAaO,MAAb,CAAoBN,KAApB;AACH,OAHM,CAAP;AAIH;AACD;AACJ;AACA;AACA;AACA;AACA;;AAzCgB;AAAA;AAAA,WA0CZ,+BAAsBA,KAAtB,EAA6BvD,OAA7B,EAAsC;AAAA;;AAClC,aAAO,KAAKsD,OAAL,CAAaK,GAAb,CAAiBJ,KAAjB,EAAwB3D,IAAxB,CAA6B,UAAAgE,YAAY,EAAI;AAChD,YAAI,CAAC5D,OAAO,CAACoB,OAAb,EAAsB;AAClBwC,UAAAA,YAAY,CAAC/C,MAAb,CAAoB,IAApB;AACA;AACH,SAHD,MAIK;AACD,iBAAO,OAAI,CAACwC,QAAL,CAAc3C,YAAd,GAA6Bd,IAA7B,CAAkC,UAAC5B,GAAD,EAAS;AAC9C4F,YAAAA,YAAY,CAAC/C,MAAb,CAAoB7C,GAApB;AACH,WAFM,CAAP;AAGH;AACJ,OAVM,CAAP;AAWH;AAtDW;;AAAA;AAAA,GAAhB;;AAwDAoF,YAAY,CAACzE,IAAb,GAAoB,SAASmF,oBAAT,CAA8BjF,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIuE,YAAV,EAAwB5E,MAAM,CAAC3B,QAAP,CAAgBoC,oBAAhB,CAAxB,CAAP;AAAwE,CAA/H;;AACAmE,YAAY,CAACtE,KAAb,GAAqB,aAAcN,MAAM,CAAC5B,kBAAP,CAA0B;AAAEmC,EAAAA,KAAK,EAAEqE,YAAT;AAAuBpE,EAAAA,OAAO,EAAE,iBAAUH,CAAV,EAAa;AAAE,WAAOuE,YAAY,CAACzE,IAAb,CAAkBE,CAAlB,CAAP;AAA8B;AAA7E,CAA1B,CAAnC;;AACAuE,YAAY,CAACF,cAAb,GAA8B;AAAA,SAAM,CAChC;AAAEC,IAAAA,IAAI,EAAElE;AAAR,GADgC,CAAN;AAAA,CAA9B;;AAGAmE,YAAY,GAAG1H,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACsD,oBAAD,CAAtB,CAAZ,CAAD,EACtBmE,YADsB,CAAzB;AAGA,IAAIW,OAAO,GAAG,CAAd;AACA;AACA;AACA;AACA;;AACA,IAAIC,iBAAiB;AACjB,6BAAYC,QAAZ,EAAsB;AAAA;;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,eAAL,GAAuB,KAAvB;AACA,SAAKC,GAAL,GAAW,CAACJ,OAAO,EAAR,EAAYK,QAAZ,EAAX;AACA;AACR;AACA;;AACQ,SAAKhD,OAAL,GAAe,IAAf;AACH;;AATgB;AAAA;AAAA,WAUjB,oBAAW;AACP,UAAI,KAAK8C,eAAT,EAA0B;AACtB;AACH;;AACD,WAAKD,QAAL,CAAcI,iBAAd,CAAgC,IAAhC,EAAsC;AAAEjD,QAAAA,OAAO,EAAE,KAAKA;AAAhB,OAAtC;;AACA,WAAK8C,eAAL,GAAuB,IAAvB;AACH;AAhBgB;AAAA;AAAA,WAiBjB,qBAAYI,OAAZ,EAAqB;AACjB,UAAI,CAAC,KAAKJ,eAAV,EAA2B;AACvB;AACH;;AACD,UAAII,OAAO,CAAC,SAAD,CAAP,IAAsB,IAA1B,EAAgC;AAC5B,aAAKL,QAAL,CAAcM,qBAAd,CAAoC,IAApC,EAA0C;AAAEnD,UAAAA,OAAO,EAAEkD,OAAO,CAAC,SAAD,CAAP,CAAmBE;AAA9B,SAA1C;AACH;AACJ;AACD;;AAzBiB;AAAA;AAAA,WA0BjB,cAAK;AAAE,aAAO,KAAKL,GAAZ;AAAkB;AACzB;;AA3BiB;AAAA;AAAA,WA4BjB,oBAAW;AAAE,yCAA4B,KAAKA,GAAL,CAASC,QAAT,EAA5B;AAAoD;AACjE;;AA7BiB;AAAA;AAAA,WA8BjB,uBAAc;AACV,WAAKH,QAAL,CAAcQ,WAAd,CAA0B,IAA1B;AACH;AAhCgB;;AAAA;AAAA,GAArB;;AAkCAT,iBAAiB,CAACrF,IAAlB,GAAyB,SAAS+F,yBAAT,CAAmC7F,CAAnC,EAAsC;AAAE,SAAO,KAAKA,CAAC,IAAImF,iBAAV,EAA6BxF,MAAM,CAACmG,iBAAP,CAAyBvB,YAAzB,CAA7B,CAAP;AAA8E,CAA/I;;AACAY,iBAAiB,CAACY,IAAlB,GAAyB,aAAcpG,MAAM,CAACqG,iBAAP,CAAyB;AAAE1B,EAAAA,IAAI,EAAEa,iBAAR;AAA2Bc,EAAAA,SAAS,EAAE,CAAC,CAAC,qBAAD,CAAD,CAAtC;AAAiEC,EAAAA,MAAM,EAAE;AAAE3D,IAAAA,OAAO,EAAE;AAAX,GAAzE;AAAiG4D,EAAAA,QAAQ,EAAE,CAACxG,MAAM,CAACyG,oBAAR;AAA3G,CAAzB,CAAvC;;AACAjB,iBAAiB,CAACd,cAAlB,GAAmC;AAAA,SAAM,CACrC;AAAEC,IAAAA,IAAI,EAAEC;AAAR,GADqC,CAAN;AAAA,CAAnC;;AAGA1H,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPlB,iBAAiB,CAACmB,SAHX,EAGsB,SAHtB,EAGiC,KAAK,CAHtC,CAAV;;AAIAnB,iBAAiB,GAAGtI,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACyH,YAAD,CAAtB,CAAZ,CAAD,EAC3BY,iBAD2B,CAA9B;;AAGA,IAAIoB,aAAa;AACb,yBAAYC,WAAZ,EAAyBlG,KAAzB,EAAgC;AAAA;;AAC5B,SAAKkG,WAAL,GAAmBA,WAAnB;AACA,SAAKlG,KAAL,GAAaA,KAAb;AACA,SAAKmG,QAAL,GAAgB,IAAIvF,GAAJ,EAAhB;AACH;;AALY;AAAA;AAAA,WAMb,mBAAUwF,MAAV,EAAkB;AACd,WAAKD,QAAL,CAAc7B,GAAd,CAAkB8B,MAAlB,EAA0B,KAAKF,WAAL,CAAiBG,YAAjB,CAA8B;AACpDC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEH,MAAM,CAACI,QAAd;AAAwBC,UAAAA,GAAG,EAAEL,MAAM,CAACM;AAApC,SAD4C;AAEpDC,QAAAA,SAAS,EAAEP,MAAM,CAACO,SAFkC;AAGpDC,QAAAA,SAAS,EAAER,MAAM,CAACQ,SAHkC;AAIpDC,QAAAA,QAAQ,EAAET,MAAM,CAACS,QAJmC;AAKpDC,QAAAA,SAAS,EAAEV,MAAM,CAACU,SALkC;AAMpDC,QAAAA,WAAW,EAAEX,MAAM,CAACW,WANgC;AAOpDC,QAAAA,MAAM,EAAEZ,MAAM,CAACY,MAPqC;AAQpDC,QAAAA,WAAW,EAAEb,MAAM,CAACa,WARgC;AASpDC,QAAAA,aAAa,EAAEd,MAAM,CAACc,aAT8B;AAUpD/F,QAAAA,cAAc,EAAEiF,MAAM,CAACjF,cAV6B;AAWpDgG,QAAAA,YAAY,EAAEf,MAAM,CAACe,YAX+B;AAYpDlF,QAAAA,OAAO,EAAEmE,MAAM,CAACnE,OAZoC;AAapDmF,QAAAA,MAAM,EAAEhB,MAAM,CAACgB;AAbqC,OAA9B,CAA1B;AAeH;AACD;AACJ;AACA;;AAzBiB;AAAA;AAAA,WA0Bb,sBAAahB,MAAb,EAAqB;AAAA;;AACjB,aAAO,KAAKD,QAAL,CAAc3B,GAAd,CAAkB4B,MAAlB,EAA0B3F,IAA1B,CAA+B,UAAC4G,CAAD,EAAO;AACzCA,QAAAA,CAAC,CAAC3F,MAAF,CAAS,IAAT;;AACA,QAAA,OAAI,CAACyE,QAAL,CAAczB,MAAd,CAAqB0B,MAArB;AACH,OAHM,CAAP;AAIH;AA/BY;AAAA;AAAA,WAgCb,oBAAWA,MAAX,EAAmBvF,OAAnB,EAA4B;AACxB,aAAO,KAAKsF,QAAL,CAAc3B,GAAd,CAAkB4B,MAAlB,EAA0B3F,IAA1B,CAA+B,UAAC4G,CAAD,EAAO;AACzC,YAAI,OAAOxG,OAAO,CAACM,cAAf,KAAkC,QAAtC,EAAgD;AAC5CN,UAAAA,OAAO,CAACM,cAAR,GAAyBT,MAAM,CAACC,IAAP,CAAYS,cAAZ,CAA2BP,OAAO,CAACM,cAAnC,CAAzB;AACH;;AACDkG,QAAAA,CAAC,CAACtG,UAAF,CAAaF,OAAb;AACH,OALM,CAAP;AAMH;AAvCY;AAAA;AAAA,WAwCb,mBAAUuF,MAAV,EAAkB;AACd,aAAO,KAAKD,QAAL,CAAc3B,GAAd,CAAkB4B,MAAlB,EAA0B3F,IAA1B,CAA+B,UAAC4G,CAAD;AAAA,eAAOA,CAAC,CAACpE,SAAF,EAAP;AAAA,OAA/B,CAAP;AACH;AA1CY;AAAA;AAAA,WA2Cb,mBAAUmD,MAAV,EAAkB;AACd,aAAO,KAAKD,QAAL,CAAc3B,GAAd,CAAkB4B,MAAlB,EAA0B3F,IAA1B,CAA+B,UAAC4G,CAAD;AAAA,eAAOA,CAAC,CAAChE,SAAF,EAAP;AAAA,OAA/B,CAAP;AACH;AA7CY;AAAA;AAAA,WA8Cb,mBAAU+C,MAAV,EAAkB;AACd,aAAO,KAAKD,QAAL,CAAc3B,GAAd,CAAkB4B,MAAlB,EAA0B3F,IAA1B,CAA+B,UAAC4G,CAAD;AAAA,eAAOA,CAAC,CAACC,SAAF,EAAP;AAAA,OAA/B,CAAP;AACH;AAhDY;AAAA;AAAA,WAiDb,mBAAUlB,MAAV,EAAkB;AACd,aAAO,KAAKD,QAAL,CAAc3B,GAAd,CAAkB4B,MAAlB,EAA0B3F,IAA1B,CAA+B,UAAC4G,CAAD,EAAO;AAAE,eAAOA,CAAC,CAACtE,SAAF,CAAY;AAAEwD,UAAAA,GAAG,EAAEH,MAAM,CAACI,QAAd;AAAwBC,UAAAA,GAAG,EAAEL,MAAM,CAACM;AAApC,SAAZ,CAAP;AAAsE,OAA9G,CAAP;AACH;AAnDY;AAAA;AAAA,WAoDb,qBAAYN,MAAZ,EAAoB;AAChB,aAAO,KAAKD,QAAL,CAAc3B,GAAd,CAAkB4B,MAAlB,EAA0B3F,IAA1B,CAA+B,UAAC4G,CAAD,EAAO;AAAE,eAAOA,CAAC,CAACE,WAAF,CAAcnB,MAAM,CAACS,QAArB,CAAP;AAAwC,OAAhF,CAAP;AACH;AAtDY;AAAA;AAAA,WAuDb,sBAAaT,MAAb,EAAqB;AACjB,aAAO,KAAKD,QAAL,CAAc3B,GAAd,CAAkB4B,MAAlB,EAA0B3F,IAA1B,CAA+B,UAAC4G,CAAD,EAAO;AAAE,eAAOA,CAAC,CAACG,YAAF,CAAepB,MAAM,CAACQ,SAAtB,CAAP;AAA0C,OAAlF,CAAP;AACH;AAzDY;AAAA;AAAA,WA0Db,oBAAWR,MAAX,EAAmB;AACf,aAAO,KAAKD,QAAL,CAAc3B,GAAd,CAAkB4B,MAAlB,EAA0B3F,IAA1B,CAA+B,UAAC4G,CAAD,EAAO;AAAE,eAAOA,CAAC,CAACI,UAAF,CAAarB,MAAM,CAACnE,OAApB,CAAP;AAAsC,OAA9E,CAAP;AACH;AA5DY;AAAA;AAAA,WA6Db,mBAAUmE,MAAV,EAAkB;AACd,aAAO,KAAKD,QAAL,CAAc3B,GAAd,CAAkB4B,MAAlB,EAA0B3F,IAA1B,CAA+B,UAAC4G,CAAD,EAAO;AAAE,eAAOA,CAAC,CAACK,SAAF,CAAYtB,MAAM,CAACY,MAAnB,CAAP;AAAoC,OAA5E,CAAP;AACH;AA/DY;AAAA;AAAA,WAgEb,yBAAgBZ,MAAhB,EAAwB;AACpB,aAAO,KAAKD,QAAL,CAAc3B,GAAd,CAAkB4B,MAAlB,CAAP;AACH;AAlEY;AAAA;AAAA,WAmEb,+BAAsB7D,SAAtB,EAAiC6D,MAAjC,EAAyC;AAAA;;AACrC,aAAO,IAAIrI,UAAJ,CAAe,UAACyE,QAAD,EAAc;AAChC,YAAImF,QAAQ,GAAG,IAAf;;AACA,QAAA,OAAI,CAACxB,QAAL,CAAc3B,GAAd,CAAkB4B,MAAlB,EAA0B3F,IAA1B,CAA+B,UAAC4G,CAAD,EAAO;AAClCM,UAAAA,QAAQ,GAAGN,CAAC,CAAC5E,WAAF,CAAcF,SAAd,EAAyB,UAACqF,CAAD;AAAA,mBAAO,OAAI,CAAC5H,KAAL,CAAW2C,GAAX,CAAe;AAAA,qBAAMH,QAAQ,CAACI,IAAT,CAAcgF,CAAd,CAAN;AAAA,aAAf,CAAP;AAAA,WAAzB,CAAX;AACH,SAFD;;AAGA,eAAO,YAAM;AACT,cAAID,QAAQ,KAAK,IAAjB,EAAuB;AACnBA,YAAAA,QAAQ,CAACE,MAAT;AACH;AACJ,SAJD;AAKH,OAVM,CAAP;AAWH;AA/EY;;AAAA;AAAA,GAAjB;;AAiFA5B,aAAa,CAACzG,IAAd,GAAqB,SAASsI,qBAAT,CAA+BpI,CAA/B,EAAkC;AAAE,SAAO,KAAKA,CAAC,IAAIuG,aAAV,EAAyB5G,MAAM,CAAC3B,QAAP,CAAgBoC,oBAAhB,CAAzB,EAAgET,MAAM,CAAC3B,QAAP,CAAgB2B,MAAM,CAACzC,MAAvB,CAAhE,CAAP;AAAyG,CAAlK;;AACAqJ,aAAa,CAACtG,KAAd,GAAsB,aAAcN,MAAM,CAAC5B,kBAAP,CAA0B;AAAEmC,EAAAA,KAAK,EAAEqG,aAAT;AAAwBpG,EAAAA,OAAO,EAAE,iBAAUH,CAAV,EAAa;AAAE,WAAOuG,aAAa,CAACzG,IAAd,CAAmBE,CAAnB,CAAP;AAA+B;AAA/E,CAA1B,CAApC;;AACAuG,aAAa,CAAClC,cAAd,GAA+B;AAAA,SAAM,CACjC;AAAEC,IAAAA,IAAI,EAAElE;AAAR,GADiC,EAEjC;AAAEkE,IAAAA,IAAI,EAAEpH;AAAR,GAFiC,CAAN;AAAA,CAA/B;;AAIAqJ,aAAa,GAAG1J,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACsD,oBAAD,EAAuBlD,MAAvB,CAAtB,CAAZ,CAAD,EACvBqJ,aADuB,CAA1B;AAGA,IAAI8B,WAAJ;;AACA,IAAIC,SAAS,GAAGD,WAAW;AACvB,qBAAYjD,QAAZ,EAAsB;AAAA;;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACA;AACR;AACA;;AACQ,SAAK6B,SAAL,GAAiB,IAAjB;AACA;AACR;AACA;AACQ;;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA;AACR;AACA;AACA;;AACQ,SAAKC,QAAL,GAAgB,KAAhB;AACA;AACR;AACA;;AACQ,SAAKG,MAAL,GAAc,CAAd;AACA;AACR;AACA;AACA;;AACQ,SAAK7F,cAAL,GAAsB,QAAtB;AACA;AACR;AACA;;AACQ,SAAKgG,YAAL,GAAoB,CAApB;AACA;AACR;AACA;;AACQ,SAAKlF,OAAL,GAAe,IAAf;AACA;AACR;AACA;;AACQ,SAAKgG,YAAL,GAAoB,IAAIlL,YAAJ,EAApB;AACA;AACR;AACA;;AACQ,SAAKmL,WAAL,GAAmB,IAAInL,YAAJ,EAAnB;AACA;AACR;AACA;;AACQ,SAAKoL,cAAL,GAAsB,IAAIpL,YAAJ,EAAtB;AACA;AACR;AACA;;AACQ,SAAKqL,IAAL,GAAY,IAAIrL,YAAJ,EAAZ;AACA;AACR;AACA;;AACQ,SAAKsL,OAAL,GAAe,IAAItL,YAAJ,EAAf;AACA;AACR;AACA;;AACQ,SAAKuL,SAAL,GAAiB,IAAIvL,YAAJ,EAAjB;AACA;AACR;AACA;;AACQ,SAAKwL,SAAL,GAAiB,IAAIxL,YAAJ,EAAjB;AACA;AACR;AACA;;AACQ,SAAKyL,SAAL,GAAiB,IAAIzL,YAAJ,EAAjB;AACA;AACR;AACA;;AACQ,SAAK0L,QAAL,GAAgB,IAAI1L,YAAJ,EAAhB;AACA;AACR;AACA;;AACQ,SAAK2L,SAAL,GAAiB,IAAI3L,YAAJ,EAAjB;AACA;AACR;AACA;;AACQ,SAAK4L,OAAL,GAAe,IAAI5L,YAAJ,EAAf;AACA;AACR;AACA;;AACQ,SAAK6L,YAAL,GAAoB,IAAI7L,YAAJ,EAApB;AACA;AACR;AACA;;AACQ,SAAK8L,UAAL,GAAkB,IAAI9L,YAAJ,EAAlB;AACA,SAAK+L,qBAAL,GAA6B,KAA7B;AACA,SAAKC,mBAAL,GAA2B,EAA3B;AACH;AACD;;;AAzFuB;AAAA;AAAA,WA0FvB,oBAAW;AACP,WAAKjE,QAAL,CAAckE,SAAd,CAAwB,IAAxB;;AACA,WAAKF,qBAAL,GAA6B,IAA7B;;AACA,WAAKG,uBAAL;AACH;AACD;;AA/FuB;AAAA;AAAA,WAgGvB,qBAAY9D,OAAZ,EAAqB;AACjB,UAAI,CAAC,KAAK2D,qBAAV,EAAiC;AAC7B;AACH;;AACD,UAAI3D,OAAO,CAAC,UAAD,CAAP,IAAuBA,OAAO,CAAC,WAAD,CAAlC,EAAiD;AAC7C,aAAKL,QAAL,CAAc/B,SAAd,CAAwB,IAAxB;AACH;;AACD,UAAIoC,OAAO,CAAC,UAAD,CAAX,EAAyB;AACrB,aAAKL,QAAL,CAAcyC,WAAd,CAA0B,IAA1B;AACH;;AACD,UAAIpC,OAAO,CAAC,WAAD,CAAX,EAA0B;AACtB,aAAKL,QAAL,CAAc0C,YAAd,CAA2B,IAA3B;AACH;;AACD,UAAIrC,OAAO,CAAC,SAAD,CAAX,EAAwB;AACpB,aAAKL,QAAL,CAAc2C,UAAd,CAAyB,IAAzB;AACH;;AACD,UAAItC,OAAO,CAAC,QAAD,CAAX,EAAuB;AACnB,aAAKL,QAAL,CAAc4C,SAAd,CAAwB,IAAxB;AACH;;AACD,WAAKwB,2BAAL,CAAiC/D,OAAjC;AACH;AApHsB;AAAA;AAAA,WAqHvB,qCAA4BA,OAA5B,EAAqC;AACjC,UAAItE,OAAO,GAAG,EAAd;AACA,UAAIsI,UAAU,GAAGpD,MAAM,CAACqD,IAAP,CAAYjE,OAAZ,EAAqBkE,MAArB,CAA4B,UAAAC,CAAC;AAAA,eAAIvB,WAAW,CAACwB,WAAZ,CAAwBC,OAAxB,CAAgCF,CAAhC,MAAuC,CAAC,CAA5C;AAAA,OAA7B,CAAjB;AACAH,MAAAA,UAAU,CAACM,OAAX,CAAmB,UAACH,CAAD,EAAO;AAAEzI,QAAAA,OAAO,CAACyI,CAAD,CAAP,GAAanE,OAAO,CAACmE,CAAD,CAAP,CAAWjE,YAAxB;AAAuC,OAAnE;;AACA,UAAI8D,UAAU,CAACO,MAAX,GAAoB,CAAxB,EAA2B;AACvB,aAAK5E,QAAL,CAAc/D,UAAd,CAAyB,IAAzB,EAA+BF,OAA/B;AACH;AACJ;AA5HsB;AAAA;AAAA,WA6HvB,mCAA0B;AAAA;;AACtB,UAAI8I,MAAM,GAAG,IAAI/I,GAAJ,EAAb;AACA+I,MAAAA,MAAM,CAACrF,GAAP,CAAW,gBAAX,EAA6B,KAAK2D,YAAlC;AACA0B,MAAAA,MAAM,CAACrF,GAAP,CAAW,OAAX,EAAoB,KAAK4D,WAAzB;AACAyB,MAAAA,MAAM,CAACrF,GAAP,CAAW,UAAX,EAAuB,KAAK6D,cAA5B;AACAwB,MAAAA,MAAM,CAACrF,GAAP,CAAW,MAAX,EAAmB,KAAK8D,IAAxB;AACAuB,MAAAA,MAAM,CAACrF,GAAP,CAAW,SAAX,EAAsB,KAAK+D,OAA3B;AACAsB,MAAAA,MAAM,CAACrF,GAAP,CAAW,WAAX,EAAwB,KAAKgE,SAA7B;AACAqB,MAAAA,MAAM,CAACrF,GAAP,CAAW,WAAX,EAAwB,KAAKiE,SAA7B;AACAoB,MAAAA,MAAM,CAACrF,GAAP,CAAW,WAAX,EAAwB,KAAKkE,SAA7B;AACAmB,MAAAA,MAAM,CAACrF,GAAP,CAAW,UAAX,EAAuB,KAAKmE,QAA5B;AACAkB,MAAAA,MAAM,CAACrF,GAAP,CAAW,WAAX,EAAwB,KAAKoE,SAA7B;AACAiB,MAAAA,MAAM,CAACrF,GAAP,CAAW,SAAX,EAAsB,KAAKqE,OAA3B;AACAgB,MAAAA,MAAM,CAACrF,GAAP,CAAW,gBAAX,EAA6B,KAAKsE,YAAlC;AACAe,MAAAA,MAAM,CAACrF,GAAP,CAAW,YAAX,EAAyB,KAAKuE,UAA9B;AACAc,MAAAA,MAAM,CAACF,OAAP,CAAe,UAACG,YAAD,EAAerH,SAAf,EAA6B;AACxC,QAAA,OAAI,CAACwG,mBAAL,CAAyBc,IAAzB,CAA8B,OAAI,CAAC/E,QAAL,CAAcgF,qBAAd,CAAoCvH,SAApC,EAA+C,OAA/C,EAAqDwH,SAArD,CAA+D,UAACC,KAAD,EAAW;AACpG,kBAAQzH,SAAR;AACI,iBAAK,gBAAL;AACI,cAAA,OAAI,CAACuC,QAAL,CAAcwC,SAAd,CAAwB,OAAxB,EAA8B7G,IAA9B,CAAmC,UAACuG,MAAD;AAAA,uBAAY4C,YAAY,CAACK,IAAb,CAAkBjD,MAAlB,CAAZ;AAAA,eAAnC;;AACA;;AACJ,iBAAK,gBAAL;AACI,cAAA,OAAI,CAAClC,QAAL,CAAczB,SAAd,CAAwB,OAAxB,EAA8B5C,IAA9B,CAAmC,UAAC6F,MAAD;AAAA,uBAAYsD,YAAY,CAACK,IAAb,CAAkB;AAAE1D,kBAAAA,GAAG,EAAED,MAAM,CAACC,GAAP,EAAP;AAAqBE,kBAAAA,GAAG,EAAEH,MAAM,CAACG,GAAP;AAA1B,iBAAlB,CAAZ;AAAA,eAAnC;;AACA;;AACJ;AACImD,cAAAA,YAAY,CAACK,IAAb,CAAkB;AAAEC,gBAAAA,MAAM,EAAE;AAAE3D,kBAAAA,GAAG,EAAEyD,KAAK,CAAC7H,MAAN,CAAaoE,GAAb,EAAP;AAA2BE,kBAAAA,GAAG,EAAEuD,KAAK,CAAC7H,MAAN,CAAasE,GAAb;AAAhC;AAAV,eAAlB;AARR;AAUH,SAX6B,CAA9B;AAYH,OAbD;AAcH;AACD;;AA3JuB;AAAA;AAAA,WA4JvB,uBAAc;AACV,WAAKsC,mBAAL,CAAyBU,OAAzB,CAAiC,UAAUU,CAAV,EAAa;AAAEA,QAAAA,CAAC,CAACC,WAAF;AAAkB,OAAlE;;AACA,WAAKrB,mBAAL,GAA2B,IAA3B;;AACA,WAAKjE,QAAL,CAAcuF,YAAd,CAA2B,IAA3B;AACH;AACD;AACJ;AACA;;AAnK2B;AAAA;AAAA,WAoKvB,qBAAY;AAAE,aAAO,KAAKvF,QAAL,CAAc7B,SAAd,CAAwB,IAAxB,CAAP;AAAuC;AApK9B;AAAA;AAAA,WAqKvB,qBAAY;AAAE,aAAO,KAAK6B,QAAL,CAAczB,SAAd,CAAwB,IAAxB,CAAP;AAAuC;AArK9B;;AAAA;AAAA,GAA3B;;AAuKA2E,SAAS,CAACxI,IAAV,GAAiB,SAAS8K,iBAAT,CAA2B5K,CAA3B,EAA8B;AAAE,SAAO,KAAKA,CAAC,IAAIsI,SAAV,EAAqB3I,MAAM,CAACmG,iBAAP,CAAyBS,aAAzB,CAArB,CAAP;AAAuE,CAAxH;;AACA+B,SAAS,CAACvC,IAAV,GAAiB,aAAcpG,MAAM,CAACqG,iBAAP,CAAyB;AAAE1B,EAAAA,IAAI,EAAEgE,SAAR;AAAmBrC,EAAAA,SAAS,EAAE,CAAC,CAAC,YAAD,CAAD,CAA9B;AAAgDC,EAAAA,MAAM,EAAE;AAAEe,IAAAA,SAAS,EAAE,WAAb;AAA0BC,IAAAA,SAAS,EAAE,CAAC,iBAAD,EAAoB,WAApB,CAArC;AAAuEC,IAAAA,QAAQ,EAAE,UAAjF;AAA6FG,IAAAA,MAAM,EAAE,QAArG;AAA+G7F,IAAAA,cAAc,EAAE,gBAA/H;AAAiJgG,IAAAA,YAAY,EAAE,cAA/J;AAA+KlF,IAAAA,OAAO,EAAE,SAAxL;AAAmMuE,IAAAA,QAAQ,EAAE,UAA7M;AAAyNE,IAAAA,SAAS,EAAE,WAApO;AAAiPI,IAAAA,SAAS,EAAE,WAA5P;AAAyQC,IAAAA,WAAW,EAAE,aAAtR;AAAqSE,IAAAA,WAAW,EAAE,aAAlT;AAAiUC,IAAAA,aAAa,EAAE,eAAhV;AAAiWE,IAAAA,MAAM,EAAE;AAAzW,GAAxD;AAA6amD,EAAAA,OAAO,EAAE;AAAEtC,IAAAA,YAAY,EAAE,cAAhB;AAAgCC,IAAAA,WAAW,EAAE,aAA7C;AAA4DC,IAAAA,cAAc,EAAE,gBAA5E;AAA8FC,IAAAA,IAAI,EAAE,MAApG;AAA4GC,IAAAA,OAAO,EAAE,SAArH;AAAgIC,IAAAA,SAAS,EAAE,WAA3I;AAAwJC,IAAAA,SAAS,EAAE,WAAnK;AAAgLC,IAAAA,SAAS,EAAE,WAA3L;AAAwMC,IAAAA,QAAQ,EAAE,UAAlN;AAA8NC,IAAAA,SAAS,EAAE,WAAzO;AAAsPC,IAAAA,OAAO,EAAE,SAA/P;AAA0QC,IAAAA,YAAY,EAAE,cAAxR;AAAwSC,IAAAA,UAAU,EAAE;AAApT,GAAtb;AAA0vBhD,EAAAA,QAAQ,EAAE,CAACxG,MAAM,CAACyG,oBAAR;AAApwB,CAAzB,CAA/B;AACAkC,SAAS,CAACuB,WAAV,GAAwB,CACpB,WADoB,EACP,aADO,EACQ,aADR,EACuB,eADvB,EACwC,gBADxC,EAC0D,cAD1D,EAEpB,SAFoB,EAET,QAFS,EAEC,WAFD,CAAxB;;AAIAvB,SAAS,CAACjE,cAAV,GAA2B;AAAA,SAAM,CAC7B;AAAEC,IAAAA,IAAI,EAAEiC;AAAR,GAD6B,CAAN;AAAA,CAA3B;;AAGA1J,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPxC,SAAS,CAAChC,SAHH,EAGc,UAHd,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPxC,SAAS,CAAChC,SAHH,EAGc,WAHd,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPiC,SAAS,CAAChC,SAHH,EAGc,WAHd,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,CAAC,iBAAD,CADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPiC,SAAS,CAAChC,SAHH,EAGc,WAHd,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPiC,SAAS,CAAChC,SAHH,EAGc,UAHd,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPzC,SAAS,CAAChC,SAHH,EAGc,WAHd,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPxC,SAAS,CAAChC,SAHH,EAGc,aAHd,EAG6B,KAAK,CAHlC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPiC,SAAS,CAAChC,SAHH,EAGc,QAHd,EAGwB,KAAK,CAH7B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPzC,SAAS,CAAChC,SAHH,EAGc,aAHd,EAG6B,KAAK,CAHlC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPxC,SAAS,CAAChC,SAHH,EAGc,eAHd,EAG+B,KAAK,CAHpC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPzC,SAAS,CAAChC,SAHH,EAGc,gBAHd,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPiC,SAAS,CAAChC,SAHH,EAGc,cAHd,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPiC,SAAS,CAAChC,SAHH,EAGc,SAHd,EAGyB,KAAK,CAH9B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPxC,SAAS,CAAChC,SAHH,EAGc,QAHd,EAGwB,KAAK,CAH7B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiL,SAAS,CAAChC,SAHH,EAGc,cAHd,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiL,SAAS,CAAChC,SAHH,EAGc,aAHd,EAG6B,KAAK,CAHlC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiL,SAAS,CAAChC,SAHH,EAGc,gBAHd,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiL,SAAS,CAAChC,SAHH,EAGc,MAHd,EAGsB,KAAK,CAH3B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiL,SAAS,CAAChC,SAHH,EAGc,SAHd,EAGyB,KAAK,CAH9B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiL,SAAS,CAAChC,SAHH,EAGc,WAHd,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiL,SAAS,CAAChC,SAHH,EAGc,WAHd,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiL,SAAS,CAAChC,SAHH,EAGc,WAHd,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiL,SAAS,CAAChC,SAHH,EAGc,UAHd,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiL,SAAS,CAAChC,SAHH,EAGc,WAHd,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiL,SAAS,CAAChC,SAHH,EAGc,SAHd,EAGyB,KAAK,CAH9B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiL,SAAS,CAAChC,SAHH,EAGc,cAHd,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiL,SAAS,CAAChC,SAHH,EAGc,YAHd,EAG4B,KAAK,CAHjC,CAAV;;AAIAgC,SAAS,GAAGD,WAAW,GAAGxL,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACyJ,aAAD,CAAtB,CAAZ,CAAD,EACjC+B,SADiC,CAApC;AAGA;AACA;AACA;;AACA,IAAI0C,gBAAgB;AAChB,4BAAYxG,QAAZ,EAAsBlE,KAAtB,EAA6B;AAAA;;AACzB,SAAKkE,QAAL,GAAgBA,QAAhB;AACA,SAAKlE,KAAL,GAAaA,KAAb;AACA,SAAKmE,OAAL,GAAe,IAAIvD,GAAJ,EAAf;AACH;AACD;AACJ;AACA;;;AARoB;AAAA;AAAA,WAShB,sBAAawD,KAAb,EAAoB;AAAA;;AAChB,UAAMrC,QAAQ,GAAG,KAAKmC,QAAL,CAAcyG,eAAd,CAA8B;AAC3CC,QAAAA,KAAK,EAAExG,KAAK,CAACwG;AAD8B,OAA9B,EAGZnK,IAHY,CAGP,UAAAoK,CAAC,EAAI;AACX,YAAIzG,KAAK,CAAC0G,OAAV,EAAmB;AACf,UAAA,OAAI,CAACC,eAAL,CAAqBF,CAArB,EAAwBzG,KAAK,CAAC0G,OAA9B,EAAuCrK,IAAvC,CAA4C,UAAAoF,QAAQ;AAAA,mBAAIgF,CAAC,CAAChF,QAAF,GAAaA,QAAjB;AAAA,WAApD;AACH;;AACD,eAAOgF,CAAP;AACH,OARgB,CAAjB;;AASA,WAAK1G,OAAL,CAAaG,GAAb,CAAiBF,KAAjB,EAAwBrC,QAAxB;AACH;AApBe;AAAA;AAAA,WAqBhB,yBAAgBqC,KAAhB,EAAuB;AAAA;;AACnB,WAAKD,OAAL,CAAaK,GAAb,CAAiBJ,KAAjB,EAAwB3D,IAAxB,CAA6B,UAAAuK,CAAC,EAAI;AAC9BA,QAAAA,CAAC,CAACtJ,MAAF,CAAS,IAAT;;AACA,QAAA,OAAI,CAACyC,OAAL,CAAaO,MAAb,CAAoBN,KAApB;AACH,OAHD;AAIH;AA1Be;AAAA;AAAA,WA2BhB,uBAAcA,KAAd,EAAqB0G,OAArB,EAA8B;AAAA;;AAC1B,WAAK3G,OAAL,CAAaK,GAAb,CAAiBJ,KAAjB,EAAwB3D,IAAxB,CAA6B,UAAAuK,CAAC,EAAI;AAC9BA,QAAAA,CAAC,CAACvB,OAAF,CAAU,UAAUwB,OAAV,EAAmB;AACzBD,UAAAA,CAAC,CAACnD,MAAF,CAASoD,OAAT;AACA,cAAIC,KAAK,GAAGF,CAAC,CAACnF,QAAF,CAAW2D,OAAX,CAAmByB,OAAnB,EAA4B,CAA5B,CAAZ;;AACA,cAAIC,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZF,YAAAA,CAAC,CAACnF,QAAF,CAAWsF,MAAX,CAAkBD,KAAlB,EAAyB,CAAzB;AACH;AACJ,SAND;;AAOA,QAAA,OAAI,CAACH,eAAL,CAAqBC,CAArB,EAAwBF,OAAxB,EAAiCrK,IAAjC,CAAsC,UAAAoF,QAAQ;AAAA,iBAAImF,CAAC,CAACnF,QAAF,GAAaA,QAAjB;AAAA,SAA9C;AACH,OATD;AAUH;AAtCe;AAAA;AAAA,WAuChB,wBAAezB,KAAf,EAAsBvD,OAAtB,EAA+B;AAC3B,WAAKsD,OAAL,CAAaK,GAAb,CAAiBJ,KAAjB,EAAwB3D,IAAxB,CAA6B,UAAAuK,CAAC,EAAI;AAC9BA,QAAAA,CAAC,CAACI,kBAAF,CAAqBvK,OAAO,CAACwK,eAA7B;AACAL,QAAAA,CAAC,CAACM,WAAF,CAAczK,OAAO,CAAC0K,QAAtB;AACAP,QAAAA,CAAC,CAACQ,cAAF,CAAiB3K,OAAO,CAAC4K,WAAzB;AACAT,QAAAA,CAAC,CAACU,QAAF,CAAW7K,OAAO,CAAC+J,KAAnB;AACH,OALD;AAMH;AACD;AACJ;AACA;;AAjDoB;AAAA;AAAA,WAkDhB,+BAAsBrI,SAAtB,EAAiC6B,KAAjC,EAAwC;AAAA;;AACpC,aAAO,IAAIrG,UAAJ,CAAe,UAACyE,QAAD,EAAc;AAChC,QAAA,OAAI,CAAC2B,OAAL,CAAaK,GAAb,CAAiBJ,KAAjB,EAAwB3D,IAAxB,CAA6B,UAACoK,CAAD,EAAO;AAChCA,UAAAA,CAAC,CAACpI,WAAF,CAAcF,SAAd,EAAyB,UAACqF,CAAD;AAAA,mBAAO,OAAI,CAAC5H,KAAL,CAAW2C,GAAX,CAAe;AAAA,qBAAMH,QAAQ,CAACI,IAAT,CAAcgF,CAAd,CAAN;AAAA,aAAf,CAAP;AAAA,WAAzB;AACH,SAFD;AAGH,OAJM,CAAP;AAKH;AACD;AACJ;AACA;AACA;AACA;;AA7DoB;AAAA;AAAA,WA8DhB,yBAAgBiD,CAAhB,EAAmBC,OAAnB,EAA4B;AACxB,aAAO,IAAI5K,OAAJ,CAAY,UAACC,OAAD,EAAUwL,MAAV,EAAqB;AACpC,YAAI,OAAOb,OAAP,KAAmB,QAAvB,EAAiC;AAC7B,cAAI;AACA,gBAAMjF,QAAQ,GAAGgF,CAAC,CAACe,UAAF,CAAad,OAAb,CAAjB;AACA3K,YAAAA,OAAO,CAAC0F,QAAD,CAAP;AACH,WAHD,CAIA,OAAO+B,CAAP,EAAU;AACN+D,YAAAA,MAAM,CAAC/D,CAAD,CAAN;AACH;AACJ,SARD,MASK,IAAI,OAAOkD,OAAP,KAAmB,QAAvB,EAAiC;AAClCD,UAAAA,CAAC,CAACgB,WAAF,CAAcf,OAAd,EAAuB,IAAvB,EAA6B3K,OAA7B;AACH,SAFI,MAGA;AACDwL,UAAAA,MAAM,oEAAN;AACH;AACJ,OAhBM,CAAP;AAiBH;AAhFe;;AAAA;AAAA,GAApB;;AAkFAjB,gBAAgB,CAAClL,IAAjB,GAAwB,SAASsM,wBAAT,CAAkCpM,CAAlC,EAAqC;AAAE,SAAO,KAAKA,CAAC,IAAIgL,gBAAV,EAA4BrL,MAAM,CAAC3B,QAAP,CAAgBoC,oBAAhB,CAA5B,EAAmET,MAAM,CAAC3B,QAAP,CAAgB2B,MAAM,CAACzC,MAAvB,CAAnE,CAAP;AAA4G,CAA3K;;AACA8N,gBAAgB,CAAC/K,KAAjB,GAAyB,aAAcN,MAAM,CAAC5B,kBAAP,CAA0B;AAAEmC,EAAAA,KAAK,EAAE8K,gBAAT;AAA2B7K,EAAAA,OAAO,EAAE,iBAAUH,CAAV,EAAa;AAAE,WAAOgL,gBAAgB,CAAClL,IAAjB,CAAsBE,CAAtB,CAAP;AAAkC;AAArF,CAA1B,CAAvC;;AACAgL,gBAAgB,CAAC3G,cAAjB,GAAkC;AAAA,SAAM,CACpC;AAAEC,IAAAA,IAAI,EAAElE;AAAR,GADoC,EAEpC;AAAEkE,IAAAA,IAAI,EAAEpH;AAAR,GAFoC,CAAN;AAAA,CAAlC;;AAIA8N,gBAAgB,GAAGnO,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACsD,oBAAD,EAAuBlD,MAAvB,CAAtB,CAAZ,CAAD,EAC1B8N,gBAD0B,CAA7B;AAGA,IAAIqB,cAAJ;AACA,IAAIC,SAAS,GAAG,CAAhcAAc;AAC7B,wBAAYjH,QAAZ,EAAsB;AAAA;;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,eAAL,GAAuB,KAAvB;AACA,SAAKC,GAAL,GAAW,CAACgH,SAAS,EAAV,EAAc/G,QAAd,EAAX;AACA,SAAKiH,cAAL,GAAsB,EAAtB;AACA;AACR;AACA;;AACQ,SAAKC,UAAL,GAAkB,IAAIpP,YAAJ,EAAlB;AACA;AACR;AACA;;AACQ,SAAK+N,OAAL,GAAe,IAAf;AACH;;AAd4B;AAAA;AAAA,WAe7B,oBAAW;AACP,UAAI,KAAK/F,eAAT,EAA0B;AACtB;AACH;;AACD,WAAKD,QAAL,CAAcsH,YAAd,CAA2B,IAA3B;;AACA,WAAKrH,eAAL,GAAuB,IAAvB;;AACA,WAAKsH,kBAAL;AACH;AAtB4B;AAAA;AAAA,WAuB7B,8BAAqB;AAAA;;AACjB,UAAMC,SAAS,GAAG,CACd;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAACN,UAAL,CAAgBlC,IAAhB,CAAqBwC,EAArB,CAAR;AAAA;AAA1B,OADc,CAAlB;AAGAH,MAAAA,SAAS,CAAC7C,OAAV,CAAkB,UAACiD,GAAD,EAAS;AACvB,YAAMC,EAAE,GAAG,OAAI,CAAC7H,QAAL,CAAcgF,qBAAd,CAAoC4C,GAAG,CAACH,IAAxC,EAA8C,OAA9C,EAAoDxC,SAApD,CAA8D2C,GAAG,CAACF,OAAlE,CAAX;;AACA,QAAA,OAAI,CAACN,cAAL,CAAoBrC,IAApB,CAAyB8C,EAAzB;AACH,OAHD;AAIH;AACD;;AAhC6B;AAAA;AAAA,WAiC7B,cAAK;AAAE,aAAO,KAAK3H,GAAZ;AAAkB;AACzB;;AAlC6B;AAAA;AAAA,WAmC7B,oBAAW;AAAE,oCAAuB,KAAKA,GAAL,CAASC,QAAT,EAAvB;AAA+C;AAC5D;;AApC6B;AAAA;AAAA,WAqC7B,uBAAc;AACV,WAAKH,QAAL,CAAc8H,eAAd,CAA8B,IAA9B,EADU,CAEV;;;AACA,WAAKV,cAAL,CAAoBzC,OAApB,CAA4B,UAAAU,CAAC;AAAA,eAAIA,CAAC,CAACC,WAAF,EAAJ;AAAA,OAA7B;AACH;AACD;;AA1C6B;AAAA;AAAA,WA2C7B,qBAAYjF,OAAZ,EAAqB;AAAA;;AACjB,UAAI,CAAC,KAAKJ,eAAV,EAA2B;AACvB;AACH;;AACD,UAAI8H,aAAa,GAAG1H,OAAO,CAAC,SAAD,CAA3B;;AACA,UAAI0H,aAAJ,EAAmB;AACf,aAAK/H,QAAL,CAAcgI,aAAd,CAA4B,IAA5B,EAAkCD,aAAa,CAACxH,YAAhD;AACH;;AACD,UAAI0H,WAAW,GAAG,EAAlB;;AACAhB,MAAAA,cAAc,CAACiB,sBAAf,CAAsCvD,OAAtC,CAA8C,UAAAH,CAAC;AAAA,eAAIyD,WAAW,CAACzD,CAAD,CAAX,GAAiBnE,OAAO,CAAC8H,cAAR,CAAuB3D,CAAvB,IAA4BnE,OAAO,CAACmE,CAAD,CAAP,CAAWjE,YAAvC,GAAsD,OAAI,CAACiE,CAAD,CAA/E;AAAA,OAA/C;;AACA,WAAKxE,QAAL,CAAcoI,cAAd,CAA6B,IAA7B,EAAmCH,WAAnC;AACH;AAtD4B;;AAAA;AAAA,GAAjC;;AAwDAd,YAAY,CAACzM,IAAb,GAAoB,SAAS2N,oBAAT,CAA8BzN,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIuM,YAAV,EAAwB5M,MAAM,CAACmG,iBAAP,CAAyBkF,gBAAzB,CAAxB,CAAP;AAA6E,CAApI;;AACAuB,YAAY,CAACxG,IAAb,GAAoB,aAAcpG,MAAM,CAACqG,iBAAP,CAAyB;AAAE1B,EAAAA,IAAI,EAAEiI,YAAR;AAAsBtG,EAAAA,SAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,CAAjC;AAAuDC,EAAAA,MAAM,EAAE;AAAEkF,IAAAA,OAAO,EAAE,SAAX;AAAsBF,IAAAA,KAAK,EAAE;AAA7B,GAA/D;AAAuGL,EAAAA,OAAO,EAAE;AAAE4B,IAAAA,UAAU,EAAE;AAAd,GAAhH;AAA8ItG,EAAAA,QAAQ,EAAE,CAACxG,MAAM,CAACyG,oBAAR;AAAxJ,CAAzB,CAAlC;AACAmG,YAAY,CAACe,sBAAb,GAAsC,CAAC,OAAD,CAAtC;;AACAf,YAAY,CAAClI,cAAb,GAA8B;AAAA,SAAM,CAChC;AAAEC,IAAAA,IAAI,EAAE0G;AAAR,GADgC,CAAN;AAAA,CAA9B;;AAGAnO,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPkP,YAAY,CAACjG,SAHN,EAGiB,YAHjB,EAG+B,KAAK,CAHpC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPkG,YAAY,CAACjG,SAHN,EAGiB,SAHjB,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgB4Q,QAAhB,CAFH,CAAD,EAGPnB,YAAY,CAACjG,SAHN,EAGiB,OAHjB,EAG0B,KAAK,CAH/B,CAAV;;AAIAiG,YAAY,GAAGF,cAAc,GAAGxP,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACkO,gBAAD,CAAtB,CAAZ,CAAD,EACvCuB,YADuC,CAA1C;AAGA;AACA;AACA;AACA;;IACMoB,iB;;;AAEN;AACA;AACA;;;AACA,IAAIC,gBAAgB;AAChB,4BAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAChB,SAAKC,wBAAL,GAAgC,IAAIxP,eAAJ,CAAoB,GAApB,CAAhC;AACA,SAAKyP,iBAAL,GAAyB,IAAIzP,eAAJ,CAAoB,IAAI4C,GAAJ,EAApB,CAAzB;AACA,SAAK8M,OAAL,GAAezP,IAAI,CAACsP,MAAM,CAAC/M,IAAP,EAAD,CAAJ,CAAoBmN,IAApB,CAAyBjP,OAAO,CAAC;AAAA,aAAM,OAAI,CAAC+O,iBAAX;AAAA,KAAD,CAAhC,EAAgE9O,MAAM,CAAC,KAAK6O,wBAAL,CAA8BG,IAA9B,CAAmC/O,SAAS,CAAC,UAAAgP,IAAI;AAAA,aAAI1P,KAAK,CAAC,CAAD,EAAI0P,IAAJ,CAAT;AAAA,KAAL,CAA5C,CAAD,CAAtE,EAA+I/O,GAAG,CAAC,UAAAgP,eAAe;AAAA,aAAI,OAAI,CAACC,eAAL,CAAqBD,eAArB,CAAJ;AAAA,KAAhB,CAAlJ,EAA8M/O,WAAW,CAAC,CAAD,CAAzN,CAAf;AACH;;AALe;AAAA;AAAA,WAMhB,yBAAgB+O,eAAhB,EAAiC;AAC7B,UAAME,MAAM,GAAG,IAAIrN,MAAM,CAACC,IAAP,CAAYqN,YAAhB,EAAf;AACAH,MAAAA,eAAe,CAACpE,OAAhB,CAAwB,UAAAwE,CAAC;AAAA,eAAIF,MAAM,CAACG,MAAP,CAAcD,CAAd,CAAJ;AAAA,OAAzB;AACA,aAAOF,MAAP;AACH;AAVe;AAAA;AAAA,WAWhB,qBAAY5L,MAAZ,EAAoB;AAChB,UAAMgM,EAAE,GAAG,KAAKC,iBAAL,CAAuBjM,MAAvB,CAAX;;AACA,UAAI,KAAKsL,iBAAL,CAAuBzD,KAAvB,CAA6BqE,GAA7B,CAAiCF,EAAjC,CAAJ,EAA0C;AACtC;AACH;;AACD,UAAMtP,GAAG,GAAG,KAAK4O,iBAAL,CAAuBzD,KAAnC;AACAnL,MAAAA,GAAG,CAACyF,GAAJ,CAAQ6J,EAAR,EAAYhM,MAAZ;;AACA,WAAKsL,iBAAL,CAAuB7K,IAAvB,CAA4B/D,GAA5B;AACH;AAnBe;AAAA;AAAA,WAoBhB,0BAAiBsD,MAAjB,EAAyB;AACrB,UAAMtD,GAAG,GAAG,KAAK4O,iBAAL,CAAuBzD,KAAnC;AACAnL,MAAAA,GAAG,CAAC6F,MAAJ,CAAW,KAAK0J,iBAAL,CAAuBjM,MAAvB,CAAX;;AACA,WAAKsL,iBAAL,CAAuB7K,IAAvB,CAA4B/D,GAA5B;AACH;AAxBe;AAAA;AAAA,WAyBhB,yCAAgCyP,MAAhC,EAAwC;AACpC,WAAKd,wBAAL,CAA8B5K,IAA9B,CAAmC0L,MAAnC;AACH;AA3Be;AAAA;AAAA,WA4BhB,sBAAa;AACT,aAAO,KAAKZ,OAAZ;AACH;AA9Be;AAAA;AAAA,WA+BhB,2BAAkBvL,MAAlB,EAA0B;AACtB,uBAAUA,MAAM,CAACoE,GAAjB,cAAwBpE,MAAM,CAACsE,GAA/B;AACH;AAjCe;;AAAA;AAAA,GAApB;;AAmCA6G,gBAAgB,CAAC9N,IAAjB,GAAwB,SAAS+O,wBAAT,CAAkC7O,CAAlC,EAAqC;AAAE,SAAO,KAAKA,CAAC,IAAI4N,gBAAV,EAA4BjO,MAAM,CAAC3B,QAAP,CAAgB6B,aAAhB,CAA5B,CAAP;AAAqE,CAApI;;AACA+N,gBAAgB,CAAC3N,KAAjB,GAAyB,aAAcN,MAAM,CAAC5B,kBAAP,CAA0B;AAAEmC,EAAAA,KAAK,EAAE0N,gBAAT;AAA2BzN,EAAAA,OAAO,EAAE,iBAAUH,CAAV,EAAa;AAAE,WAAO4N,gBAAgB,CAAC9N,IAAjB,CAAsBE,CAAtB,CAAP;AAAkC;AAArF,CAA1B,CAAvC;;AACA4N,gBAAgB,CAACvJ,cAAjB,GAAkC;AAAA,SAAM,CACpC;AAAEC,IAAAA,IAAI,EAAEzE;AAAR,GADoC,CAAN;AAAA,CAAlC;;AAGA+N,gBAAgB,GAAG/Q,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAAC+C,aAAD,CAAtB,CAAZ,CAAD,EAC1B+N,gBAD0B,CAA7B;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIkB,YAAY;AACZ,wBAAYC,kBAAZ,EAAgCC,iBAAhC,EAAmD;AAAA;;AAC/C,SAAKD,kBAAL,GAA0BA,kBAA1B;AACA,SAAKC,iBAAL,GAAyBA,iBAAzB;AACA;AACR;AACA;AACA;;AACQ,SAAKC,YAAL,GAAoB,IAApB;AACA,SAAKC,WAAL,GAAmB,IAAIzQ,OAAJ,EAAnB;AACA,SAAK0Q,uBAAL,GAA+B,IAA/B;AACH;AACD;AACJ;AACA;;;AAdgB;AAAA;AAAA,WAeZ,uBAAc;AACV,WAAKC,aAAL;AACH;AACD;AACJ;AACA;;AApBgB;AAAA;AAAA,WAqBZ,oBAAW;AAAA;;AACP,WAAKL,kBAAL,CACKM,oBADL,GAEKpB,IAFL,CAEU5O,oBAAoB,CAAC,UAACwE,CAAD,EAAIC,CAAJ;AAAA,eAAUD,CAAC,CAACpB,MAAF,CAASoE,GAAT,KAAiB/C,CAAC,CAACrB,MAAF,CAASoE,GAA1B,IAAiChD,CAAC,CAACpB,MAAF,CAASsE,GAAT,KAAiBjD,CAAC,CAACrB,MAAF,CAASsE,GAArE;AAAA,OAAD,CAF9B,EAE0GzH,SAAS,CAAC,KAAK4P,WAAN,CAFnH,EAGK7E,SAHL,CAGe,UAAAiF,OAAO;AAAA,eAAI,OAAI,CAACF,aAAL,CAAmBE,OAAnB,CAAJ;AAAA,OAHtB;AAIH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AAjCgB;AAAA;AAAA,WAkCZ,uBAAcC,mBAAd,EAAmC;AAC/B;AACA,UAAI,KAAKJ,uBAAT,EAAkC;AAC9B,aAAKH,iBAAL,CAAuBQ,gBAAvB,CAAwC,KAAKL,uBAAL,CAA6B1M,MAArE,EAD8B,CAE9B;AACA;;AACH;;AACD,UAAI8M,mBAAJ,EAAyB;AACrB,aAAKJ,uBAAL,GAA+BI,mBAA/B;AACH;;AACD,UAAI,CAAC,KAAKJ,uBAAV,EAAmC;AAC/B;AACH;;AACD,UAAI,KAAKF,YAAL,KAAsB,IAA1B,EAAgC;AAC5B,aAAKD,iBAAL,CAAuBS,WAAvB,CAAmC,KAAKN,uBAAL,CAA6B1M,MAAhE;AACH;AACJ;AACD;AACJ;AACA;;AArDgB;AAAA;AAAA,WAsDZ,uBAAc;AACV,WAAKyM,WAAL,CAAiBhM,IAAjB;;AACA,WAAKgM,WAAL,CAAiBQ,QAAjB;;AACA,UAAI,KAAKP,uBAAL,KAAiC,IAArC,EAA2C;AACvC,aAAKH,iBAAL,CAAuBQ,gBAAvB,CAAwC,KAAKL,uBAAL,CAA6B1M,MAArE;AACH;AACJ;AA5DW;;AAAA;AAAA,GAAhB;;AA8DAqM,YAAY,CAAChP,IAAb,GAAoB,SAAS6P,oBAAT,CAA8B3P,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAI8O,YAAV,EAAwBnP,MAAM,CAACmG,iBAAP,CAAyB6H,iBAAzB,EAA4C,CAA5C,CAAxB,EAAwEhO,MAAM,CAACmG,iBAAP,CAAyB8H,gBAAzB,CAAxE,CAAP;AAA6H,CAApL;;AACAkB,YAAY,CAAC/I,IAAb,GAAoB,aAAcpG,MAAM,CAACqG,iBAAP,CAAyB;AAAE1B,EAAAA,IAAI,EAAEwK,YAAR;AAAsB7I,EAAAA,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAD,CAAjC;AAA6DC,EAAAA,MAAM,EAAE;AAAE+I,IAAAA,YAAY,EAAE;AAAhB,GAArE;AAAuG9I,EAAAA,QAAQ,EAAE,CAACxG,MAAM,CAACyG,oBAAR;AAAjH,CAAzB,CAAlC;;AACA0I,YAAY,CAACzK,cAAb,GAA8B;AAAA,SAAM,CAChC;AAAEC,IAAAA,IAAI,EAAEqJ,iBAAR;AAA2BiC,IAAAA,UAAU,EAAE,CAAC;AAAEtL,MAAAA,IAAI,EAAE/G;AAAR,KAAD;AAAvC,GADgC,EAEhC;AAAE+G,IAAAA,IAAI,EAAEsJ;AAAR,GAFgC,CAAN;AAAA,CAA9B;;AAIA/Q,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPyI,YAAY,CAACxI,SAHN,EAGiB,cAHjB,EAGiC,KAAK,CAHtC,CAAV;;AAIAwI,YAAY,GAAGjS,UAAU,CAAC,CAAEE,OAAO,CAAC,CAAD,EAAIQ,IAAI,EAAR,CAAT,EACtBT,UAAU,CAAC,mBAAD,EAAsB,CAAC6Q,iBAAD,EAC5BC,gBAD4B,CAAtB,CADY,CAAD,EAGtBkB,YAHsB,CAAzB;;AAKA,IAAIe,aAAa;AACb,yBAAYC,YAAZ,EAA0BxP,KAA1B,EAAiC;AAAA;;AAC7B,SAAKwP,YAAL,GAAoBA,YAApB;AACA,SAAKxP,KAAL,GAAaA,KAAb;AACA,SAAKyP,QAAL,GAAgB,IAAI7O,GAAJ,EAAhB;AACH;;AALY;AAAA;AAAA,WAMb,0BAAiB8O,MAAjB,EAAyB;AACrB,aAAOhT,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,wCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAC/BgT,MAAM,KAAK,IADoB;AAAA;AAAA;AAAA;;AAAA,iDAExB,IAFwB;;AAAA;AAAA,iDAKxB,KAAKF,YAAL,CAAkBjO,YAAlB,GAAiCd,IAAjC,CAAsC;AAAA,yBAAMC,MAAM,CAACC,IAAP,CAAYgP,SAAZ,CAAsBD,MAAtB,CAAN;AAAA,iBAAtC,CALwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,EAAhB;AAQH;AAfY;AAAA;AAAA,WAgBb,sBAAaE,MAAb,EAAqB;AAAA;;AACjB,UAAM9O,CAAC,GAAG,KAAK2O,QAAL,CAAcjL,GAAd,CAAkBoL,MAAlB,CAAV;;AACA,UAAI9O,CAAC,IAAI,IAAT,EAAe;AACX;AACA,eAAOZ,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,aAAOW,CAAC,CAACL,IAAF,CAAO,UAACK,CAAD,EAAO;AACjB,eAAO,OAAI,CAACd,KAAL,CAAW2C,GAAX,CAAe,YAAM;AACxB7B,UAAAA,CAAC,CAACY,MAAF,CAAS,IAAT;;AACA,UAAA,OAAI,CAAC+N,QAAL,CAAc/K,MAAd,CAAqBkL,MAArB;AACH,SAHM,CAAP;AAIH,OALM,CAAP;AAMH;AA5BY;AAAA;AAAA,WA6Bb,8BAAqBA,MAArB,EAA6B;AACzB,aAAO,KAAKH,QAAL,CAAcjL,GAAd,CAAkBoL,MAAlB,EAA0BnP,IAA1B,CAA+B,UAACK,CAAD;AAAA,eAAOA,CAAC,CAAC+O,WAAF,CAAc;AAAEtJ,UAAAA,GAAG,EAAEqJ,MAAM,CAACpJ,QAAd;AAAwBC,UAAAA,GAAG,EAAEmJ,MAAM,CAAClJ;AAApC,SAAd,CAAP;AAAA,OAA/B,CAAP;AACH;AA/BY;AAAA;AAAA,WAgCb,qBAAYkJ,MAAZ,EAAoB;AAChB,aAAO,KAAKH,QAAL,CAAcjL,GAAd,CAAkBoL,MAAlB,EAA0BnP,IAA1B,CAA+B,UAACK,CAAD;AAAA,eAAOA,CAAC,CAACgP,QAAF,CAAWF,MAAM,CAACG,KAAlB,CAAP;AAAA,OAA/B,CAAP;AACH;AAlCY;AAAA;AAAA,WAmCb,qBAAYH,MAAZ,EAAoB;AAChB,aAAO,KAAKH,QAAL,CAAcjL,GAAd,CAAkBoL,MAAlB,EAA0BnP,IAA1B,CAA+B,UAACK,CAAD,EAAO;AAAEA,QAAAA,CAAC,CAACkP,QAAF,CAAWJ,MAAM,CAACK,KAAlB;AAA2B,OAAnE,CAAP;AACH;AArCY;AAAA;AAAA,WAsCb,yBAAgBL,MAAhB,EAAwB;AACpB,aAAO,KAAKH,QAAL,CAAcjL,GAAd,CAAkBoL,MAAlB,EAA0BnP,IAA1B,CAA+B,UAACK,CAAD;AAAA,eAAOA,CAAC,CAAC0G,YAAF,CAAeoI,MAAM,CAAChJ,SAAtB,CAAP;AAAA,OAA/B,CAAP;AACH;AAxCY;AAAA;AAAA,WAyCb,oBAAWgJ,MAAX,EAAmB;AACf,aAAO,KAAKH,QAAL,CAAcjL,GAAd,CAAkBoL,MAAlB,EAA0BnP,IAA1B,CAA+B,UAACK,CAAD;AAAA,eAAOA,CAAC,CAACoP,OAAF,CAAUN,MAAM,CAACO,OAAjB,CAAP;AAAA,OAA/B,CAAP;AACH;AA3CY;AAAA;AAAA,WA4Cb,uBAAcP,MAAd,EAAsB;AAClB,aAAO,KAAKH,QAAL,CAAcjL,GAAd,CAAkBoL,MAAlB,EAA0BnP,IAA1B,CAA+B,UAACK,CAAD;AAAA,eAAOA,CAAC,CAACsP,UAAF,CAAaR,MAAM,CAACS,OAApB,CAAP;AAAA,OAA/B,CAAP;AACH;AA9CY;AAAA;AAAA,WA+Cb,uBAAcT,MAAd,EAAsB;AAClB,aAAO,KAAKH,QAAL,CAAcjL,GAAd,CAAkBoL,MAAlB,EAA0BnP,IAA1B,CAA+B,UAACK,CAAD;AAAA,eAAOA,CAAC,CAAC2G,UAAF,CAAamI,MAAM,CAAC3N,OAApB,CAAP;AAAA,OAA/B,CAAP;AACH;AAjDY;AAAA;AAAA,WAkDb,sBAAa2N,MAAb,EAAqB;AACjB,aAAO,KAAKH,QAAL,CAAcjL,GAAd,CAAkBoL,MAAlB,EAA0BnP,IAA1B,CAA+B,UAACK,CAAD;AAAA,eAAOA,CAAC,CAACwP,SAAF,CAAYV,MAAM,CAACxI,MAAnB,CAAP;AAAA,OAA/B,CAAP;AACH;AApDY;AAAA;AAAA,WAqDb,yBAAgBwI,MAAhB,EAAwB;AACpB,aAAO,KAAKH,QAAL,CAAcjL,GAAd,CAAkBoL,MAAlB,EAA0BnP,IAA1B,CAA+B,UAACK,CAAD;AAAA,eAAOA,CAAC,CAACyP,YAAF,CAAeX,MAAM,CAACjJ,SAAtB,CAAP;AAAA,OAA/B,CAAP;AACH;AAvDY;AAAA;AAAA,WAwDb,yBAAgBiJ,MAAhB,EAAwB;AACpB,aAAOlT,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,wCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACzB,uBAAM,KAAK+S,QAAL,CAAcjL,GAAd,CAAkBoL,MAAlB,CAAN;;AADyB;AAC7B9O,gBAAAA,CAD6B;AAAA,+BAEnCA,CAFmC;AAAA;AAEpB,uBAAM,KAAK0P,gBAAL,CAAsBZ,MAAM,CAACa,SAA7B,CAAN;;AAFoB;AAAA;;AAAA,6BAEjCC,YAFiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,EAAhB;AAIH;AA7DY;AAAA;AAAA,WA8Db,mBAAUd,MAAV,EAAkB;AAAA;;AACd,UAAMe,aAAa,GAAG,IAAIzQ,OAAJ,CAAY,UAACC,OAAD;AAAA,eAAazD,SAAS,CAAC,OAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,wCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA,iCACpE,KAAK8S,YAD+D;AAAA,iCAE7D;AAAEjJ,oBAAAA,GAAG,EAAEqJ,MAAM,CAACpJ,QAAd;AAAwBC,oBAAAA,GAAG,EAAEmJ,MAAM,CAAClJ;AAApC,mBAF6D;AAAA,iCAGhEkJ,MAAM,CAACK,KAHyD;AAAA,iCAI5DL,MAAM,CAAChJ,SAJqD;AAAA,iCAKjEgJ,MAAM,CAACO,OAL0D;AAAA,iCAM9DP,MAAM,CAACS,OANuD;AAAA,iCAO9DT,MAAM,CAAC3N,OAPuD;AAAA,iCAQ/D2N,MAAM,CAACxI,MARwD;AAAA,iCAShEwI,MAAM,CAACG,KATyD;AAAA,iCAU5DH,MAAM,CAACjJ,SAVqD;AAAA;AAW5D,yBAAM,KAAK6J,gBAAL,CAAsBZ,MAAM,CAACa,SAA7B,CAAN;;AAX4D;AAAA;AAAA;AAEvEG,oBAAAA,QAFuE;AAGvEX,oBAAAA,KAHuE;AAIvErJ,oBAAAA,SAJuE;AAKvEiK,oBAAAA,IALuE;AAMvER,oBAAAA,OANuE;AAOvEpO,oBAAAA,OAPuE;AAQvEmF,oBAAAA,MARuE;AASvE2I,oBAAAA,KATuE;AAUvEpJ,oBAAAA,SAVuE;AAWvE8J,oBAAAA,SAXuE;AAAA;AAAA,iEAClDK,YADkD,mCAYxErQ,IAZwE,CAYnEN,OAZmE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvB,EAAtB;AAAA,OAAZ,CAAtB;;AAcA,WAAKsP,QAAL,CAAcnL,GAAd,CAAkBsL,MAAlB,EAA0Be,aAA1B;AACH;AA9EY;AAAA;AAAA,WA+Eb,yBAAgBf,MAAhB,EAAwB;AACpB,aAAO,KAAKH,QAAL,CAAcjL,GAAd,CAAkBoL,MAAlB,CAAP;AACH;AAjFY;AAAA;AAAA,WAkFb,+BAAsBrN,SAAtB,EAAiCqN,MAAjC,EAAyC;AAAA;;AACrC,aAAO,IAAI7R,UAAJ,CAAe,UAACyE,QAAD,EAAc;AAChC,QAAA,OAAI,CAACiN,QAAL,CAAcjL,GAAd,CAAkBoL,MAAlB,EAA0BnP,IAA1B,CAA+B,UAACK,CAAD,EAAO;AAClCA,UAAAA,CAAC,CAAC2B,WAAF,CAAcF,SAAd,EAAyB,UAACqF,CAAD;AAAA,mBAAO,OAAI,CAAC5H,KAAL,CAAW2C,GAAX,CAAe;AAAA,qBAAMH,QAAQ,CAACI,IAAT,CAAcgF,CAAd,CAAN;AAAA,aAAf,CAAP;AAAA,WAAzB;AACH,SAFD;AAGH,OAJM,CAAP;AAKH;AAxFY;;AAAA;AAAA,GAAjB;;AA0FA2H,aAAa,CAAC/P,IAAd,GAAqB,SAASuR,qBAAT,CAA+BrR,CAA/B,EAAkC;AAAE,SAAO,KAAKA,CAAC,IAAI6P,aAAV,EAAyBlQ,MAAM,CAAC3B,QAAP,CAAgBoC,oBAAhB,CAAzB,EAAgET,MAAM,CAAC3B,QAAP,CAAgB2B,MAAM,CAACzC,MAAvB,CAAhE,CAAP;AAAyG,CAAlK;;AACA2S,aAAa,CAAC5P,KAAd,GAAsB,aAAcN,MAAM,CAAC5B,kBAAP,CAA0B;AAAEmC,EAAAA,KAAK,EAAE2P,aAAT;AAAwB1P,EAAAA,OAAO,EAAE,iBAAUH,CAAV,EAAa;AAAE,WAAO6P,aAAa,CAAC/P,IAAd,CAAmBE,CAAnB,CAAP;AAA+B;AAA/E,CAA1B,CAApC;;AACA6P,aAAa,CAACxL,cAAd,GAA+B;AAAA,SAAM,CACjC;AAAEC,IAAAA,IAAI,EAAElE;AAAR,GADiC,EAEjC;AAAEkE,IAAAA,IAAI,EAAEpH;AAAR,GAFiC,CAAN;AAAA,CAA/B;;AAIA2S,aAAa,GAAGhT,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACsD,oBAAD,EAAuBlD,MAAvB,CAAtB,CAAZ,CAAD,EACvB2S,aADuB,CAA1B;;AAGA,IAAIyB,iBAAiB;AACjB,6BAAYxB,YAAZ,EAA0BxP,KAA1B,EAAiCiR,cAAjC,EAAiD;AAAA;;AAC7C,SAAKzB,YAAL,GAAoBA,YAApB;AACA,SAAKxP,KAAL,GAAaA,KAAb;AACA,SAAKiR,cAAL,GAAsBA,cAAtB;AACA,SAAKC,YAAL,GAAoB,IAAItQ,GAAJ,EAApB;AACH;;AANgB;AAAA;AAAA,WAOjB,0BAAiBuQ,UAAjB,EAA6B;AAAA;;AACzB,UAAMC,OAAO,GAAG,KAAKF,YAAL,CAAkB1M,GAAlB,CAAsB2M,UAAtB,CAAhB;;AACA,UAAIC,OAAO,IAAI,IAAf,EAAqB;AACjB;AACA,eAAOlR,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,aAAOiR,OAAO,CAAC3Q,IAAR,CAAa,UAAC4Q,CAAD,EAAO;AACvB,eAAO,OAAI,CAACrR,KAAL,CAAW2C,GAAX,CAAe,YAAM;AACxB0O,UAAAA,CAAC,CAACC,KAAF;;AACA,UAAA,OAAI,CAACJ,YAAL,CAAkBxM,MAAlB,CAAyByM,UAAzB;AACH,SAHM,CAAP;AAIH,OALM,CAAP;AAMH;AAnBgB;AAAA;AAAA,WAoBjB,qBAAYA,UAAZ,EAAwB;AACpB,aAAO,KAAKD,YAAL,CAAkB1M,GAAlB,CAAsB2M,UAAtB,EAAkC1Q,IAAlC,CAAuC,UAAC4Q,CAAD;AAAA,eAAOA,CAAC,CAACxB,WAAF,CAAc;AAC/DtJ,UAAAA,GAAG,EAAE4K,UAAU,CAAC3K,QAD+C;AAE/DC,UAAAA,GAAG,EAAE0K,UAAU,CAACzK;AAF+C,SAAd,CAAP;AAAA,OAAvC,CAAP;AAIH;AAzBgB;AAAA;AAAA,WA0BjB,mBAAUyK,UAAV,EAAsB;AAClB,aAAO,KAAKD,YAAL,CAAkB1M,GAAlB,CAAsB2M,UAAtB,EACF1Q,IADE,CACG,UAAC4Q,CAAD;AAAA,eAAOA,CAAC,CAACf,SAAF,CAAYa,UAAU,CAAC/J,MAAvB,CAAP;AAAA,OADH,CAAP;AAEH;AA7BgB;AAAA;AAAA,WA8BjB,cAAK+J,UAAL,EAAiB;AAAA;;AACb,aAAO,KAAKD,YAAL,CAAkB1M,GAAlB,CAAsB2M,UAAtB,EAAkC1Q,IAAlC,CAAuC,UAAC8Q,CAAD,EAAO;AACjD,YAAIJ,UAAU,CAACK,UAAX,IAAyB,IAA7B,EAAmC;AAC/B,iBAAO,OAAI,CAACP,cAAL,CAAoBQ,eAApB,CAAoCN,UAAU,CAACK,UAA/C,EAA2D/Q,IAA3D,CAAgE,UAACmP,MAAD,EAAY;AAC/E,mBAAO,OAAI,CAACJ,YAAL,CAAkBjO,YAAlB,GAAiCd,IAAjC,CAAsC,UAAC5B,GAAD;AAAA,qBAAS0S,CAAC,CAACG,IAAF,CAAO7S,GAAP,EAAY+Q,MAAZ,CAAT;AAAA,aAAtC,CAAP;AACH,WAFM,CAAP;AAGH;;AACD,eAAO,OAAI,CAACJ,YAAL,CAAkBjO,YAAlB,GAAiCd,IAAjC,CAAsC,UAAC5B,GAAD;AAAA,iBAAS0S,CAAC,CAACG,IAAF,CAAO7S,GAAP,CAAT;AAAA,SAAtC,CAAP;AACH,OAPM,CAAP;AAQH;AAvCgB;AAAA;AAAA,WAwCjB,eAAMsS,UAAN,EAAkB;AACd,aAAO,KAAKD,YAAL,CAAkB1M,GAAlB,CAAsB2M,UAAtB,EAAkC1Q,IAAlC,CAAuC,UAAC8Q,CAAD;AAAA,eAAOA,CAAC,CAACD,KAAF,EAAP;AAAA,OAAvC,CAAP;AACH;AA1CgB;AAAA;AAAA,WA2CjB,oBAAWH,UAAX,EAAuBtQ,OAAvB,EAAgC;AAC5B,aAAO,KAAKqQ,YAAL,CAAkB1M,GAAlB,CAAsB2M,UAAtB,EAAkC1Q,IAAlC,CAAuC,UAAC4Q,CAAD;AAAA,eAAOA,CAAC,CAACtQ,UAAF,CAAaF,OAAb,CAAP;AAAA,OAAvC,CAAP;AACH;AA7CgB;AAAA;AAAA,WA8CjB,uBAAcsQ,UAAd,EAA0B;AACtB,UAAMtQ,OAAO,GAAG;AACZ8Q,QAAAA,OAAO,EAAER,UAAU,CAACQ,OADR;AAEZC,QAAAA,QAAQ,EAAET,UAAU,CAACS,QAFT;AAGZxK,QAAAA,MAAM,EAAE+J,UAAU,CAAC/J,MAHP;AAIZyK,QAAAA,cAAc,EAAEV,UAAU,CAACU;AAJf,OAAhB;;AAMA,UAAI,OAAOV,UAAU,CAAC3K,QAAlB,KAA+B,QAA/B,IAA2C,OAAO2K,UAAU,CAACzK,SAAlB,KAAgC,QAA/E,EAAyF;AACrF7F,QAAAA,OAAO,CAAC+P,QAAR,GAAmB;AAAErK,UAAAA,GAAG,EAAE4K,UAAU,CAAC3K,QAAlB;AAA4BC,UAAAA,GAAG,EAAE0K,UAAU,CAACzK;AAA5C,SAAnB;AACH;;AACD,UAAMoL,iBAAiB,GAAG,KAAKtC,YAAL,CAAkBuC,gBAAlB,CAAmClR,OAAnC,CAA1B;;AACA,WAAKqQ,YAAL,CAAkB5M,GAAlB,CAAsB6M,UAAtB,EAAkCW,iBAAlC;AACH;AACD;AACJ;AACA;;AA7DqB;AAAA;AAAA,WA8DjB,+BAAsBvP,SAAtB,EAAiC4O,UAAjC,EAA6C;AAAA;;AACzC,aAAO,IAAIpT,UAAJ,CAAe,UAACyE,QAAD,EAAc;AAChC,QAAA,OAAI,CAAC0O,YAAL,CAAkB1M,GAAlB,CAAsB2M,UAAtB,EAAkC1Q,IAAlC,CAAuC,UAAC4Q,CAAD,EAAO;AAC1CA,UAAAA,CAAC,CAAC5O,WAAF,CAAcF,SAAd,EAAyB,UAACqF,CAAD;AAAA,mBAAO,OAAI,CAAC5H,KAAL,CAAW2C,GAAX,CAAe;AAAA,qBAAMH,QAAQ,CAACI,IAAT,CAAcgF,CAAd,CAAN;AAAA,aAAf,CAAP;AAAA,WAAzB;AACH,SAFD;AAGH,OAJM,CAAP;AAKH;AApEgB;;AAAA;AAAA,GAArB;;AAsEAoJ,iBAAiB,CAACxR,IAAlB,GAAyB,SAASwS,yBAAT,CAAmCtS,CAAnC,EAAsC;AAAE,SAAO,KAAKA,CAAC,IAAIsR,iBAAV,EAA6B3R,MAAM,CAAC3B,QAAP,CAAgBoC,oBAAhB,CAA7B,EAAoET,MAAM,CAAC3B,QAAP,CAAgB2B,MAAM,CAACzC,MAAvB,CAApE,EAAoGyC,MAAM,CAAC3B,QAAP,CAAgB6R,aAAhB,CAApG,CAAP;AAA6I,CAA9M;;AACAyB,iBAAiB,CAACrR,KAAlB,GAA0B,aAAcN,MAAM,CAAC5B,kBAAP,CAA0B;AAAEmC,EAAAA,KAAK,EAAEoR,iBAAT;AAA4BnR,EAAAA,OAAO,EAAE,iBAAUH,CAAV,EAAa;AAAE,WAAOsR,iBAAiB,CAACxR,IAAlB,CAAuBE,CAAvB,CAAP;AAAmC;AAAvF,CAA1B,CAAxC;;AACAsR,iBAAiB,CAACjN,cAAlB,GAAmC;AAAA,SAAM,CACrC;AAAEC,IAAAA,IAAI,EAAElE;AAAR,GADqC,EAErC;AAAEkE,IAAAA,IAAI,EAAEpH;AAAR,GAFqC,EAGrC;AAAEoH,IAAAA,IAAI,EAAEuL;AAAR,GAHqC,CAAN;AAAA,CAAnC;;AAKAyB,iBAAiB,GAAGzU,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACsD,oBAAD,EAAuBlD,MAAvB,EACzD2S,aADyD,CAAtB,CAAZ,CAAD,EAE3ByB,iBAF2B,CAA9B;AAIA,IAAIiB,eAAJ;AACA,IAAIC,YAAY,GAAG,CAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,aAAa,GAAGF,eAAe;AAC/B,yBAAYG,kBAAZ,EAAgCC,GAAhC,EAAqC;AAAA;;AACjC,SAAKD,kBAAL,GAA0BA,kBAA1B;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA;AACR;AACA;;AACQ,SAAKC,MAAL,GAAc,KAAd;AACA;AACR;AACA;;AACQ,SAAKC,eAAL,GAAuB,IAAIxV,YAAJ,EAAvB;AACA,SAAKyV,yBAAL,GAAiC,KAAjC;AACA,SAAKxN,GAAL,GAAW,CAACkN,YAAY,EAAb,EAAiBjN,QAAjB,EAAX;AACH;;AAd8B;AAAA;AAAA,WAe/B,oBAAW;AACP,WAAK0M,OAAL,GAAe,KAAKU,GAAL,CAASI,aAAT,CAAuBC,aAAvB,CAAqC,0BAArC,CAAf;;AACA,WAAKN,kBAAL,CAAwBO,aAAxB,CAAsC,IAAtC;;AACA,WAAKH,yBAAL,GAAiC,IAAjC;;AACA,WAAKI,gBAAL;;AACA,WAAK3J,uBAAL;AACH;AACD;;AAtB+B;AAAA;AAAA,WAuB/B,qBAAY9D,OAAZ,EAAqB;AACjB,UAAI,CAAC,KAAKqN,yBAAV,EAAqC;AACjC;AACH;;AACD,UAAI,CAACrN,OAAO,CAAC,UAAD,CAAP,IAAuBA,OAAO,CAAC,WAAD,CAA/B,KAAiD,OAAO,KAAKqB,QAAZ,KAAyB,QAA1E,IACA,OAAO,KAAKE,SAAZ,KAA0B,QAD9B,EACwC;AACpC,aAAK0L,kBAAL,CAAwBvC,WAAxB,CAAoC,IAApC;AACH;;AACD,UAAI1K,OAAO,CAAC,QAAD,CAAX,EAAuB;AACnB,aAAKiN,kBAAL,CAAwB9B,SAAxB,CAAkC,IAAlC;AACH;;AACD,UAAInL,OAAO,CAAC,QAAD,CAAX,EAAuB;AACnB,aAAKyN,gBAAL;AACH;;AACD,WAAKC,qBAAL,CAA2B1N,OAA3B;AACH;AAtC8B;AAAA;AAAA,WAuC/B,mCAA0B;AAAA;;AACtB,WAAKiN,kBAAL,CAAwBtI,qBAAxB,CAA8C,YAA9C,EAA4D,IAA5D,EAAkEC,SAAlE,CAA4E,YAAM;AAC9E,QAAA,OAAI,CAACuI,MAAL,GAAc,KAAd;;AACA,QAAA,OAAI,CAACC,eAAL,CAAqBtI,IAArB;AACH,OAHD;AAIH;AA5C8B;AAAA;AAAA,WA6C/B,4BAAmB;AACf,WAAKqI,MAAL,GAAc,KAAKZ,IAAL,EAAd,GAA4B,KAAKJ,KAAL,EAA5B;AACH;AA/C8B;AAAA;AAAA,WAgD/B,+BAAsBnM,OAAtB,EAA+B;AAC3B,UAAItE,OAAO,GAAG,EAAd;AACA,UAAIsI,UAAU,GAAGpD,MAAM,CAACqD,IAAP,CAAYjE,OAAZ,EAAqBkE,MAArB,CAA4B,UAAAC,CAAC;AAAA,eAAI2I,eAAe,CAACa,wBAAhB,CAAyCtJ,OAAzC,CAAiDF,CAAjD,MAAwD,CAAC,CAA7D;AAAA,OAA7B,CAAjB;AACAH,MAAAA,UAAU,CAACM,OAAX,CAAmB,UAACH,CAAD,EAAO;AAAEzI,QAAAA,OAAO,CAACyI,CAAD,CAAP,GAAanE,OAAO,CAACmE,CAAD,CAAP,CAAWjE,YAAxB;AAAuC,OAAnE;;AACA,WAAK+M,kBAAL,CAAwBrR,UAAxB,CAAmC,IAAnC,EAAyCF,OAAzC;AACH;AACD;AACJ;AACA;;AAxDmC;AAAA;AAAA,WAyD/B,gBAAO;AAAE,aAAO,KAAKuR,kBAAL,CAAwBV,IAAxB,CAA6B,IAA7B,CAAP;AAA4C;AACrD;AACJ;AACA;;AA5DmC;AAAA;AAAA,WA6D/B,iBAAQ;AAAA;;AACJ,aAAO,KAAKU,kBAAL,CAAwBd,KAAxB,CAA8B,IAA9B,EAAoC7Q,IAApC,CAAyC,YAAM;AAAE,QAAA,OAAI,CAAC8R,eAAL,CAAqBtI,IAArB;AAA8B,OAA/E,CAAP;AACH;AACD;;AAhE+B;AAAA;AAAA,WAiE/B,cAAK;AAAE,aAAO,KAAKjF,GAAZ;AAAkB;AACzB;;AAlE+B;AAAA;AAAA,WAmE/B,oBAAW;AAAE,aAAO,mBAAmB,KAAKA,GAAL,CAASC,QAAT,EAA1B;AAAgD;AAC7D;;AApE+B;AAAA;AAAA,WAqE/B,uBAAc;AAAE,WAAKmN,kBAAL,CAAwBW,gBAAxB,CAAyC,IAAzC;AAAiD;AArElC;;AAAA;AAAA,GAAnC;;AAuEAZ,aAAa,CAAC3S,IAAd,GAAqB,SAASwT,qBAAT,CAA+BtT,CAA/B,EAAkC;AAAE,SAAO,KAAKA,CAAC,IAAIyS,aAAV,EAAyB9S,MAAM,CAACmG,iBAAP,CAAyBwL,iBAAzB,CAAzB,EAAsE3R,MAAM,CAACmG,iBAAP,CAAyBnG,MAAM,CAACnC,UAAhC,CAAtE,CAAP;AAA4H,CAArL;;AACAiV,aAAa,CAACc,IAAd,GAAqB,aAAc5T,MAAM,CAAC6T,iBAAP,CAAyB;AAAElP,EAAAA,IAAI,EAAEmO,aAAR;AAAuBxM,EAAAA,SAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyDC,EAAAA,MAAM,EAAE;AAAE0M,IAAAA,MAAM,EAAE,QAAV;AAAoB9L,IAAAA,QAAQ,EAAE,UAA9B;AAA0CE,IAAAA,SAAS,EAAE,WAArD;AAAkEmL,IAAAA,cAAc,EAAE,gBAAlF;AAAoGzK,IAAAA,MAAM,EAAE,QAA5G;AAAsHwK,IAAAA,QAAQ,EAAE;AAAhI,GAAjE;AAA+MrH,EAAAA,OAAO,EAAE;AAAEgI,IAAAA,eAAe,EAAE;AAAnB,GAAxN;AAAgQ1M,EAAAA,QAAQ,EAAE,CAACxG,MAAM,CAACyG,oBAAR,CAA1Q;AAAySqN,EAAAA,kBAAkB,EAAE7T,GAA7T;AAAkU8T,EAAAA,KAAK,EAAE,CAAzU;AAA4UC,EAAAA,IAAI,EAAE,CAAlV;AAAqVC,EAAAA,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,yBAAJ,CAAD,CAA7V;AAA+XC,EAAAA,QAAQ,EAAE,SAASC,sBAAT,CAAgCC,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACpfpU,MAAAA,MAAM,CAACsU,eAAP;AACAtU,MAAAA,MAAM,CAACuU,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACAvU,MAAAA,MAAM,CAACwU,YAAP,CAAoB,CAApB;AACAxU,MAAAA,MAAM,CAACyU,YAAP;AACH;AAAE,GALqD;AAKnDC,EAAAA,aAAa,EAAE;AALoC,CAAzB,CAAnC;AAMA5B,aAAa,CAACW,wBAAd,GAAyC,CAAC,gBAAD,EAAmB,UAAnB,CAAzC;;AACAX,aAAa,CAACpO,cAAd,GAA+B;AAAA,SAAM,CACjC;AAAEC,IAAAA,IAAI,EAAEgN;AAAR,GADiC,EAEjC;AAAEhN,IAAAA,IAAI,EAAE9G;AAAR,GAFiC,CAAN;AAAA,CAA/B;;AAIAX,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGP2H,aAAa,CAACnM,SAHP,EAGkB,UAHlB,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGP2H,aAAa,CAACnM,SAHP,EAGkB,WAHlB,EAG+B,KAAK,CAHpC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBwX,OAAhB,CAFH,CAAD,EAGP7B,aAAa,CAACnM,SAHP,EAGkB,gBAHlB,EAGoC,KAAK,CAHzC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGP2H,aAAa,CAACnM,SAHP,EAGkB,QAHlB,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGP2H,aAAa,CAACnM,SAHP,EAGkB,UAHlB,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPoM,aAAa,CAACnM,SAHP,EAGkB,QAHlB,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPoV,aAAa,CAACnM,SAHP,EAGkB,iBAHlB,EAGqC,KAAK,CAH1C,CAAV;;AAIAmM,aAAa,GAAGF,eAAe,GAAG1V,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACwU,iBAAD,EAAoB9T,UAApB,CAAtB,CAAZ,CAAD,EACzCiV,aADyC,CAA5C;AAGA;AACA;AACA;;AACA,IAAI8B,eAAe;AACf,2BAAY/P,QAAZ,EAAsBlE,KAAtB,EAA6B;AAAA;;AACzB,SAAKkE,QAAL,GAAgBA,QAAhB;AACA,SAAKlE,KAAL,GAAaA,KAAb;AACA,SAAKmE,OAAL,GAAe,IAAIvD,GAAJ,EAAf;AACH;AACD;AACJ;AACA;;;AARmB;AAAA;AAAA,WASf,qBAAYwD,KAAZ,EAAmB;AACf,UAAMrC,QAAQ,GAAG,KAAKmC,QAAL,CAAc3C,YAAd,GAA6Bd,IAA7B,CAAkC,UAAAK,CAAC,EAAI;AACpD,eAAO,IAAIJ,MAAM,CAACC,IAAP,CAAYuT,QAAhB,CAAyB;AAC5BvN,UAAAA,SAAS,EAAEvC,KAAK,CAACuC,SADW;AAE5B9H,UAAAA,GAAG,EAAEiC,CAFuB;AAG5BqT,UAAAA,gBAAgB,EAAE/P,KAAK,CAAC+P,gBAHI;AAI5BC,UAAAA,cAAc,EAAEhQ,KAAK,CAACgQ,cAJM;AAK5BC,UAAAA,mBAAmB,EAAEjQ,KAAK,CAACiQ,mBALC;AAM5BC,UAAAA,GAAG,EAAElQ,KAAK,CAACkQ,GANiB;AAO5BlN,UAAAA,MAAM,EAAEhD,KAAK,CAACgD;AAPc,SAAzB,CAAP;AASH,OAVgB,CAAjB;;AAWA,WAAKjD,OAAL,CAAaG,GAAb,CAAiBF,KAAjB,EAAwBrC,QAAxB;AACH;AAtBc;AAAA;AAAA,WAuBf,oBAAWqC,KAAX,EAAkBvD,OAAlB,EAA2B;AACvB,WAAKsD,OAAL,CAAaK,GAAb,CAAiBJ,KAAjB,EAAwB3D,IAAxB,CAA6B,UAAAuK,CAAC;AAAA,eAAIA,CAAC,CAACjK,UAAF,CAAaF,OAAb,CAAJ;AAAA,OAA9B;AACH;AAzBc;AAAA;AAAA,WA0Bf,wBAAeuD,KAAf,EAAsB;AAAA;;AAClB,WAAKD,OAAL,CAAaK,GAAb,CAAiBJ,KAAjB,EAAwB3D,IAAxB,CAA6B,UAAAuK,CAAC,EAAI;AAC9BA,QAAAA,CAAC,CAACtJ,MAAF,CAAS,IAAT;;AACA,QAAA,OAAI,CAACyC,OAAL,CAAaO,MAAb,CAAoBN,KAApB;AACH,OAHD;AAIH;AACD;AACJ;AACA;;AAlCmB;AAAA;AAAA,WAmCf,+BAAsB7B,SAAtB,EAAiC6B,KAAjC,EAAwC;AAAA;;AACpC,aAAO,IAAIrG,UAAJ,CAAe,UAACyE,QAAD,EAAc;AAChC,QAAA,OAAI,CAAC2B,OAAL,CAAaK,GAAb,CAAiBJ,KAAjB,EAAwB3D,IAAxB,CAA6B,UAACK,CAAD,EAAO;AAChCA,UAAAA,CAAC,CAAC2B,WAAF,CAAcF,SAAd,EAAyB,UAACqF,CAAD;AAAA,mBAAO,OAAI,CAAC5H,KAAL,CAAW2C,GAAX,CAAe;AAAA,qBAAMH,QAAQ,CAACI,IAAT,CAAcgF,CAAd,CAAN;AAAA,aAAf,CAAP;AAAA,WAAzB;AACH,SAFD;AAGH,OAJM,CAAP;AAKH;AAzCc;;AAAA;AAAA,GAAnB;;AA2CAqM,eAAe,CAACzU,IAAhB,GAAuB,SAAS+U,uBAAT,CAAiC7U,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAIuU,eAAV,EAA2B5U,MAAM,CAAC3B,QAAP,CAAgBoC,oBAAhB,CAA3B,EAAkET,MAAM,CAAC3B,QAAP,CAAgB2B,MAAM,CAACzC,MAAvB,CAAlE,CAAP;AAA2G,CAAxK;;AACAqX,eAAe,CAACtU,KAAhB,GAAwB,aAAcN,MAAM,CAAC5B,kBAAP,CAA0B;AAAEmC,EAAAA,KAAK,EAAEqU,eAAT;AAA0BpU,EAAAA,OAAO,EAAE,iBAAUH,CAAV,EAAa;AAAE,WAAOuU,eAAe,CAACzU,IAAhB,CAAqBE,CAArB,CAAP;AAAiC;AAAnF,CAA1B,CAAtC;;AACAuU,eAAe,CAAClQ,cAAhB,GAAiC;AAAA,SAAM,CACnC;AAAEC,IAAAA,IAAI,EAAElE;AAAR,GADmC,EAEnC;AAAEkE,IAAAA,IAAI,EAAEpH;AAAR,GAFmC,CAAN;AAAA,CAAjC;;AAIAqX,eAAe,GAAG1X,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACsD,oBAAD,EAAuBlD,MAAvB,CAAtB,CAAZ,CAAD,EACzBqX,eADyB,CAA5B;AAGA,IAAIO,aAAJ;AACA,IAAIC,SAAS,GAAG,CAAhB;;AACA,IAAIC,WAAW,GAAGF,aAAa;AAC3B,uBAAY1P,QAAZ,EAAsB;AAAA;;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,eAAL,GAAuB,KAAvB;AACA,SAAKC,GAAL,GAAW,CAACyP,SAAS,EAAV,EAAcxP,QAAd,EAAX;AACA,SAAKiH,cAAL,GAAsB,EAAtB;AACA;AACR;AACA;;AACQ,SAAKvF,SAAL,GAAiB,IAAjB;AACA;AACR;AACA;AACA;AACA;AACA;;AACQ,SAAKwN,gBAAL,GAAwB,KAAxB;AACA;AACR;AACA;;AACQ,SAAKC,cAAL,GAAsB,IAAtB;AACA;AACR;AACA;;AACQ,SAAKC,mBAAL,GAA2B,KAA3B;AACA;AACR;AACA;;AACQ,SAAKC,GAAL,GAAW,IAAX;AACA;AACR;AACA;;AACQ,SAAKlN,MAAL,GAAc,IAAd;AACA;AACR;AACA;;AACQ,SAAK+E,UAAL,GAAkB,IAAIpP,YAAJ,EAAlB;AACA;AACR;AACA;;AACQ,SAAK4X,qBAAL,GAA6B,IAAI5X,YAAJ,EAA7B;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAK6X,YAAL,GAAoB,IAAI7X,YAAJ,EAApB;AACH;;AA/C0B;AAAA;AAAA,WAgD3B,oBAAW;AACP,UAAI,KAAKgI,eAAT,EAA0B;AACtB;AACH;;AACD,WAAKD,QAAL,CAAc+P,WAAd,CAA0B,IAA1B;;AACA,WAAK9P,eAAL,GAAuB,IAAvB;;AACA,WAAKsH,kBAAL;AACH;AAvD0B;AAAA;AAAA,WAwD3B,qBAAYlH,OAAZ,EAAqB;AACjB,UAAI,CAAC,KAAKJ,eAAV,EAA2B;AACvB;AACH;;AACD,WAAK+P,qBAAL,CAA2B3P,OAA3B;AACH;AA7D0B;AAAA;AAAA,WA8D3B,+BAAsBA,OAAtB,EAA+B;AAC3B,UAAMtE,OAAO,GAAGkF,MAAM,CAACqD,IAAP,CAAYjE,OAAZ,EACXkE,MADW,CACJ,UAAAC,CAAC;AAAA,eAAIkL,aAAa,CAACO,gBAAd,CAA+BvL,OAA/B,CAAuCF,CAAvC,MAA8C,CAAC,CAAnD;AAAA,OADG,EAEX0L,MAFW,CAEJ,UAACtI,GAAD,EAAMpD,CAAN,EAAY;AACpBoD,QAAAA,GAAG,CAACpD,CAAD,CAAH,GAASnE,OAAO,CAACmE,CAAD,CAAP,CAAWjE,YAApB;AACA,eAAOqH,GAAP;AACH,OALe,EAKb,EALa,CAAhB;;AAMA,UAAI3G,MAAM,CAACqD,IAAP,CAAYvI,OAAZ,EAAqB6I,MAArB,GAA8B,CAAlC,EAAqC;AACjC,aAAK5E,QAAL,CAAc/D,UAAd,CAAyB,IAAzB,EAA+BF,OAA/B;AACH;AACJ;AAxE0B;AAAA;AAAA,WAyE3B,8BAAqB;AAAA;;AACjB,UAAMyL,SAAS,GAAG,CACd;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAACN,UAAL,CAAgBlC,IAAhB,CAAqBwC,EAArB,CAAR;AAAA;AAA1B,OADc,EAEd;AAAEF,QAAAA,IAAI,EAAE,yBAAR;AAAmCC,QAAAA,OAAO,EAAE;AAAA,iBAAM,OAAI,CAACmI,qBAAL,CAA2B1K,IAA3B,EAAN;AAAA;AAA5C,OAFc,EAGd;AAAEsC,QAAAA,IAAI,EAAE,gBAAR;AAA0BC,QAAAA,OAAO,EAAE;AAAA,iBAAM,OAAI,CAACoI,YAAL,CAAkB3K,IAAlB,EAAN;AAAA;AAAnC,OAHc,CAAlB;AAKAqC,MAAAA,SAAS,CAAC7C,OAAV,CAAkB,UAACiD,GAAD,EAAS;AACvB,YAAMC,EAAE,GAAG,OAAI,CAAC7H,QAAL,CAAcgF,qBAAd,CAAoC4C,GAAG,CAACH,IAAxC,EAA8C,OAA9C,EAAoDxC,SAApD,CAA8D2C,GAAG,CAACF,OAAlE,CAAX;;AACA,QAAA,OAAI,CAACN,cAAL,CAAoBrC,IAApB,CAAyB8C,EAAzB;AACH,OAHD;AAIH;AACD;;AApF2B;AAAA;AAAA,WAqF3B,cAAK;AAAE,aAAO,KAAK3H,GAAZ;AAAkB;AACzB;;AAtF2B;AAAA;AAAA,WAuF3B,oBAAW;AAAE,mCAAsB,KAAKA,GAAL,CAASC,QAAT,EAAtB;AAA8C;AAC3D;;AAxF2B;AAAA;AAAA,WAyF3B,uBAAc;AACV,WAAKH,QAAL,CAAcmQ,cAAd,CAA6B,IAA7B,EADU,CAEV;;;AACA,WAAK/I,cAAL,CAAoBzC,OAApB,CAA4B,UAAAU,CAAC;AAAA,eAAIA,CAAC,CAACC,WAAF,EAAJ;AAAA,OAA7B;AACH;AA7F0B;;AAAA;AAAA,GAA/B;;AA+FAsK,WAAW,CAAClV,IAAZ,GAAmB,SAAS0V,mBAAT,CAA6BxV,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIgV,WAAV,EAAuBrV,MAAM,CAACmG,iBAAP,CAAyByO,eAAzB,CAAvB,CAAP;AAA2E,CAAhI;;AACAS,WAAW,CAACjP,IAAZ,GAAmB,aAAcpG,MAAM,CAACqG,iBAAP,CAAyB;AAAE1B,EAAAA,IAAI,EAAE0Q,WAAR;AAAqB/O,EAAAA,SAAS,EAAE,CAAC,CAAC,eAAD,CAAD,CAAhC;AAAqDC,EAAAA,MAAM,EAAE;AAAEe,IAAAA,SAAS,EAAE,WAAb;AAA0BwN,IAAAA,gBAAgB,EAAE,kBAA5C;AAAgEC,IAAAA,cAAc,EAAE,gBAAhF;AAAkGC,IAAAA,mBAAmB,EAAE,qBAAvH;AAA8IC,IAAAA,GAAG,EAAE,KAAnJ;AAA0JlN,IAAAA,MAAM,EAAE;AAAlK,GAA7D;AAA2OmD,EAAAA,OAAO,EAAE;AAAE4B,IAAAA,UAAU,EAAE,YAAd;AAA4BwI,IAAAA,qBAAqB,EAAE,uBAAnD;AAA4EC,IAAAA,YAAY,EAAE;AAA1F,GAApP;AAAgW/O,EAAAA,QAAQ,EAAE,CAACxG,MAAM,CAACyG,oBAAR;AAA1W,CAAzB,CAAjC;AACA4O,WAAW,CAACK,gBAAZ,GAA+B,CAAC,WAAD,EAAc,kBAAd,EAAkC,gBAAlC,EAAoD,qBAApD,EAA2E,KAA3E,EAAkF,QAAlF,CAA/B;;AACAL,WAAW,CAAC3Q,cAAZ,GAA6B;AAAA,SAAM,CAC/B;AAAEC,IAAAA,IAAI,EAAEiQ;AAAR,GAD+B,CAAN;AAAA,CAA7B;;AAGA1X,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP2O,WAAW,CAAC1O,SAHL,EAGgB,WAHhB,EAG6B,KAAK,CAHlC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP2O,WAAW,CAAC1O,SAHL,EAGgB,kBAHhB,EAGoC,KAAK,CAHzC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP2O,WAAW,CAAC1O,SAHL,EAGgB,gBAHhB,EAGkC,KAAK,CAHvC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP2O,WAAW,CAAC1O,SAHL,EAGgB,qBAHhB,EAGuC,KAAK,CAH5C,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPiK,WAAW,CAAC1O,SAHL,EAGgB,KAHhB,EAGuB,KAAK,CAH5B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPkK,WAAW,CAAC1O,SAHL,EAGgB,QAHhB,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGP2X,WAAW,CAAC1O,SAHL,EAGgB,YAHhB,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGP2X,WAAW,CAAC1O,SAHL,EAGgB,uBAHhB,EAGyC,KAAK,CAH9C,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGP2X,WAAW,CAAC1O,SAHL,EAGgB,cAHhB,EAGgC,KAAK,CAHrC,CAAV;;AAIA0O,WAAW,GAAGF,aAAa,GAAGjY,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACyX,eAAD,CAAtB,CAAZ,CAAD,EACrCS,WADqC,CAAxC;;AAGA,SAASS,wBAAT,CAAkCC,KAAlC,EAAyC;AACrC,MAAMC,UAAU,GAAG,CAAC,WAAD,EAAc,WAAd,EAA2B,QAA3B,CAAnB;AACA,SAAOjX,gBAAgB,CAAC,UAACoO,OAAD;AAAA,WAAa6I,UAAU,CAACxW,GAAX,CAAe,UAAAyW,MAAM;AAAA,aAAIF,KAAK,CAAC3S,WAAN,CAAkB6S,MAAlB,EAA0B,UAACpK,KAAD,EAAQqK,QAAR;AAAA,eAAqB/I,OAAO,CAACgJ,KAAR,CAAcJ,KAAd,EAAqB,CAAC;AAAE,oBAAUA,KAAK,CAACK,QAAN,EAAZ;AAA8BH,UAAAA,MAAM,EAANA,MAA9B;AAAsCpK,UAAAA,KAAK,EAALA,KAAtC;AAA6CqK,UAAAA,QAAQ,EAARA;AAA7C,SAAD,CAArB,CAArB;AAAA,OAA1B,CAAJ;AAAA,KAArB,CAAb;AAAA,GAAD,EAAyK,UAACG,QAAD,EAAWC,WAAX;AAAA,WAA2BA,WAAW,CAAClM,OAAZ,CAAoB,UAAAmM,UAAU;AAAA,aAAIA,UAAU,CAAC/N,MAAX,EAAJ;AAAA,KAA9B,CAA3B;AAAA,GAAzK,CAAvB;AACH;;IACKgO,Y;AACF,0BAAc;AAAA;;AACV,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKxJ,SAAL,GAAiB;AACb,mBAAa,EADA;AAEb,mBAAa,EAFA;AAGb,gBAAU;AAHG,KAAjB;AAKH;;;;WACD,iBAAQ;AACJ,WAAK,IAAI+E,CAAC,GAAG,KAAKyE,IAAL,CAAUpM,MAAV,GAAmB,CAAhC,EAAmC2H,CAAC,IAAI,CAAxC,EAA2CA,CAAC,EAA5C,EAAgD;AAC5C,aAAK0E,QAAL,CAAc1E,CAAd;AACH;AACJ;;;WACD,oBAAW;AACP,gCAAW,KAAKyE,IAAhB;AACH;;;WACD,eAAMzE,CAAN,EAAS;AACL,aAAO,KAAKyE,IAAL,CAAUzE,CAAV,CAAP;AACH;;;WACD,qBAAY;AACR,aAAO,KAAKyE,IAAL,CAAUpM,MAAjB;AACH;;;WACD,kBAAS2H,CAAT,EAAY2E,IAAZ,EAAkB;AACd,WAAKF,IAAL,CAAU3K,MAAV,CAAiBkG,CAAjB,EAAoB,CAApB,EAAuB2E,IAAvB;AACA,WAAK1J,SAAL,CAAe2J,SAAf,CAAyBpX,GAAzB,CAA6B,UAAA8I,QAAQ;AAAA,eAAIA,QAAQ,CAAC0J,CAAD,CAAZ;AAAA,OAArC;AACH;;;WACD,eAAM;AAAA;;AACF,UAAM6E,OAAO,GAAG,KAAKJ,IAAL,CAAUK,GAAV,EAAhB;AACA,WAAK7J,SAAL,CAAe8J,SAAf,CAAyBvX,GAAzB,CAA6B,UAAA8I,QAAQ;AAAA,eAAIA,QAAQ,CAAC,OAAI,CAACmO,IAAL,CAAUpM,MAAX,EAAmBwM,OAAnB,CAAZ;AAAA,OAArC;AACA,aAAOA,OAAP;AACH;;;WACD,cAAKF,IAAL,EAAW;AAAA;;AACP,WAAKF,IAAL,CAAUjM,IAAV,CAAemM,IAAf;AACA,WAAK1J,SAAL,CAAe2J,SAAf,CAAyBpX,GAAzB,CAA6B,UAAA8I,QAAQ;AAAA,eAAIA,QAAQ,CAAC,OAAI,CAACmO,IAAL,CAAUpM,MAAV,GAAmB,CAApB,CAAZ;AAAA,OAArC;AACA,aAAO,KAAKoM,IAAL,CAAUpM,MAAjB;AACH;;;WACD,kBAAS2H,CAAT,EAAY;AACR,UAAM6E,OAAO,GAAG,KAAKJ,IAAL,CAAU3K,MAAV,CAAiBkG,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAAhB;AACA,WAAK/E,SAAL,CAAe8J,SAAf,CAAyBvX,GAAzB,CAA6B,UAAA8I,QAAQ;AAAA,eAAIA,QAAQ,CAAC0J,CAAD,EAAI6E,OAAJ,CAAZ;AAAA,OAArC;AACA,aAAOA,OAAP;AACH;;;WACD,eAAM7E,CAAN,EAAS2E,IAAT,EAAe;AACX,UAAME,OAAO,GAAG,KAAKJ,IAAL,CAAUzE,CAAV,CAAhB;AACA,WAAKyE,IAAL,CAAUzE,CAAV,IAAe2E,IAAf;AACA,WAAK1J,SAAL,CAAe+J,MAAf,CAAsBxX,GAAtB,CAA0B,UAAA8I,QAAQ;AAAA,eAAIA,QAAQ,CAAC0J,CAAD,EAAI6E,OAAJ,CAAZ;AAAA,OAAlC;AACH;;;WACD,iBAAQI,QAAR,EAAkB;AACd,WAAKR,IAAL,CAAUrM,OAAV,CAAkB6M,QAAlB;AACH;;;WACD,qBAAY/T,SAAZ,EAAuBiK,OAAvB,EAAgC;AAC5B,UAAM+J,WAAW,GAAG,KAAKjK,SAAL,CAAe/J,SAAf,CAApB;AACAgU,MAAAA,WAAW,CAAC1M,IAAZ,CAAiB2C,OAAjB;AACA,aAAO;AACH3E,QAAAA,MAAM,EAAE,kBAAM;AACV0O,UAAAA,WAAW,CAACpL,MAAZ,CAAmBoL,WAAW,CAAC/M,OAAZ,CAAoBgD,OAApB,CAAnB,EAAiD,CAAjD;AACH;AAHE,OAAP;AAKH;;;;;;AAGL,IAAIgK,cAAc;AACd,0BAAYhH,YAAZ,EAA0BxP,KAA1B,EAAiC;AAAA;;AAC7B,SAAKwP,YAAL,GAAoBA,YAApB;AACA,SAAKxP,KAAL,GAAaA,KAAb;AACA,SAAKyW,SAAL,GAAiB,IAAI7V,GAAJ,EAAjB;AACH;;AALa;AAAA;AAAA,WAMd,oBAAW8V,IAAX,EAAiB;AACb,UAAMC,cAAc,GAAG,KAAKnH,YAAL,CAAkBoH,aAAlB,CAAgC;AACnDjQ,QAAAA,SAAS,EAAE+P,IAAI,CAAC/P,SADmC;AAEnDC,QAAAA,SAAS,EAAE8P,IAAI,CAAC9P,SAFmC;AAGnDC,QAAAA,QAAQ,EAAE6P,IAAI,CAAC7P,QAHoC;AAInDC,QAAAA,SAAS,EAAE4P,IAAI,CAAC5P,SAJmC;AAKnDC,QAAAA,WAAW,EAAE2P,IAAI,CAAC3P,WALiC;AAMnD8P,QAAAA,QAAQ,EAAEH,IAAI,CAACG,QANoC;AAOnDC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAPuC;AAQnD7P,QAAAA,WAAW,EAAEyP,IAAI,CAACzP,WARiC;AASnDC,QAAAA,aAAa,EAAEwP,IAAI,CAACxP,aAT+B;AAUnDC,QAAAA,YAAY,EAAEuP,IAAI,CAACvP,YAVgC;AAWnDlF,QAAAA,OAAO,EAAEyU,IAAI,CAACzU,OAXqC;AAYnDmF,QAAAA,MAAM,EAAEsP,IAAI,CAACtP;AAZsC,OAAhC,CAAvB;;AAcA,WAAKqP,SAAL,CAAenS,GAAf,CAAmBoS,IAAnB,EAAyBC,cAAzB;AACH;AAtBa;AAAA;AAAA,WAuBd,uBAAchV,OAAd,EAAuB;AAAA;;AACnB,UAAMb,CAAC,GAAG,KAAK2V,SAAL,CAAejS,GAAf,CAAmB7C,OAAnB,CAAV;;AACA,UAAIb,CAAC,IAAI,IAAT,EAAe;AACX,eAAOZ,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,aAAOW,CAAC,CAACL,IAAF,CAAO,UAACuK,CAAD;AAAA,eAAO,OAAI,CAAChL,KAAL,CAAW2C,GAAX,CAAe,YAAM;AAAEqI,UAAAA,CAAC,CAAC+L,QAAF,CAAWpV,OAAO,CAACmV,KAAnB;AAA4B,SAAnD,CAAP;AAAA,OAAP,CAAP;AACH;AA7Ba;AAAA;AAAA,WA8Bd,2BAAkBJ,IAAlB,EAAwB7V,OAAxB,EAAiC;AAC7B,aAAO,KAAK4V,SAAL,CAAejS,GAAf,CAAmBkS,IAAnB,EAAyBjW,IAAzB,CAA8B,UAACuK,CAAD,EAAO;AAAEA,QAAAA,CAAC,CAACjK,UAAF,CAAaF,OAAb;AAAwB,OAA/D,CAAP;AACH;AAhCa;AAAA;AAAA,WAiCd,uBAAciW,KAAd,EAAqB;AAAA;;AACjB,UAAMhW,CAAC,GAAG,KAAK2V,SAAL,CAAejS,GAAf,CAAmBsS,KAAnB,CAAV;;AACA,UAAIhW,CAAC,IAAI,IAAT,EAAe;AACX,eAAOZ,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,aAAOW,CAAC,CAACL,IAAF,CAAO,UAACuK,CAAD,EAAO;AACjB,eAAO,OAAI,CAAChL,KAAL,CAAW2C,GAAX,CAAe,YAAM;AACxBqI,UAAAA,CAAC,CAACtJ,MAAF,CAAS,IAAT;;AACA,UAAA,OAAI,CAAC+U,SAAL,CAAe/R,MAAf,CAAsBoS,KAAtB;AACH,SAHM,CAAP;AAIH,OALM,CAAP;AAMH;AA5Ca;AAAA;AAAA,WA6Cd,iBAAQnV,OAAR,EAAiB;AACb,aAAO,KAAK8U,SAAL,CAAejS,GAAf,CAAmB7C,OAAnB,EACFlB,IADE,CACG,UAACkB,OAAD;AAAA,eAAaA,OAAO,CAACqV,OAAR,GAAkBvB,QAAlB,EAAb;AAAA,OADH,CAAP;AAEH;AAhDa;AAAA;AAAA,WAiDd,kBAAS9T,OAAT,EAAkB;AACd,aAAO,KAAK8U,SAAL,CAAejS,GAAf,CAAmB7C,OAAnB,EACFlB,IADE,CACG,UAACkB,OAAD;AAAA,eAAaA,OAAO,CAACsV,QAAR,GAAmBxB,QAAnB,GAA8B5W,GAA9B,CAAkC,UAACqY,CAAD;AAAA,iBAAOA,CAAC,CAACzB,QAAF,EAAP;AAAA,SAAlC,CAAb;AAAA,OADH,CAAP;AAEH;AApDa;AAAA;AAAA,WAqDd,+BAAsBlT,SAAtB,EAAiCmU,IAAjC,EAAuC;AAAA;;AACnC,aAAO,IAAI3Y,UAAJ,CAAe,UAACyE,QAAD,EAAc;AAChC,QAAA,OAAI,CAACiU,SAAL,CAAejS,GAAf,CAAmBkS,IAAnB,EAAyBjW,IAAzB,CAA8B,UAACuK,CAAD,EAAO;AACjCA,UAAAA,CAAC,CAACvI,WAAF,CAAcF,SAAd,EAAyB,UAACqF,CAAD;AAAA,mBAAO,OAAI,CAAC5H,KAAL,CAAW2C,GAAX,CAAe;AAAA,qBAAMH,QAAQ,CAACI,IAAT,CAAcgF,CAAd,CAAN;AAAA,aAAf,CAAP;AAAA,WAAzB;AACH,SAFD;AAGH,OAJM,CAAP;AAKH;AA3Da;AAAA;AAAA,WA4Dd,mCAA0BuP,UAA1B,EAAsC;AAClC,aAAOza,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,wCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACnB,uBAAM,KAAK+Z,SAAL,CAAejS,GAAf,CAAmB2S,UAAnB,CAAN;;AADmB;AAC7BxV,gBAAAA,OAD6B;AAE7BmV,gBAAAA,KAF6B,GAErBnV,OAAO,CAACsV,QAAR,EAFqB;AAG7BG,gBAAAA,aAH6B,GAGbjC,wBAAwB,CAAC2B,KAAD,CAHX;AAAA,kDAI5BM,aAAa,CAACzJ,IAAd,CAAmB1O,SAAS,CAAC;AAAEoY,kBAAAA,MAAM,EAAEP,KAAK,CAACrB,QAAN;AAAV,iBAAD,CAA5B,EAA4D;AACnE7W,gBAAAA,SAAS,CAAC,UAAA0Y,aAAa;AAAA,yBAAIjZ,KAAK,MAAL,6BAAU;AACrCiZ,kBAAAA,aAAa,CAACD,MAAd,CAAqBxY,GAArB,CAAyB,UAAC0Y,KAAD,EAAQrM,KAAR;AAAA,2BAAkBiK,wBAAwB,CAACoC,KAAD,CAAxB,CACtC5J,IADsC,CACjC9O,GAAG,CAAC,UAAA2Y,UAAU;AAAA,6BAAK;AAAEF,wBAAAA,aAAa,EAAbA,aAAF;AAAiBE,wBAAAA,UAAU,EAAVA,UAAjB;AAA6BC,wBAAAA,SAAS,EAAEvM;AAAxC,uBAAL;AAAA,qBAAX,CAD8B,CAAlB;AAAA,mBAAzB,CAD2B,GAGtByC,IAHsB,CAGjB1O,SAAS,CAAC;AAAEqY,oBAAAA,aAAa,EAAbA,aAAF;AAAiBE,oBAAAA,UAAU,EAAE,IAA7B;AAAmCC,oBAAAA,SAAS,EAAE;AAA9C,mBAAD,CAHQ,CAAJ;AAAA,iBAAd,CADF,EAIsE;AAC7EvY,gBAAAA,IAAI,CAAC,CAAD,CALG,EAKE;AACTL,gBAAAA,GAAG,CAAC,gBAA8C;AAAA,sBAA3CyY,aAA2C,QAA3CA,aAA2C;AAAA,sBAA5BE,UAA4B,QAA5BA,UAA4B;AAAA,sBAAhBC,SAAgB,QAAhBA,SAAgB;AAC9C,sBAAIC,MAAJ;;AACA,sBAAI,CAACF,UAAL,EAAiB;AACbE,oBAAAA,MAAM,GAAG;AACLL,sBAAAA,MAAM,EAAEC,aAAa,CAACD,MAAd,CAAqBxY,GAArB,CAAyB,UAAA8Y,MAAM;AAAA,+BAAIA,MAAM,CAAClC,QAAP,GAAkB5W,GAAlB,CAAsB,UAAAsD,MAAM;AAAA,iCAAIA,MAAM,CAACyV,MAAP,EAAJ;AAAA,yBAA5B,CAAJ;AAAA,uBAA/B,CADH;AAELrV,sBAAAA,SAAS,EAAE+U,aAAa,CAAChC,MAFpB;AAGLpK,sBAAAA,KAAK,EAAEoM,aAAa,CAACpM;AAHhB,qBAAT;;AAKA,wBAAIoM,aAAa,CAAC/B,QAAlB,EAA4B;AACxBmC,sBAAAA,MAAM,CAACnC,QAAP,GAAkB+B,aAAa,CAAC/B,QAAd,CAAuBE,QAAvB,EAAlB;AACH;AACJ,mBATD,MAUK;AACDiC,oBAAAA,MAAM,GAAG;AACLL,sBAAAA,MAAM,EAAEC,aAAa,CAACD,MAAd,CAAqBxY,GAArB,CAAyB,UAAA8Y,MAAM;AAAA,+BAAIA,MAAM,CAAClC,QAAP,GAAkB5W,GAAlB,CAAsB,UAAAsD,MAAM;AAAA,iCAAIA,MAAM,CAACyV,MAAP,EAAJ;AAAA,yBAA5B,CAAJ;AAAA,uBAA/B,CADH;AAELH,sBAAAA,SAAS,EAATA,SAFK;AAGLlV,sBAAAA,SAAS,EAAEiV,UAAU,CAAClC,MAHjB;AAILpK,sBAAAA,KAAK,EAAEsM,UAAU,CAACtM;AAJb,qBAAT;;AAMA,wBAAIsM,UAAU,CAACjC,QAAf,EAAyB;AACrBmC,sBAAAA,MAAM,CAACnC,QAAP,GAAkBiC,UAAU,CAACjC,QAA7B;AACH;AACJ;;AACD,yBAAOmC,MAAP;AACH,iBAxBE,CANI,CAJ4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,EAAhB;AAoCH;AAjGa;;AAAA;AAAA,GAAlB;;AAmGAlB,cAAc,CAAChX,IAAf,GAAsB,SAASqY,sBAAT,CAAgCnY,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAI8W,cAAV,EAA0BnX,MAAM,CAAC3B,QAAP,CAAgBoC,oBAAhB,CAA1B,EAAiET,MAAM,CAAC3B,QAAP,CAAgB2B,MAAM,CAACzC,MAAvB,CAAjE,CAAP;AAA0G,CAArK;;AACA4Z,cAAc,CAAC7W,KAAf,GAAuB,aAAcN,MAAM,CAAC5B,kBAAP,CAA0B;AAAEmC,EAAAA,KAAK,EAAE4W,cAAT;AAAyB3W,EAAAA,OAAO,EAAE,iBAAUH,CAAV,EAAa;AAAE,WAAO8W,cAAc,CAAChX,IAAf,CAAoBE,CAApB,CAAP;AAAgC;AAAjF,CAA1B,CAArC;;AACA8W,cAAc,CAACzS,cAAf,GAAgC;AAAA,SAAM,CAClC;AAAEC,IAAAA,IAAI,EAAElE;AAAR,GADkC,EAElC;AAAEkE,IAAAA,IAAI,EAAEpH;AAAR,GAFkC,CAAN;AAAA,CAAhC;;AAIA4Z,cAAc,GAAGja,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACsD,oBAAD,EAAuBlD,MAAvB,CAAtB,CAAZ,CAAD,EACxB4Z,cADwB,CAA3B;AAGA,IAAIsB,iBAAJ;;AACA,IAAIC,eAAe,GAAGD,iBAAiB;AACnC,2BAAYtI,YAAZ,EAA0BxP,KAA1B,EAAiC;AAAA;;AAC7B,SAAKwP,YAAL,GAAoBA,YAApB;AACA,SAAKxP,KAAL,GAAaA,KAAb;AACA,SAAKgY,UAAL,GAAkB,IAAIpX,GAAJ,EAAlB;AACH;;AALkC;AAAA;AAAA,WAoDnC,qBAAYY,IAAZ,EAAkB;AAAA;;AACd,UAAMyW,eAAe,GAAG,KAAKzI,YAAL,CAAkBjO,YAAlB,GACnBd,IADmB,CACd;AAAA,eAAM,CAACqX,iBAAiB,CAACI,cAAlB,CAAiC1W,IAAjC,CAAD,EACZsW,iBAAiB,CAACK,aAAlB,CAAgC3W,IAAhC,CADY,CAAN;AAAA,OADc,EAGnBf,IAHmB,CAGd;AAAA;AAAA,YAAEiW,IAAF;AAAA,YAAQ0B,KAAR;;AAAA,eAAmB,OAAI,CAAC5I,YAAL,CAAkB6I,cAAlB,CAAiC;AAC1D1R,UAAAA,SAAS,EAAEnF,IAAI,CAACmF,SAD0C;AAE1DC,UAAAA,SAAS,EAAEpF,IAAI,CAACoF,SAF0C;AAG1DC,UAAAA,QAAQ,EAAErF,IAAI,CAACqF,QAH2C;AAI1DgQ,UAAAA,QAAQ,EAAErV,IAAI,CAACqV,QAJ2C;AAK1D5P,UAAAA,WAAW,EAAEzF,IAAI,CAACyF,WALwC;AAM1DC,UAAAA,aAAa,EAAE1F,IAAI,CAAC0F,aANsC;AAO1DC,UAAAA,YAAY,EAAE3F,IAAI,CAAC2F,YAPuC;AAQ1DlF,UAAAA,OAAO,EAAET,IAAI,CAACS,OAR4C;AAS1DmF,UAAAA,MAAM,EAAE5F,IAAI,CAAC4F,MAT6C;AAU1DsP,UAAAA,IAAI,EAAEA,IAVoD;AAW1D0B,UAAAA,KAAK,EAAEA;AAXmD,SAAjC,CAAnB;AAAA,OAHc,CAAxB;;AAgBA,WAAKJ,UAAL,CAAgB1T,GAAhB,CAAoB9C,IAApB,EAA0ByW,eAA1B;AACH;AAtEkC;AAAA;AAAA,WAuEnC,8BAAqBzW,IAArB,EAA2B;AAAA;;AACvB,UAAMkV,IAAI,GAAGoB,iBAAiB,CAACI,cAAlB,CAAiC1W,IAAjC,CAAb;;AACA,UAAMV,CAAC,GAAG,KAAKkX,UAAL,CAAgBxT,GAAhB,CAAoBhD,IAApB,CAAV;;AACA,UAAIV,CAAC,IAAI,IAAT,EAAe;AACX,eAAOZ,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,aAAOW,CAAC,CAACL,IAAF,CAAO,UAACuK,CAAD,EAAO;AAAE,eAAO,OAAI,CAAChL,KAAL,CAAW2C,GAAX,CAAe,YAAM;AAAEqI,UAAAA,CAAC,CAACsN,OAAF,CAAU5B,IAAV;AAAkB,SAAzC,CAAP;AAAoD,OAApE,CAAP;AACH;AA9EkC;AAAA;AAAA,WA+EnC,6BAAoBlV,IAApB,EAA0B;AACtB,aAAO9E,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,wCAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACnC,uBAAM,KAAK8S,YAAL,CAAkBjO,YAAlB,EAAN;;AADmC;AAE7B6W,gBAAAA,KAF6B,GAErBN,iBAAiB,CAACK,aAAlB,CAAgC3W,IAAhC,CAFqB;AAG7BV,gBAAAA,CAH6B,GAGzB,KAAKkX,UAAL,CAAgBxT,GAAhB,CAAoBhD,IAApB,CAHyB;;AAAA,sBAI/BV,CAAC,IAAI,IAJ0B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,kDAO5BA,CAAC,CAACL,IAAF,CAAO,UAAAuK,CAAC;AAAA,yBAAI,OAAI,CAAChL,KAAL,CAAW2C,GAAX,CAAe;AAAA,2BAAMqI,CAAC,CAACjK,UAAF,CAAa;AAAEqX,sBAAAA,KAAK,EAAEA;AAAT,qBAAb,CAAN;AAAA,mBAAf,CAAJ;AAAA,iBAAR,CAP4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,EAAhB;AASH;AAzFkC;AAAA;AAAA,WA0FnC,4BAAmB5W,IAAnB,EAAyBX,OAAzB,EAAkC;AAC9B,aAAO,KAAKmX,UAAL,CAAgBxT,GAAhB,CAAoBhD,IAApB,EAA0Bf,IAA1B,CAA+B,UAACuK,CAAD,EAAO;AAAEA,QAAAA,CAAC,CAACjK,UAAF,CAAaF,OAAb;AAAwB,OAAhE,CAAP;AACH;AA5FkC;AAAA;AAAA,WA6FnC,wBAAeW,IAAf,EAAqB;AAAA;;AACjB,UAAMV,CAAC,GAAG,KAAKkX,UAAL,CAAgBxT,GAAhB,CAAoBhD,IAApB,CAAV;;AACA,UAAIV,CAAC,IAAI,IAAT,EAAe;AACX,eAAOZ,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,aAAOW,CAAC,CAACL,IAAF,CAAO,UAACuK,CAAD,EAAO;AACjB,eAAO,OAAI,CAAChL,KAAL,CAAW2C,GAAX,CAAe,YAAM;AACxBqI,UAAAA,CAAC,CAACtJ,MAAF,CAAS,IAAT;;AACA,UAAA,OAAI,CAACsW,UAAL,CAAgBtT,MAAhB,CAAuBlD,IAAvB;AACH,SAHM,CAAP;AAIH,OALM,CAAP;AAMH;AAxGkC;AAAA;AAAA,WAyGnC,oBAAW+W,WAAX,EAAwB;AACpB,aAAO7b,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,wCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAClB,uBAAM,KAAKsb,UAAL,CAAgBxT,GAAhB,CAAoB+T,WAApB,CAAN;;AADkB;AAC7BC,gBAAAA,QAD6B;AAAA,kDAE5BA,QAAQ,CAACxB,OAAT,EAF4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,EAAhB;AAIH;AA9GkC;AAAA;AAAA,WA+GnC,iBAAQuB,WAAR,EAAqB;AACjB,aAAO7b,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,wCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3B,uBAAM,KAAK+b,UAAL,CAAgBF,WAAhB,CAAN;;AAD2B;AAAA,iEACS9C,QADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,EAAhB;AAGH;AAnHkC;AAAA;AAAA,WAoHnC,+BAAsBlT,SAAtB,EAAiCf,IAAjC,EAAuC;AAAA;;AACnC,aAAO,IAAIzD,UAAJ,CAAe,UAACyE,QAAD,EAAc;AAChC,QAAA,OAAI,CAACwV,UAAL,CAAgBxT,GAAhB,CAAoBhD,IAApB,EAA0Bf,IAA1B,CAA+B,UAACuK,CAAD,EAAO;AAClCA,UAAAA,CAAC,CAACvI,WAAF,CAAcF,SAAd,EAAyB,UAACqF,CAAD;AAAA,mBAAO,OAAI,CAAC5H,KAAL,CAAW2C,GAAX,CAAe;AAAA,qBAAMH,QAAQ,CAACI,IAAT,CAAcgF,CAAd,CAAN;AAAA,aAAf,CAAP;AAAA,WAAzB;AACH,SAFD;AAGH,OAJM,CAAP;AAKH;AA1HkC;AAAA;AAAA,WA2HnC,mCAA0BpG,IAA1B,EAAgC;AAC5B,aAAO9E,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,wCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACnB,uBAAM,KAAK+b,UAAL,CAAgBjX,IAAhB,CAAN;;AADmB;AAC7BkX,gBAAAA,OAD6B;AAAA,kDAE5BvD,wBAAwB,CAACuD,OAAD,CAFI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,EAAhB;AAIH;AAhIkC;AAAA;AAAA,WAMnC,wBAAsBlX,IAAtB,EAA4B;AACxB,UAAMkV,IAAI,GAAGlV,IAAI,CAACmX,UAAL,GAAkB9Z,GAAlB,CAAsB,UAAC+Z,KAAD,EAAW;AAC1C,eAAO;AAAErS,UAAAA,GAAG,EAAEqS,KAAK,CAACpS,QAAb;AAAuBC,UAAAA,GAAG,EAAEmS,KAAK,CAAClS;AAAlC,SAAP;AACH,OAFY,CAAb;;AAGA,aAAOgQ,IAAP;AACH;AAXkC;AAAA;AAAA,WAYnC,sBAAoBA,IAApB,EAA0B;AACtB,UAAMmC,UAAU,GAAGnY,MAAM,CAACC,IAAP,CAAYmY,UAAZ,CAAuBpC,IAAvB,CAAnB;;AACA,UAAI,OAAOmC,UAAP,KAAsB,QAA1B,EAAoC;AAChC,eAAOA,UAAP;AACH,OAFD,MAGK;AACD,eAAOnC,IAAP;AACH;AACJ;AApBkC;AAAA;AAAA,WAqBnC,uBAAqBlV,IAArB,EAA2B;AACvB,UAAM4W,KAAK,GAAG5W,IAAI,CAACuX,SAAL,GAAiBla,GAAjB,CAAqB,UAAAma,OAAO;AAAA,eAAK;AAC3CC,UAAAA,aAAa,EAAED,OAAO,CAACC,aADoB;AAE3CC,UAAAA,MAAM,EAAEF,OAAO,CAACE,MAF2B;AAG3CC,UAAAA,MAAM,EAAEH,OAAO,CAACG,MAH2B;AAI3CtI,UAAAA,IAAI,EAAE;AACFuI,YAAAA,MAAM,EAAE,IAAI1Y,MAAM,CAACC,IAAP,CAAY0Y,KAAhB,CAAsBL,OAAO,CAACM,OAA9B,EAAuCN,OAAO,CAACO,OAA/C,CADN;AAEFzS,YAAAA,SAAS,EAAEkS,OAAO,CAAClS,SAFjB;AAGFC,YAAAA,WAAW,EAAEiS,OAAO,CAACjS,WAHnB;AAIF2P,YAAAA,IAAI,EAAEoB,iBAAiB,CAAC0B,YAAlB,CAA+BR,OAAO,CAACtC,IAAvC,CAJJ;AAKF+C,YAAAA,QAAQ,EAAET,OAAO,CAACS,QALhB;AAMFC,YAAAA,KAAK,EAAEV,OAAO,CAACU,KANb;AAOFzS,YAAAA,WAAW,EAAE+R,OAAO,CAAC/R,WAPnB;AAQFC,YAAAA,aAAa,EAAE8R,OAAO,CAAC9R,aARrB;AASFC,YAAAA,YAAY,EAAE6R,OAAO,CAAC7R;AATpB;AAJqC,SAAL;AAAA,OAA5B,CAAd,CADuB,CAiBvB;;;AACAiR,MAAAA,KAAK,CAAC3O,OAAN,CAAc,UAAAoH,IAAI,EAAI;AAClB9K,QAAAA,MAAM,CAAC4T,OAAP,CAAe9I,IAAf,EAAqBpH,OAArB,CAA6B,iBAAgB;AAAA;AAAA,cAAdmQ,GAAc;AAAA,cAATC,GAAS;;AACzC,cAAI,OAAOA,GAAP,KAAe,WAAnB,EAAgC;AAC5B,mBAAOhJ,IAAI,CAAC+I,GAAD,CAAX;AACH;AACJ,SAJD;;AAKA,YAAI,OAAO/I,IAAI,CAACA,IAAL,CAAUuI,MAAV,CAAiB7V,CAAxB,KAA8B,WAA9B,IACA,OAAOsN,IAAI,CAACA,IAAL,CAAUuI,MAAV,CAAiB5V,CAAxB,KAA8B,WADlC,EAC+C;AAC3C,iBAAOqN,IAAI,CAACA,IAAL,CAAUuI,MAAjB;AACH;AACJ,OAVD;AAWA,aAAOhB,KAAP;AACH;AAnDkC;;AAAA;AAAA,GAAvC;;AAkIAL,eAAe,CAACvY,IAAhB,GAAuB,SAASsa,uBAAT,CAAiCpa,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAIqY,eAAV,EAA2B1Y,MAAM,CAAC3B,QAAP,CAAgBoC,oBAAhB,CAA3B,EAAkET,MAAM,CAAC3B,QAAP,CAAgB2B,MAAM,CAACzC,MAAvB,CAAlE,CAAP;AAA2G,CAAxK;;AACAmb,eAAe,CAACpY,KAAhB,GAAwB,aAAcN,MAAM,CAAC5B,kBAAP,CAA0B;AAAEmC,EAAAA,KAAK,EAAEmY,eAAT;AAA0BlY,EAAAA,OAAO,EAAE,iBAAUH,CAAV,EAAa;AAAE,WAAOqY,eAAe,CAACvY,IAAhB,CAAqBE,CAArB,CAAP;AAAiC;AAAnF,CAA1B,CAAtC;;AACAqY,eAAe,CAAChU,cAAhB,GAAiC;AAAA,SAAM,CACnC;AAAEC,IAAAA,IAAI,EAAElE;AAAR,GADmC,EAEnC;AAAEkE,IAAAA,IAAI,EAAEpH;AAAR,GAFmC,CAAN;AAAA,CAAjC;;AAIAmb,eAAe,GAAGD,iBAAiB,GAAGvb,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACsD,oBAAD,EAAuBlD,MAAvB,CAAtB,CAAZ,CAAD,EAC7Cmb,eAD6C,CAAhD;;AAGA,IAAIgC,gBAAgB;AAChB,4BAAY7T,WAAZ,EAAyBlG,KAAzB,EAAgC;AAAA;;AAC5B,SAAKkG,WAAL,GAAmBA,WAAnB;AACA,SAAKlG,KAAL,GAAaA,KAAb;AACA,SAAKga,WAAL,GAAmB,IAAIpZ,GAAJ,EAAnB;AACH;;AALe;AAAA;AAAA,WAMhB,sBAAaqZ,SAAb,EAAwB;AACpB,WAAKD,WAAL,CAAiB1V,GAAjB,CAAqB2V,SAArB,EAAgC,KAAK/T,WAAL,CAAiBgU,eAAjB,CAAiC;AAC7DnM,QAAAA,MAAM,EAAE;AACJoM,UAAAA,KAAK,EAAEF,SAAS,CAACE,KADb;AAEJC,UAAAA,IAAI,EAAEH,SAAS,CAACG,IAFZ;AAGJC,UAAAA,KAAK,EAAEJ,SAAS,CAACI,KAHb;AAIJC,UAAAA,IAAI,EAAEL,SAAS,CAACK;AAJZ,SADqD;AAO7D3T,QAAAA,SAAS,EAAEsT,SAAS,CAACtT,SAPwC;AAQ7DC,QAAAA,SAAS,EAAEqT,SAAS,CAACrT,SARwC;AAS7DC,QAAAA,QAAQ,EAAEoT,SAAS,CAACpT,QATyC;AAU7DC,QAAAA,SAAS,EAAEmT,SAAS,CAACnT,SAVwC;AAW7DC,QAAAA,WAAW,EAAEkT,SAAS,CAAClT,WAXsC;AAY7DE,QAAAA,WAAW,EAAEgT,SAAS,CAAChT,WAZsC;AAa7DC,QAAAA,aAAa,EAAE+S,SAAS,CAAC/S,aAboC;AAc7D/F,QAAAA,cAAc,EAAE8Y,SAAS,CAAC9Y,cAdmC;AAe7DgG,QAAAA,YAAY,EAAE8S,SAAS,CAAC9S,YAfqC;AAgB7DlF,QAAAA,OAAO,EAAEgY,SAAS,CAAChY,OAhB0C;AAiB7DmF,QAAAA,MAAM,EAAE6S,SAAS,CAAC7S;AAjB2C,OAAjC,CAAhC;AAmBH;AACD;AACJ;AACA;;AA7BoB;AAAA;AAAA,WA8BhB,yBAAgB6S,SAAhB,EAA2B;AAAA;;AACvB,aAAO,KAAKD,WAAL,CAAiBxV,GAAjB,CAAqByV,SAArB,EAAgCxZ,IAAhC,CAAqC,UAAC8Z,CAAD,EAAO;AAC/CA,QAAAA,CAAC,CAAC7Y,MAAF,CAAS,IAAT;;AACA,QAAA,OAAI,CAACsY,WAAL,CAAiBtV,MAAjB,CAAwBuV,SAAxB;AACH,OAHM,CAAP;AAIH;AAnCe;AAAA;AAAA,WAoChB,oBAAWA,SAAX,EAAsBpZ,OAAtB,EAA+B;AAC3B,aAAO,KAAKmZ,WAAL,CAAiBxV,GAAjB,CAAqByV,SAArB,EAAgCxZ,IAAhC,CAAqC,UAAC8Z,CAAD;AAAA,eAAOA,CAAC,CAACxZ,UAAF,CAAaF,OAAb,CAAP;AAAA,OAArC,CAAP;AACH;AAtCe;AAAA;AAAA,WAuChB,mBAAUoZ,SAAV,EAAqB;AACjB,aAAO,KAAKD,WAAL,CAAiBxV,GAAjB,CAAqByV,SAArB,EAAgCxZ,IAAhC,CAAqC,UAAC8Z,CAAD;AAAA,eAAOA,CAAC,CAACtX,SAAF,EAAP;AAAA,OAArC,CAAP;AACH;AAzCe;AAAA;AAAA,WA0ChB,mBAAUgX,SAAV,EAAqB;AACjB,aAAO,KAAKD,WAAL,CAAiBxV,GAAjB,CAAqByV,SAArB,EAAgCxZ,IAAhC,CAAqC,UAAC8Z,CAAD,EAAO;AAC/C,eAAOA,CAAC,CAACC,SAAF,CAAY;AACfL,UAAAA,KAAK,EAAEF,SAAS,CAACE,KADF;AAEfC,UAAAA,IAAI,EAAEH,SAAS,CAACG,IAFD;AAGfC,UAAAA,KAAK,EAAEJ,SAAS,CAACI,KAHF;AAIfC,UAAAA,IAAI,EAAEL,SAAS,CAACK;AAJD,SAAZ,CAAP;AAMH,OAPM,CAAP;AAQH;AAnDe;AAAA;AAAA,WAoDhB,qBAAYL,SAAZ,EAAuB;AACnB,aAAO,KAAKD,WAAL,CAAiBxV,GAAjB,CAAqByV,SAArB,EAAgCxZ,IAAhC,CAAqC,UAAC8Z,CAAD,EAAO;AAC/C,eAAOA,CAAC,CAAChT,WAAF,CAAc0S,SAAS,CAACpT,QAAxB,CAAP;AACH,OAFM,CAAP;AAGH;AAxDe;AAAA;AAAA,WAyDhB,sBAAaoT,SAAb,EAAwB;AACpB,aAAO,KAAKD,WAAL,CAAiBxV,GAAjB,CAAqByV,SAArB,EAAgCxZ,IAAhC,CAAqC,UAAC8Z,CAAD,EAAO;AAC/C,eAAOA,CAAC,CAAC/S,YAAF,CAAeyS,SAAS,CAACrT,SAAzB,CAAP;AACH,OAFM,CAAP;AAGH;AA7De;AAAA;AAAA,WA8DhB,oBAAWqT,SAAX,EAAsB;AAClB,aAAO,KAAKD,WAAL,CAAiBxV,GAAjB,CAAqByV,SAArB,EAAgCxZ,IAAhC,CAAqC,UAAC8Z,CAAD,EAAO;AAC/C,eAAOA,CAAC,CAAC9S,UAAF,CAAawS,SAAS,CAAChY,OAAvB,CAAP;AACH,OAFM,CAAP;AAGH;AAlEe;AAAA;AAAA,WAmEhB,+BAAsBM,SAAtB,EAAiC0X,SAAjC,EAA4C;AAAA;;AACxC,aAAOlc,UAAU,CAAC0c,MAAX,CAAkB,UAACjY,QAAD,EAAc;AACnC,YAAImF,QAAQ,GAAG,IAAf;;AACA,QAAA,OAAI,CAACqS,WAAL,CAAiBxV,GAAjB,CAAqByV,SAArB,EAAgCxZ,IAAhC,CAAqC,UAAC8Z,CAAD,EAAO;AACxC5S,UAAAA,QAAQ,GAAG4S,CAAC,CAAC9X,WAAF,CAAcF,SAAd,EAAyB,UAACqF,CAAD;AAAA,mBAAO,OAAI,CAAC5H,KAAL,CAAW2C,GAAX,CAAe;AAAA,qBAAMH,QAAQ,CAACI,IAAT,CAAcgF,CAAd,CAAN;AAAA,aAAf,CAAP;AAAA,WAAzB,CAAX;AACH,SAFD;;AAGA,eAAO,YAAM;AACT,cAAID,QAAQ,KAAK,IAAjB,EAAuB;AACnBA,YAAAA,QAAQ,CAACE,MAAT;AACH;AACJ,SAJD;AAKH,OAVM,CAAP;AAWH;AA/Ee;;AAAA;AAAA,GAApB;;AAiFAkS,gBAAgB,CAACva,IAAjB,GAAwB,SAASkb,wBAAT,CAAkChb,CAAlC,EAAqC;AAAE,SAAO,KAAKA,CAAC,IAAIqa,gBAAV,EAA4B1a,MAAM,CAAC3B,QAAP,CAAgBoC,oBAAhB,CAA5B,EAAmET,MAAM,CAAC3B,QAAP,CAAgB2B,MAAM,CAACzC,MAAvB,CAAnE,CAAP;AAA4G,CAA3K;;AACAmd,gBAAgB,CAACpa,KAAjB,GAAyB,aAAcN,MAAM,CAAC5B,kBAAP,CAA0B;AAAEmC,EAAAA,KAAK,EAAEma,gBAAT;AAA2Bla,EAAAA,OAAO,EAAE,iBAAUH,CAAV,EAAa;AAAE,WAAOqa,gBAAgB,CAACva,IAAjB,CAAsBE,CAAtB,CAAP;AAAkC;AAArF,CAA1B,CAAvC;;AACAqa,gBAAgB,CAAChW,cAAjB,GAAkC;AAAA,SAAM,CACpC;AAAEC,IAAAA,IAAI,EAAElE;AAAR,GADoC,EAEpC;AAAEkE,IAAAA,IAAI,EAAEpH;AAAR,GAFoC,CAAN;AAAA,CAAlC;;AAIAmd,gBAAgB,GAAGxd,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACsD,oBAAD,EAAuBlD,MAAvB,CAAtB,CAAZ,CAAD,EAC1Bmd,gBAD0B,CAA7B;AAGA,IAAIY,QAAJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,MAAM,GAAGD,QAAQ;AACjB,kBAAYE,KAAZ,EAAmBrL,YAAnB,EAAiCsL,WAAjC,EAA8CpM,iBAA9C,EAAiE1O,KAAjE,EAAwE;AAAA;;AACpE,SAAK6a,KAAL,GAAaA,KAAb;AACA,SAAKrL,YAAL,GAAoBA,YAApB;AACA,SAAKsL,WAAL,GAAmBA,WAAnB;AACA,SAAKpM,iBAAL,GAAyBA,iBAAzB;AACA,SAAK1O,KAAL,GAAaA,KAAb;AACA;AACR;AACA;;AACQ,SAAK0G,SAAL,GAAiB,CAAjB;AACA;AACR;AACA;;AACQ,SAAKF,QAAL,GAAgB,CAAhB;AACA;AACR;AACA;;AACQ,SAAKrD,IAAL,GAAY,CAAZ;AACA;AACR;AACA;AACQ;;AACA,SAAKyD,SAAL,GAAiB,IAAjB;AACA;AACR;AACA;;AACQ,SAAKmU,sBAAL,GAA8B,KAA9B;AACA;AACR;AACA;AACA;;AACQ,SAAKC,gBAAL,GAAwB,KAAxB;AACA;AACR;AACA;;AACQ,SAAKC,WAAL,GAAmB,IAAnB;AACA;AACR;AACA;AACA;;AACQ,SAAKC,iBAAL,GAAyB,IAAzB;AACA;AACR;AACA;AACA;;AACQ,SAAKC,MAAL,GAAc,EAAd;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAKC,UAAL,GAAkB,KAAlB;AACA;AACR;AACA;AACA;;AACQ,SAAKzX,SAAL,GAAiB,KAAjB;AACA;AACR;AACA;;AACQ,SAAK0X,YAAL,GAAoB,KAApB;AACA;AACR;AACA;;AACQ,SAAKC,cAAL,GAAsB,KAAtB;AACA;AACR;AACA;;AACQ,SAAKC,UAAL,GAAkB,KAAlB;AACA;AACR;AACA;;AACQ,SAAKC,aAAL,GAAqB,KAArB;AACA;AACR;AACA;;AACQ,SAAKC,iBAAL,GAAyB,KAAzB;AACA;AACR;AACA;;AACQ,SAAKC,SAAL,GAAiB,SAAjB;AACA;AACR;AACA;AACA;;AACQ,SAAKC,cAAL,GAAsB,IAAtB;AACA;AACR;AACA;AACA;AACA;AACA;;AACQ,SAAKC,qBAAL,GAA6B,IAA7B;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,SAAKC,eAAL,GAAuB,MAAvB;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,SAAKC,IAAL,GAAY,CAAZ;AACA,SAAKC,wBAAL,GAAgC,EAAhC;AACA;AACR;AACA;AACA;;AACQ,SAAKC,QAAL,GAAgB,IAAIjf,YAAJ,EAAhB;AACA;AACR;AACA;AACA;;AACQ,SAAKkf,aAAL,GAAqB,IAAIlf,YAAJ,EAArB;AACA;AACR;AACA;AACA;;AACQ,SAAKmf,WAAL,GAAmB,IAAInf,YAAJ,EAAnB;AACA;AACR;AACA;;AACQ,SAAKkL,YAAL,GAAoB,IAAIlL,YAAJ,EAApB;AACA;AACR;AACA;;AACQ,SAAKof,YAAL,GAAoB,IAAIpf,YAAJ,EAApB;AACA;AACR;AACA;;AACQ,SAAKqf,eAAL,GAAuB,IAAIrf,YAAJ,EAAvB;AACA;AACR;AACA;;AACQ,SAAKsf,IAAL,GAAY,IAAItf,YAAJ,EAAZ;AACA;AACR;AACA;;AACQ,SAAKuf,UAAL,GAAkB,IAAIvf,YAAJ,EAAlB;AACA;AACR;AACA;AACA;;AACQ,SAAKwf,QAAL,GAAgB,IAAIxf,YAAJ,EAAhB;AACA;AACR;AACA;;AACQ,SAAKyf,WAAL,GAAmB,IAAIzf,YAAJ,EAAnB;AACH;AACD;;;AApKiB;AAAA;AAAA,WAqKjB,oBAAW;AACP,UAAIqC,gBAAgB,CAAC,KAAK0b,WAAN,CAApB,EAAwC;AACpC;AACA;AACH,OAJM,CAKP;;;AACA,UAAM2B,SAAS,GAAG,KAAK5B,KAAL,CAAWpI,aAAX,CAAyBC,aAAzB,CAAuC,0BAAvC,CAAlB;;AACA,WAAKgK,gBAAL,CAAsBD,SAAtB;AACH;AA7KgB;AAAA;AAAA,WA8KjB,0BAAiBpc,EAAjB,EAAqB;AAAA;;AACjB,WAAKmP,YAAL,CAAkBmN,SAAlB,CAA4Btc,EAA5B,EAAgC;AAC5BiG,QAAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE,KAAKC,QAAL,IAAiB,CAAxB;AAA2BC,UAAAA,GAAG,EAAE,KAAKC,SAAL,IAAkB;AAAlD,SADoB;AAE5BvD,QAAAA,IAAI,EAAE,KAAKA,IAFiB;AAG5ByZ,QAAAA,OAAO,EAAE,KAAKA,OAHc;AAI5BC,QAAAA,OAAO,EAAE,KAAKA,OAJc;AAK5BC,QAAAA,WAAW,EAAE,KAAKA,WALU;AAM5B9B,QAAAA,gBAAgB,EAAE,KAAKA,gBANK;AAO5BD,QAAAA,sBAAsB,EAAE,KAAKA,sBAPD;AAQ5BE,QAAAA,WAAW,EAAE,KAAKA,WARU;AAS5B8B,QAAAA,eAAe,EAAE,KAAKA,eATM;AAU5BnW,QAAAA,SAAS,EAAE,KAAKA,SAVY;AAW5BoW,QAAAA,eAAe,EAAE,KAAKA,eAXM;AAY5BC,QAAAA,cAAc,EAAE,KAAKA,cAZO;AAa5B/B,QAAAA,iBAAiB,EAAE,KAAKA,iBAbI;AAc5BC,QAAAA,MAAM,EAAE,KAAKA,MAde;AAe5B+B,QAAAA,WAAW,EAAE,KAAKA,WAfU;AAgB5BC,QAAAA,kBAAkB,EAAE,KAAKA,kBAhBG;AAiB5BC,QAAAA,iBAAiB,EAAE,KAAKA,iBAjBI;AAkB5BC,QAAAA,wBAAwB,EAAE,KAAKA,wBAlBH;AAmB5BhC,QAAAA,YAAY,EAAE,KAAKA,YAnBS;AAoB5BiC,QAAAA,mBAAmB,EAAE,KAAKA,mBApBE;AAqB5BhC,QAAAA,cAAc,EAAE,KAAKA,cArBO;AAsB5BiC,QAAAA,qBAAqB,EAAE,KAAKA,qBAtBA;AAuB5BhC,QAAAA,UAAU,EAAE,KAAKA,UAvBW;AAwB5BiC,QAAAA,iBAAiB,EAAE,KAAKA,iBAxBI;AAyB5BhC,QAAAA,aAAa,EAAE,KAAKA,aAzBQ;AA0B5BiC,QAAAA,oBAAoB,EAAE,KAAKA,oBA1BC;AA2B5BhC,QAAAA,iBAAiB,EAAE,KAAKA,iBA3BI;AA4B5BiC,QAAAA,wBAAwB,EAAE,KAAKA,wBA5BH;AA6B5BhC,QAAAA,SAAS,EAAE,KAAKA,SA7BY;AA8B5BC,QAAAA,cAAc,EAAE,KAAKA,cA9BO;AA+B5BE,QAAAA,eAAe,EAAE,KAAKA,eA/BM;AAgC5BC,QAAAA,IAAI,EAAE,KAAKA,IAhCiB;AAiC5B6B,QAAAA,WAAW,EAAE,KAAKA;AAjCU,OAAhC,EAmCKld,IAnCL,CAmCU;AAAA,eAAM,OAAI,CAAC+O,YAAL,CAAkBjO,YAAlB,EAAN;AAAA,OAnCV,EAoCKd,IApCL,CAoCU,UAAA5B,GAAG;AAAA,eAAI,OAAI,CAAC0d,QAAL,CAActS,IAAd,CAAmBpL,GAAnB,CAAJ;AAAA,OApCb,EADiB,CAsCjB;;;AACA,WAAK+e,sBAAL;;AACA,WAAKC,oBAAL;;AACA,WAAKC,qBAAL;;AACA,WAAKC,mBAAL;;AACA,WAAKC,sBAAL;;AACA,WAAKC,uBAAL;;AACA,WAAKC,gBAAL;AACH;AACD;;AA7NiB;AAAA;AAAA,WA8NjB,uBAAc;AACV;AACA,WAAKnC,wBAAL,CAA8BtS,OAA9B,CAAsC,UAACU,CAAD;AAAA,eAAOA,CAAC,CAACC,WAAF,EAAP;AAAA,OAAtC,EAFU,CAGV;;;AACA,WAAKoF,YAAL,CAAkB1M,sBAAlB;;AACA,UAAI,KAAKqb,sBAAT,EAAiC;AAC7B,aAAKA,sBAAL,CAA4B/T,WAA5B;AACH;AACJ;AACD;;AAvOiB;AAAA;AAAA,WAwOjB,qBAAYjF,OAAZ,EAAqB;AACjB,WAAKiZ,wBAAL,CAA8BjZ,OAA9B;;AACA,WAAKkZ,eAAL,CAAqBlZ,OAArB;AACH;AA3OgB;AAAA;AAAA,WA4OjB,kCAAyBA,OAAzB,EAAkC;AAC9B,UAAItE,OAAO,GAAG,EAAd;AACA,UAAIsI,UAAU,GAAGpD,MAAM,CAACqD,IAAP,CAAYjE,OAAZ,EAAqBkE,MAArB,CAA4B,UAAAC,CAAC;AAAA,eAAIqR,QAAQ,CAAC2D,qBAAT,CAA+B9U,OAA/B,CAAuCF,CAAvC,MAA8C,CAAC,CAAnD;AAAA,OAA7B,CAAjB;AACAH,MAAAA,UAAU,CAACM,OAAX,CAAmB,UAACH,CAAD,EAAO;AAAEzI,QAAAA,OAAO,CAACyI,CAAD,CAAP,GAAanE,OAAO,CAACmE,CAAD,CAAP,CAAWjE,YAAxB;AAAuC,OAAnE;;AACA,WAAKmK,YAAL,CAAkB+O,aAAlB,CAAgC1d,OAAhC;AACH;AACD;AACJ;AACA;AACA;AACA;;AAtPqB;AAAA;AAAA,WAuPjB,yBAA+B;AAAA;;AAAA,UAAjB2d,QAAiB,uEAAN,IAAM;AAC3B;AACA;AACA;AACA,aAAO,IAAIte,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC5Bse,QAAAA,UAAU,CAAC,YAAM;AACb,iBAAO,OAAI,CAACjP,YAAL,CAAkBkP,eAAlB,CAAkC,QAAlC,EAA4Cje,IAA5C,CAAiD,YAAM;AAC1D,gBAAI+d,QAAJ,EAAc;AACV,cAAA,OAAI,CAAC7a,SAAL,IAAkB,IAAlB,GAAyB,OAAI,CAACgb,UAAL,EAAzB,GAA6C,OAAI,CAACC,UAAL,EAA7C;AACH;;AACDze,YAAAA,OAAO;AACV,WALM,CAAP;AAMH,SAPS,CAAV;AAQH,OATM,CAAP;AAUH;AArQgB;AAAA;AAAA,WAsQjB,yBAAgBgF,OAAhB,EAAyB;AACrB,UAAIA,OAAO,CAAC,UAAD,CAAP,IAAuB,IAAvB,IAA+BA,OAAO,CAAC,WAAD,CAAP,IAAwB,IAAvD,IACA,CAACA,OAAO,CAAC,WAAD,CADZ,EAC2B;AACvB;AACA;AACH,OALoB,CAMrB;;;AACA,UAAI,eAAeA,OAAnB,EAA4B;AACxB,aAAKwZ,UAAL;;AACA;AACH;;AACD,UAAI,OAAO,KAAKnY,QAAZ,KAAyB,QAAzB,IAAqC,OAAO,KAAKE,SAAZ,KAA0B,QAAnE,EAA6E;AACzE;AACH;;AACD,WAAKkY,UAAL;AACH;AArRgB;AAAA;AAAA,WAsRjB,sBAAa;AACT,UAAIC,SAAS,GAAG;AACZtY,QAAAA,GAAG,EAAE,KAAKC,QADE;AAEZC,QAAAA,GAAG,EAAE,KAAKC;AAFE,OAAhB;;AAIA,UAAI,KAAK0U,UAAT,EAAqB;AACjB,aAAK5L,YAAL,CAAkBlM,KAAlB,CAAwBub,SAAxB;AACH,OAFD,MAGK;AACD,aAAKrP,YAAL,CAAkBzM,SAAlB,CAA4B8b,SAA5B;AACH;AACJ;AAjSgB;AAAA;AAAA,WAkSjB,sBAAa;AACT,cAAQ,KAAKlb,SAAb;AACI,aAAK,IAAL;AACI,eAAKmb,4BAAL;;AACA;;AACJ,aAAK,KAAL;AACI,cAAI,KAAKX,sBAAT,EAAiC;AAC7B,iBAAKA,sBAAL,CAA4B/T,WAA5B;AACH;;AACD;;AACJ;AACI,eAAK0E,aAAL,CAAmB,KAAKnL,SAAxB,EAAmC,KAAKob,gBAAxC;;AAVR;AAYH;AA/SgB;AAAA;AAAA,WAgTjB,wCAA+B;AAAA;;AAC3B,WAAK/e,KAAL,CAAWO,iBAAX,CAA6B,YAAM;AAC/B,QAAA,OAAI,CAAC4d,sBAAL,GAA8B,OAAI,CAACzP,iBAAL,CAAuBsQ,UAAvB,GAAoCjV,SAApC,CAA8C,UAAAkE,CAAC,EAAI;AAC7E,UAAA,OAAI,CAACjO,KAAL,CAAW2C,GAAX,CAAe;AAAA,mBAAM,OAAI,CAACmM,aAAL,CAAmBb,CAAnB,EAAsB,OAAI,CAAC8Q,gBAA3B,CAAN;AAAA,WAAf;AACH,SAF6B,CAA9B;AAGH,OAJD;AAKH;AAtTgB;AAAA;AAAA,WAuTjB,uBAAchR,MAAd,EAAsBrK,OAAtB,EAA+B;AAC3B,UAAI,CAACqK,MAAL,EAAa;AACT;AACH;;AACD,UAAI,KAAKkR,sBAAL,CAA4BlR,MAA5B,KAAuC,OAAOrN,MAAP,KAAkB,WAAzD,IAAwEA,MAAxE,IAAkFA,MAAM,CAACC,IAAzF,IAAiGD,MAAM,CAACC,IAAP,CAAYqN,YAAjH,EAA+H;AAC3H,YAAMkR,SAAS,GAAG,IAAIxe,MAAM,CAACC,IAAP,CAAYqN,YAAhB,EAAlB;AACAkR,QAAAA,SAAS,CAACC,KAAV,CAAgBpR,MAAhB;AACAA,QAAAA,MAAM,GAAGmR,SAAT;AACH;;AACD,UAAI,KAAK9D,UAAT,EAAqB;AACjB,aAAK5L,YAAL,CAAkB5L,WAAlB,CAA8BmK,MAA9B,EAAsCrK,OAAtC;;AACA;AACH;;AACD,WAAK8L,YAAL,CAAkB7L,SAAlB,CAA4BoK,MAA5B,EAAoCrK,OAApC;AACH;AArUgB;AAAA;AAAA,WAsUjB,gCAAuBqK,MAAvB,EAA+B;AAC3B,aAAOA,MAAM,IAAI,IAAV,IAAkBA,MAAM,CAACG,MAAP,KAAkBkR,SAA3C;AACH;AAxUgB;AAAA;AAAA,WAyUjB,kCAAyB;AAAA;;AACrB,UAAMjV,CAAC,GAAG,KAAKqF,YAAL,CAAkB6P,mBAAlB,CAAsC,gBAAtC,EAAwDtV,SAAxD,CAAkE,YAAM;AAC9E,QAAA,OAAI,CAACyF,YAAL,CAAkBnM,SAAlB,GAA8B5C,IAA9B,CAAmC,UAAC6F,MAAD,EAAY;AAC3C,UAAA,OAAI,CAACE,QAAL,GAAgBF,MAAM,CAACC,GAAP,EAAhB;AACA,UAAA,OAAI,CAACG,SAAL,GAAiBJ,MAAM,CAACG,GAAP,EAAjB;;AACA,UAAA,OAAI,CAACwB,YAAL,CAAkBgC,IAAlB,CAAuB;AAAE1D,YAAAA,GAAG,EAAE,OAAI,CAACC,QAAZ;AAAsBC,YAAAA,GAAG,EAAE,OAAI,CAACC;AAAhC,WAAvB;AACH,SAJD;AAKH,OANS,CAAV;;AAOA,WAAKqV,wBAAL,CAA8BlS,IAA9B,CAAmCM,CAAnC;AACH;AAlVgB;AAAA;AAAA,WAmVjB,+BAAsB;AAAA;;AAClB,UAAMA,CAAC,GAAG,KAAKqF,YAAL,CAAkB6P,mBAAlB,CAAsC,gBAAtC,EAAwDtV,SAAxD,CAAkE,YAAM;AAC9E,QAAA,OAAI,CAACyF,YAAL,CAAkBvM,SAAlB,GAA8BxC,IAA9B,CAAmC,UAACsN,MAAD,EAAY;AAAE,UAAA,OAAI,CAACoO,YAAL,CAAkBlS,IAAlB,CAAuB8D,MAAvB;AAAiC,SAAlF;AACH,OAFS,CAAV;;AAGA,WAAKgO,wBAAL,CAA8BlS,IAA9B,CAAmCM,CAAnC;AACH;AAxVgB;AAAA;AAAA,WAyVjB,kCAAyB;AAAA;;AACrB,UAAMA,CAAC,GAAG,KAAKqF,YAAL,CAAkB6P,mBAAlB,CAAsC,mBAAtC,EAA2DtV,SAA3D,CAAqE,YAAM;AACjF,QAAA,OAAI,CAACyF,YAAL,CAAkBtM,YAAlB,GAAiCzC,IAAjC,CAAsC,UAACib,SAAD,EAAe;AAAE,UAAA,OAAI,CAACU,eAAL,CAAqBnS,IAArB,CAA0ByR,SAA1B;AAAuC,SAA9F;AACH,OAFS,CAAV;;AAGA,WAAKK,wBAAL,CAA8BlS,IAA9B,CAAmCM,CAAnC;AACH;AA9VgB;AAAA;AAAA,WA+VjB,gCAAuB;AAAA;;AACnB,UAAMA,CAAC,GAAG,KAAKqF,YAAL,CAAkB6P,mBAAlB,CAAsC,cAAtC,EAAsDtV,SAAtD,CAAgE,YAAM;AAC5E,QAAA,OAAI,CAACyF,YAAL,CAAkBxM,OAAlB,GAA4BvC,IAA5B,CAAiC,UAAC6e,CAAD,EAAO;AACpC,UAAA,OAAI,CAACnc,IAAL,GAAYmc,CAAZ;;AACA,UAAA,OAAI,CAAChD,UAAL,CAAgBrS,IAAhB,CAAqBqV,CAArB;AACH,SAHD;AAIH,OALS,CAAV;;AAMA,WAAKvD,wBAAL,CAA8BlS,IAA9B,CAAmCM,CAAnC;AACH;AAvWgB;AAAA;AAAA,WAwWjB,4BAAmB;AAAA;;AACf,UAAMA,CAAC,GAAG,KAAKqF,YAAL,CAAkB6P,mBAAlB,CAAsC,MAAtC,EAA8CtV,SAA9C,CAAwD,YAAM;AAAE,QAAA,OAAI,CAACsS,IAAL,CAAUpS,IAAV,CAAe,KAAK,CAApB;AAAyB,OAAzF,CAAV;;AACA,WAAK8R,wBAAL,CAA8BlS,IAA9B,CAAmCM,CAAnC;AACH;AA3WgB;AAAA;AAAA,WA4WjB,mCAA0B;AAAA;;AACtB,UAAMA,CAAC,GAAG,KAAKqF,YAAL,CAAkB6P,mBAAlB,CAAsC,aAAtC,EAAqDtV,SAArD,CAA+D;AAAA,eAAM,OAAI,CAACyS,WAAL,CAAiBvS,IAAjB,CAAsB,KAAK,CAA3B,CAAN;AAAA,OAA/D,CAAV;;AACA,WAAK8R,wBAAL,CAA8BlS,IAA9B,CAAmCM,CAAnC;AACH;AA/WgB;AAAA;AAAA,WAgXjB,iCAAwB;AAAA;;AACpB,UAAMR,MAAM,GAAG,CACX;AAAE4C,QAAAA,IAAI,EAAE,OAAR;AAAiBgT,QAAAA,OAAO,EAAE,KAAKvD;AAA/B,OADW,EAEX;AAAEzP,QAAAA,IAAI,EAAE,YAAR;AAAsBgT,QAAAA,OAAO,EAAE,KAAKtD;AAApC,OAFW,EAGX;AAAE1P,QAAAA,IAAI,EAAE,UAAR;AAAoBgT,QAAAA,OAAO,EAAE,KAAKrD;AAAlC,OAHW,CAAf;AAKAvS,MAAAA,MAAM,CAACF,OAAP,CAAe,UAAC7B,CAAD,EAAO;AAClB,YAAMuC,CAAC,GAAG,OAAI,CAACqF,YAAL,CAAkB6P,mBAAlB,CAAsCzX,CAAC,CAAC2E,IAAxC,EAA8CxC,SAA9C,CAAwD,UAAClH,KAAD,EAAW;AACzE,cAAImH,KAAK,GAAG;AACRE,YAAAA,MAAM,EAAE;AACJ3D,cAAAA,GAAG,EAAE1D,KAAK,CAACV,MAAN,CAAaoE,GAAb,EADD;AAEJE,cAAAA,GAAG,EAAE5D,KAAK,CAACV,MAAN,CAAasE,GAAb;AAFD,aADA;AAKR+Y,YAAAA,OAAO,EAAE3c,KAAK,CAAC2c;AALP,WAAZ,CADyE,CAQzE;;AACA,cAAIxV,KAAK,CAACwV,OAAN,IAAiB,CAAC,OAAI,CAAC5D,qBAA3B,EAAkD;AAC9C/Y,YAAAA,KAAK,CAAC4c,IAAN;AACH;;AACD7X,UAAAA,CAAC,CAAC2X,OAAF,CAAUtV,IAAV,CAAeD,KAAf;AACH,SAbS,CAAV;;AAcA,QAAA,OAAI,CAAC+R,wBAAL,CAA8BlS,IAA9B,CAAmCM,CAAnC;AACH,OAhBD;AAiBH;AAvYgB;;AAAA;AAAA,GAArB;;AAyYAyQ,MAAM,CAACpb,IAAP,GAAc,SAASkgB,cAAT,CAAwBhgB,CAAxB,EAA2B;AAAE,SAAO,KAAKA,CAAC,IAAIkb,MAAV,EAAkBvb,MAAM,CAACmG,iBAAP,CAAyBnG,MAAM,CAACnC,UAAhC,CAAlB,EAA+DmC,MAAM,CAACmG,iBAAP,CAAyB1F,oBAAzB,CAA/D,EAA+GT,MAAM,CAACmG,iBAAP,CAAyBnI,WAAzB,CAA/G,EAAsJgC,MAAM,CAACmG,iBAAP,CAAyB8H,gBAAzB,CAAtJ,EAAkMjO,MAAM,CAACmG,iBAAP,CAAyBnG,MAAM,CAACzC,MAAhC,CAAlM,CAAP;AAAoP,CAA/R;;AACAge,MAAM,CAAC3H,IAAP,GAAc,aAAc5T,MAAM,CAAC6T,iBAAP,CAAyB;AAAElP,EAAAA,IAAI,EAAE4W,MAAR;AAAgBjV,EAAAA,SAAS,EAAE,CAAC,CAAC,SAAD,CAAD,CAA3B;AAA0Cga,EAAAA,QAAQ,EAAE,CAApD;AAAuDC,EAAAA,YAAY,EAAE,SAASC,mBAAT,CAA6BpM,EAA7B,EAAiCC,GAAjC,EAAsC;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACtKpU,MAAAA,MAAM,CAACygB,WAAP,CAAmB,2BAAnB,EAAgD,IAAhD;AACH;AAAE,GAF8C;AAE5Cla,EAAAA,MAAM,EAAE;AAAEc,IAAAA,SAAS,EAAE,WAAb;AAA0BF,IAAAA,QAAQ,EAAE,UAApC;AAAgDrD,IAAAA,IAAI,EAAE,MAAtD;AAA8DyD,IAAAA,SAAS,EAAE,CAAC,cAAD,EAAiB,WAAjB,CAAzE;AAAwGmU,IAAAA,sBAAsB,EAAE,wBAAhI;AAA0JC,IAAAA,gBAAgB,EAAE,kBAA5K;AAAgMC,IAAAA,WAAW,EAAE,aAA7M;AAA4NC,IAAAA,iBAAiB,EAAE,mBAA/O;AAAoQC,IAAAA,MAAM,EAAE,QAA5Q;AAAsRC,IAAAA,UAAU,EAAE,YAAlS;AAAgTzX,IAAAA,SAAS,EAAE,WAA3T;AAAwU0X,IAAAA,YAAY,EAAE,cAAtV;AAAsWC,IAAAA,cAAc,EAAE,gBAAtX;AAAwYC,IAAAA,UAAU,EAAE,YAApZ;AAAkaC,IAAAA,aAAa,EAAE,eAAjb;AAAkcC,IAAAA,iBAAiB,EAAE,mBAArd;AAA0eC,IAAAA,SAAS,EAAE,WAArf;AAAkgBC,IAAAA,cAAc,EAAE,gBAAlhB;AAAoiBC,IAAAA,qBAAqB,EAAE,uBAA3jB;AAAolBC,IAAAA,eAAe,EAAE,iBAArmB;AAAwnBC,IAAAA,IAAI,EAAE,MAA9nB;AAAsoBc,IAAAA,OAAO,EAAE,SAA/oB;AAA0pBC,IAAAA,OAAO,EAAE,SAAnqB;AAA8qBC,IAAAA,WAAW,EAAE,aAA3rB;AAA0sBC,IAAAA,eAAe,EAAE,iBAA3tB;AAA8uBC,IAAAA,eAAe,EAAE,iBAA/vB;AAAkxBC,IAAAA,cAAc,EAAE,gBAAlyB;AAAozBC,IAAAA,WAAW,EAAE,aAAj0B;AAAg1BC,IAAAA,kBAAkB,EAAE,oBAAp2B;AAA03BC,IAAAA,iBAAiB,EAAE,mBAA74B;AAAk6BC,IAAAA,wBAAwB,EAAE,0BAA57B;AAAw9B0B,IAAAA,gBAAgB,EAAE,kBAA1+B;AAA8/BzB,IAAAA,mBAAmB,EAAE,qBAAnhC;AAA0iCC,IAAAA,qBAAqB,EAAE,uBAAjkC;AAA0lCC,IAAAA,iBAAiB,EAAE,mBAA7mC;AAAkoCC,IAAAA,oBAAoB,EAAE,sBAAxpC;AAAgrCC,IAAAA,wBAAwB,EAAE,0BAA1sC;AAAsuCC,IAAAA,WAAW,EAAE;AAAnvC,GAFoC;AAEguCpT,EAAAA,OAAO,EAAE;AAAEyR,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,aAAa,EAAE,eAAvC;AAAwDC,IAAAA,WAAW,EAAE,aAArE;AAAoFjU,IAAAA,YAAY,EAAE,cAAlG;AAAkHkU,IAAAA,YAAY,EAAE,cAAhI;AAAgJC,IAAAA,eAAe,EAAE,iBAAjK;AAAoLC,IAAAA,IAAI,EAAE,MAA1L;AAAkMC,IAAAA,UAAU,EAAE,YAA9M;AAA4NC,IAAAA,QAAQ,EAAE,UAAtO;AAAkPC,IAAAA,WAAW,EAAE;AAA/P,GAFzuC;AAEy/C3W,EAAAA,QAAQ,EAAE,CAACxG,MAAM,CAAC0gB,kBAAP,CAA0B,CACvkD9Z,aADukD,EAEvkDyE,gBAFukD,EAGvkDA,gBAHukD,EAIvkD4C,gBAJukD,EAKvkDxN,oBALukD,EAMvkDkR,iBANukD,EAOvkDiD,eAPukD,EAQvkDhQ,YARukD,EASvkDsL,aATukD,EAUvkDiH,cAVukD,EAWvkDuB,eAXukD,EAYvkDgC,gBAZukD,CAA1B,CAAD,EAa5iD1a,MAAM,CAACyG,oBAbqiD,CAFngD;AAeXqN,EAAAA,kBAAkB,EAAE7T,GAfT;AAec8T,EAAAA,KAAK,EAAE,CAfrB;AAewBC,EAAAA,IAAI,EAAE,CAf9B;AAeiCC,EAAAA,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,yBAAJ,EAA+B,iCAA/B,CAAD,EAAoE,CAAC,CAAD,EAAI,iBAAJ,CAApE,CAfzC;AAesIC,EAAAA,QAAQ,EAAE,SAASyM,eAAT,CAAyBvM,EAAzB,EAA6BC,GAA7B,EAAkC;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AAC7OpU,MAAAA,MAAM,CAACsU,eAAP;AACAtU,MAAAA,MAAM,CAAC4gB,SAAP,CAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;AACA5gB,MAAAA,MAAM,CAACuU,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACAvU,MAAAA,MAAM,CAACwU,YAAP,CAAoB,CAApB;AACAxU,MAAAA,MAAM,CAACyU,YAAP;AACH;AAAE,GArB8C;AAqB5CqH,EAAAA,MAAM,EAAE,CAAC,4KAAD;AArBoC,CAAzB,CAA5B;AAsBA;AACA;AACA;;AACAP,MAAM,CAAC0D,qBAAP,GAA+B,CAC3B,wBAD2B,EACD,aADC,EACc,WADd,EAC2B,iBAD3B,EAC8C,gBAD9C,EAE3B,mBAF2B,EAEN,aAFM,EAES,oBAFT,EAE+B,QAF/B,EAEyC,mBAFzC,EAG3B,0BAH2B,EAGC,MAHD,EAGS,gBAHT,EAG2B,uBAH3B,EAGoD,SAHpD,EAI3B,SAJ2B,EAIhB,YAJgB,EAIF,mBAJE,EAImB,eAJnB,EAIoC,sBAJpC,EAK3B,mBAL2B,EAKN,0BALM,EAKsB,cALtB,EAKsC,qBALtC,EAM3B,WAN2B,EAMd,gBANc,EAMI,iBANJ,EAMuB,MANvB,EAM+B,aAN/B,CAA/B;;AAQA1D,MAAM,CAAC7W,cAAP,GAAwB;AAAA,SAAM,CAC1B;AAAEC,IAAAA,IAAI,EAAE9G;AAAR,GAD0B,EAE1B;AAAE8G,IAAAA,IAAI,EAAElE;AAAR,GAF0B,EAG1B;AAAEkE,IAAAA,IAAI,EAAE+B,MAAR;AAAgBuJ,IAAAA,UAAU,EAAE,CAAC;AAAEtL,MAAAA,IAAI,EAAE5G,MAAR;AAAgB8iB,MAAAA,IAAI,EAAE,CAAC7iB,WAAD;AAAtB,KAAD;AAA5B,GAH0B,EAI1B;AAAE2G,IAAAA,IAAI,EAAEsJ;AAAR,GAJ0B,EAK1B;AAAEtJ,IAAAA,IAAI,EAAEpH;AAAR,GAL0B,CAAN;AAAA,CAAxB;;AAOAL,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,WAHX,EAGwB,KAAK,CAH7B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,UAHX,EAGuB,KAAK,CAH5B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,MAHX,EAGmB,KAAK,CAHxB,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPoQ,MAAM,CAAC5U,SAHA,EAGW,SAHX,EAGsB,KAAK,CAH3B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPoQ,MAAM,CAAC5U,SAHA,EAGW,SAHX,EAGsB,KAAK,CAH3B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPoQ,MAAM,CAAC5U,SAHA,EAGW,aAHX,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,CAAC,cAAD,CADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,WAHX,EAGwB,KAAK,CAH7B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,wBAHX,EAGqC,KAAK,CAH1C,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,kBAHX,EAG+B,KAAK,CAHpC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,aAHX,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPmQ,MAAM,CAAC5U,SAHA,EAGW,iBAHX,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPmQ,MAAM,CAAC5U,SAHA,EAGW,iBAHX,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPmQ,MAAM,CAAC5U,SAHA,EAGW,gBAHX,EAG6B,KAAK,CAHlC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,mBAHX,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBwX,OAAhB,CAFH,CAAD,EAGP4G,MAAM,CAAC5U,SAHA,EAGW,aAHX,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,oBAHX,EAGiC,KAAK,CAHtC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgB2jB,KAAhB,CAFH,CAAD,EAGPvF,MAAM,CAAC5U,SAHA,EAGW,QAHX,EAGqB,KAAK,CAH1B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,YAHX,EAGyB,KAAK,CAH9B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBwX,OAAhB,CAFH,CAAD,EAGP4G,MAAM,CAAC5U,SAHA,EAGW,mBAHX,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,0BAHX,EAGuC,KAAK,CAH5C,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,WAHX,EAGwB,KAAK,CAH7B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,kBAHX,EAG+B,KAAK,CAHpC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,cAHX,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,qBAHX,EAGkC,KAAK,CAHvC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,gBAHX,EAG6B,KAAK,CAHlC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,uBAHX,EAGoC,KAAK,CAHzC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,YAHX,EAGyB,KAAK,CAH9B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,mBAHX,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,eAHX,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,sBAHX,EAGmC,KAAK,CAHxC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,mBAHX,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,0BAHX,EAGuC,KAAK,CAH5C,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPmQ,MAAM,CAAC5U,SAHA,EAGW,WAHX,EAGwB,KAAK,CAH7B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,gBAHX,EAG6B,KAAK,CAHlC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,uBAHX,EAGoC,KAAK,CAHzC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPmQ,MAAM,CAAC5U,SAHA,EAGW,iBAHX,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,MAHX,EAGmB,KAAK,CAHxB,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP6U,MAAM,CAAC5U,SAHA,EAGW,aAHX,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGP6d,MAAM,CAAC5U,SAHA,EAGW,UAHX,EAGuB,KAAK,CAH5B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGP6d,MAAM,CAAC5U,SAHA,EAGW,eAHX,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGP6d,MAAM,CAAC5U,SAHA,EAGW,aAHX,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGP6d,MAAM,CAAC5U,SAHA,EAGW,cAHX,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGP6d,MAAM,CAAC5U,SAHA,EAGW,cAHX,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGP6d,MAAM,CAAC5U,SAHA,EAGW,iBAHX,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGP6d,MAAM,CAAC5U,SAHA,EAGW,MAHX,EAGmB,KAAK,CAHxB,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGP6d,MAAM,CAAC5U,SAHA,EAGW,YAHX,EAGyB,KAAK,CAH9B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGP6d,MAAM,CAAC5U,SAHA,EAGW,UAHX,EAGuB,KAAK,CAH5B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGP6d,MAAM,CAAC5U,SAHA,EAGW,aAHX,EAG0B,KAAK,CAH/B,CAAV;;AAIA4U,MAAM,GAAGD,QAAQ,GAAGpe,UAAU,CAAC,CAAEE,OAAO,CAAC,CAAD,EAAIW,MAAM,CAACC,WAAD,CAAV,CAAT,EAC3Bb,UAAU,CAAC,mBAAD,EAAsB,CAACU,UAAD,EAC5B4C,oBAD4B,EAE5BiG,MAF4B,EAG5BuH,gBAH4B,EAI5B1Q,MAJ4B,CAAtB,CADiB,CAAD,EAM3Bge,MAN2B,CAA9B;AAQA,IAAIwF,WAAJ;AACA,IAAIC,QAAQ,GAAG,CAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,SAAS,GAAGF,WAAW;AACvB,qBAAYnP,cAAZ,EAA4B;AAAA;;AACxB,SAAKA,cAAL,GAAsBA,cAAtB;AACA;AACR;AACA;AACQ;;AACA,SAAKrK,SAAL,GAAiB,KAAjB;AACA;AACR;AACA;;AACQ,SAAK3E,OAAL,GAAe,IAAf;AACA;AACR;AACA;;AACQ,SAAKse,cAAL,GAAsB,IAAtB;AACA;AACR;AACA;;AACQ,SAAKlQ,OAAL,GAAe,CAAf;AACA;AACR;AACA;AACA;AACA;AACA;;AACQ,SAAKjJ,MAAL,GAAc,CAAd;AACA;AACR;AACA;AACQ;;AACA,SAAKT,SAAL,GAAiB,IAAjB;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAK6Z,eAAL,GAAuB,IAAIzjB,YAAJ,EAAvB;AACA;AACR;AACA;;AACQ,SAAK0jB,WAAL,GAAmB,IAAI1jB,YAAJ,EAAnB;AACA;AACR;AACA;;AACQ,SAAK2jB,cAAL,GAAsB,IAAI3jB,YAAJ,EAAtB;AACA;AACR;AACA;;AACQ,SAAK4jB,gBAAL,GAAwB,IAAI5jB,YAAJ,EAAxB;AACA;AACR;AACA;;AACQ,SAAKuL,SAAL,GAAiB,IAAIvL,YAAJ,EAAjB;AACA;AACR;AACA;;AACQ,SAAKqL,IAAL,GAAY,IAAIrL,YAAJ,EAAZ;AACA;AACR;AACA;;AACQ,SAAKsL,OAAL,GAAe,IAAItL,YAAJ,EAAf;AACA;AACR;AACA;;AACQ,SAAK2L,SAAL,GAAiB,IAAI3L,YAAJ,EAAjB;AACA;AACR;AACA;;AACQ,SAAK0L,QAAL,GAAgB,IAAI1L,YAAJ,EAAhB;AACA;;AACA,SAAKoU,UAAL,GAAkB,IAAI7T,SAAJ,EAAlB;AACA,SAAKsjB,oBAAL,GAA4B,KAA5B;AACA,SAAK7E,wBAAL,GAAgC,EAAhC;AACA,SAAK8E,kBAAL,GAA0B,IAAIviB,aAAJ,CAAkB,CAAlB,CAA1B;AACA,SAAK0G,GAAL,GAAW,CAACqb,QAAQ,EAAT,EAAapb,QAAb,EAAX;AACH;AACD;;;AA7EuB;AAAA;AAAA,WA8EvB,8BAAqB;AAAA;;AACjB,WAAK6b,sBAAL;AACA,WAAK3P,UAAL,CAAgBhM,OAAhB,CAAwB4E,SAAxB,CAAkC;AAAA,eAAM,OAAI,CAAC+W,sBAAL,EAAN;AAAA,OAAlC;AACH;AAjFsB;AAAA;AAAA,WAkFvB,kCAAyB;AAAA;;AACrB,UAAI,KAAK3P,UAAL,CAAgBzH,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,cAAM,IAAIqX,KAAJ,CAAU,wCAAV,CAAN;AACH;;AACD,WAAK5P,UAAL,CAAgB1H,OAAhB,CAAwB,UAAAmG,MAAM,EAAI;AAC9BA,QAAAA,MAAM,CAAC4B,UAAP,GAAoB,OAApB;AACH,OAFD;AAGH;AACD;;AA1FuB;AAAA;AAAA,WA2FvB,qBAAYrM,OAAZ,EAAqB;AACjB,UAAI,OAAO,KAAKqB,QAAZ,KAAyB,QAA7B,EAAuC;AACnC,aAAKA,QAAL,GAAgBgE,MAAM,CAAC,KAAKhE,QAAN,CAAtB;AACH;;AACD,UAAI,OAAO,KAAKE,SAAZ,KAA0B,QAA9B,EAAwC;AACpC,aAAKA,SAAL,GAAiB8D,MAAM,CAAC,KAAK9D,SAAN,CAAvB;AACH;;AACD,UAAI,OAAO,KAAKF,QAAZ,KAAyB,QAAzB,IAAqC,OAAO,KAAKE,SAAZ,KAA0B,QAAnE,EAA6E;AACzE;AACH;;AACD,UAAI,CAAC,KAAKka,oBAAV,EAAgC;AAC5B,aAAK3P,cAAL,CAAoB+P,SAApB,CAA8B,IAA9B;;AACA,aAAKC,uBAAL;;AACA,aAAKL,oBAAL,GAA4B,IAA5B;;AACA,aAAKvU,kBAAL;;AACA;AACH;;AACD,UAAIlH,OAAO,CAAC,UAAD,CAAP,IAAuBA,OAAO,CAAC,WAAD,CAAlC,EAAiD;AAC7C,aAAK8L,cAAL,CAAoBiQ,oBAApB,CAAyC,IAAzC;;AACA,aAAKD,uBAAL;AACH;;AACD,UAAI9b,OAAO,CAAC,OAAD,CAAX,EAAsB;AAClB,aAAK8L,cAAL,CAAoBkQ,WAApB,CAAgC,IAAhC;AACH;;AACD,UAAIhc,OAAO,CAAC,OAAD,CAAX,EAAsB;AAClB,aAAK8L,cAAL,CAAoBmQ,WAApB,CAAgC,IAAhC;AACH;;AACD,UAAIjc,OAAO,CAAC,WAAD,CAAX,EAA0B;AACtB,aAAK8L,cAAL,CAAoBoQ,eAApB,CAAoC,IAApC;AACH;;AACD,UAAIlc,OAAO,CAAC,SAAD,CAAX,EAAwB;AACpB,aAAK8L,cAAL,CAAoBqQ,UAApB,CAA+B,IAA/B;AACH;;AACD,UAAInc,OAAO,CAAC,SAAD,CAAX,EAAwB;AACpB,aAAK8L,cAAL,CAAoBsQ,aAApB,CAAkC,IAAlC;AACH;;AACD,UAAIpc,OAAO,CAAC,SAAD,CAAX,EAAwB;AACpB,aAAK8L,cAAL,CAAoBuQ,aAApB,CAAkC,IAAlC;AACH;;AACD,UAAIrc,OAAO,CAAC,QAAD,CAAX,EAAuB;AACnB,aAAK8L,cAAL,CAAoBwQ,YAApB,CAAiC,IAAjC;AACH;;AACD,UAAItc,OAAO,CAAC,WAAD,CAAX,EAA0B;AACtB,aAAK8L,cAAL,CAAoByQ,eAApB,CAAoC,IAApC;AACH;;AACD,UAAIvc,OAAO,CAAC,WAAD,CAAX,EAA0B;AACtB,aAAK8L,cAAL,CAAoB0Q,eAApB,CAAoC,IAApC;AACH;AACJ;AACD;;AA5IuB;AAAA;AAAA,WA6IvB,gCAAuB;AACnB,aAAO,KAAKd,kBAAL,CAAwBe,YAAxB,EAAP;AACH;AA/IsB;AAAA;AAAA,WAgJvB,mCAA0B;AACtB,WAAKf,kBAAL,CAAwBje,IAAxB,CAA6B;AAAET,QAAAA,MAAM,EAAE;AAAEoE,UAAAA,GAAG,EAAE,KAAKC,QAAZ;AAAsBC,UAAAA,GAAG,EAAE,KAAKC;AAAhC;AAAV,OAA7B;AACH;AAlJsB;AAAA;AAAA,WAmJvB,8BAAqB;AAAA;;AACjB,UAAMmb,EAAE,GAAG,KAAK5Q,cAAL,CAAoBnH,qBAApB,CAA0C,OAA1C,EAAmD,IAAnD,EAAyDC,SAAzD,CAAmE,YAAM;AAChF,YAAI,OAAI,CAACwW,cAAT,EAAyB;AACrB,UAAA,OAAI,CAACpP,UAAL,CAAgB1H,OAAhB,CAAwB,UAAA0H,UAAU;AAAA,mBAAIA,UAAU,CAACO,IAAX,EAAJ;AAAA,WAAlC;AACH;;AACD,QAAA,OAAI,CAAC+O,WAAL,CAAiBxW,IAAjB,CAAsB,OAAtB;AACH,OALU,CAAX;;AAMA,WAAK8R,wBAAL,CAA8BlS,IAA9B,CAAmCgY,EAAnC;;AACA,UAAMC,GAAG,GAAG,KAAK7Q,cAAL,CAAoBnH,qBAApB,CAA0C,UAA1C,EAAsD,IAAtD,EAA4DC,SAA5D,CAAsE,YAAM;AACpF,QAAA,OAAI,CAAC2W,cAAL,CAAoBzW,IAApB,CAAyB,IAAzB;AACH,OAFW,CAAZ;;AAGA,WAAK8R,wBAAL,CAA8BlS,IAA9B,CAAmCiY,GAAnC;;AACA,UAAMC,EAAE,GAAG,KAAK9Q,cAAL,CAAoBnH,qBAApB,CAA0C,YAA1C,EAAwD,IAAxD,EAA8DC,SAA9D,CAAwE,YAAM;AACrF,QAAA,OAAI,CAAC4W,gBAAL,CAAsB1W,IAAtB,CAA2B,IAA3B;AACH,OAFU,CAAX;;AAGA,WAAK8R,wBAAL,CAA8BlS,IAA9B,CAAmCkY,EAAnC;;AACA,UAAMC,EAAE,GAAG,KAAK/Q,cAAL,CAAoBnH,qBAApB,CAA0C,WAA1C,EAAuD,IAAvD,EACNC,SADM,CACI,UAACnC,CAAD,EAAO;AAClB,QAAA,OAAI,CAACU,SAAL,CAAe2B,IAAf,CAAoB;AAAEC,UAAAA,MAAM,EAAE;AAAE3D,YAAAA,GAAG,EAAEqB,CAAC,CAACzF,MAAF,CAASoE,GAAT,EAAP;AAAuBE,YAAAA,GAAG,EAAEmB,CAAC,CAACzF,MAAF,CAASsE,GAAT;AAA5B;AAAV,SAApB;AACH,OAHU,CAAX;;AAIA,WAAKsV,wBAAL,CAA8BlS,IAA9B,CAAmCmY,EAAnC;;AACA,UAAMnX,CAAC,GAAG,KAAKoG,cAAL,CAAoBnH,qBAApB,CAA0C,MAA1C,EAAkD,IAAlD,EACLC,SADK,CACK,UAACnC,CAAD,EAAO;AAClB,QAAA,OAAI,CAACQ,IAAL,CAAU6B,IAAV,CAAe;AAAEC,UAAAA,MAAM,EAAE;AAAE3D,YAAAA,GAAG,EAAEqB,CAAC,CAACzF,MAAF,CAASoE,GAAT,EAAP;AAAuBE,YAAAA,GAAG,EAAEmB,CAAC,CAACzF,MAAF,CAASsE,GAAT;AAA5B;AAAV,SAAf;AACH,OAHS,CAAV;;AAIA,WAAKsV,wBAAL,CAA8BlS,IAA9B,CAAmCgB,CAAnC;;AACA,UAAMoX,EAAE,GAAG,KAAKhR,cAAL,CAAoBnH,qBAApB,CAA0C,SAA1C,EAAqD,IAArD,EACNC,SADM,CACI,UAACnC,CAAD,EAAO;AAClB,QAAA,OAAI,CAACS,OAAL,CAAa4B,IAAb,CAAkB;AAAEC,UAAAA,MAAM,EAAE;AAAE3D,YAAAA,GAAG,EAAEqB,CAAC,CAACzF,MAAF,CAASoE,GAAT,EAAP;AAAuBE,YAAAA,GAAG,EAAEmB,CAAC,CAACzF,MAAF,CAASsE,GAAT;AAA5B;AAAV,SAAlB;AACH,OAHU,CAAX;;AAIA,WAAKsV,wBAAL,CAA8BlS,IAA9B,CAAmCoY,EAAnC;;AACA,UAAMC,KAAK,GAAG,KAAKjR,cAAL,CAAoBnH,qBAApB,CAA0C,WAA1C,EAAuD,IAAvD,EACTC,SADS,CACC,UAACnC,CAAD,EAAO;AAClB,QAAA,OAAI,CAACc,SAAL,CAAeuB,IAAf,CAAoB;AAAEC,UAAAA,MAAM,EAAE;AAAE3D,YAAAA,GAAG,EAAEqB,CAAC,CAACzF,MAAF,CAASoE,GAAT,EAAP;AAAuBE,YAAAA,GAAG,EAAEmB,CAAC,CAACzF,MAAF,CAASsE,GAAT;AAA5B;AAAV,SAApB;AACH,OAHa,CAAd;;AAIA,WAAKsV,wBAAL,CAA8BlS,IAA9B,CAAmCqY,KAAnC;;AACA,UAAMC,IAAI,GAAG,KAAKlR,cAAL,CAAoBnH,qBAApB,CAA0C,UAA1C,EAAsD,IAAtD,EACRC,SADQ,CACE,UAACnC,CAAD,EAAO;AAClB,QAAA,OAAI,CAACa,QAAL,CAAcwB,IAAd,CAAmB;AAAEC,UAAAA,MAAM,EAAE;AAAE3D,YAAAA,GAAG,EAAEqB,CAAC,CAACzF,MAAF,CAASoE,GAAT,EAAP;AAAuBE,YAAAA,GAAG,EAAEmB,CAAC,CAACzF,MAAF,CAASsE,GAAT;AAA5B;AAAV,SAAnB;AACH,OAHY,CAAb;;AAIA,WAAKsV,wBAAL,CAA8BlS,IAA9B,CAAmCsY,IAAnC;;AACA,UAAMC,MAAM,GAAG,KAAKnR,cAAL,CAAoBnH,qBAApB,CAA0C,mBAA1C,EAA+D,IAA/D,EACVC,SADU,CACA,YAAM;AACjB,QAAA,OAAI,CAACyW,eAAL,CAAqBvW,IAArB,CAA0B,OAAI,CAACwG,SAA/B;AACH,OAHc,CAAf;;AAIA,WAAKsL,wBAAL,CAA8BlS,IAA9B,CAAmCuY,MAAnC;AACH;AACD;;AAlMuB;AAAA;AAAA,WAmMvB,cAAK;AAAE,aAAO,KAAKpd,GAAZ;AAAkB;AACzB;;AApMuB;AAAA;AAAA,WAqMvB,oBAAW;AAAE,aAAO,eAAe,KAAKA,GAAL,CAASC,QAAT,EAAtB;AAA4C;AACzD;;AAtMuB;AAAA;AAAA,WAuMvB,uBAAc;AACV,WAAKgM,cAAL,CAAoBoR,YAApB,CAAiC,IAAjC,EADU,CAEV;;;AACA,WAAKtG,wBAAL,CAA8BtS,OAA9B,CAAsC,UAACU,CAAD;AAAA,eAAOA,CAAC,CAACC,WAAF,EAAP;AAAA,OAAtC;AACH;AA3MsB;;AAAA;AAAA,GAA3B;;AA6MAkW,SAAS,CAAC9gB,IAAV,GAAiB,SAAS8iB,iBAAT,CAA2B5iB,CAA3B,EAA8B;AAAE,SAAO,KAAKA,CAAC,IAAI4gB,SAAV,EAAqBjhB,MAAM,CAACmG,iBAAP,CAAyB+J,aAAzB,CAArB,CAAP;AAAuE,CAAxH;;AACA+Q,SAAS,CAAC7a,IAAV,GAAiB,aAAcpG,MAAM,CAACqG,iBAAP,CAAyB;AAAE1B,EAAAA,IAAI,EAAEsc,SAAR;AAAmB3a,EAAAA,SAAS,EAAE,CAAC,CAAC,YAAD,CAAD,CAA9B;AAAgD4c,EAAAA,cAAc,EAAE,SAASC,wBAAT,CAAkC/O,EAAlC,EAAsCC,GAAtC,EAA2C+O,QAA3C,EAAqD;AAAE,QAAIhP,EAAE,GAAG,CAAT,EAAY;AACnLpU,MAAAA,MAAM,CAACqjB,cAAP,CAAsBD,QAAtB,EAAgCtQ,aAAhC,EAA+C,CAA/C;AACH;;AAAC,QAAIsB,EAAE,GAAG,CAAT,EAAY;AACV,UAAIkP,EAAJ;;AACAtjB,MAAAA,MAAM,CAACujB,cAAP,CAAsBD,EAAE,GAAGtjB,MAAM,CAACwjB,WAAP,EAA3B,MAAqDnP,GAAG,CAACvC,UAAJ,GAAiBwR,EAAtE;AACH;AAAE,GALiD;AAK/C/c,EAAAA,MAAM,EAAE;AAAEY,IAAAA,QAAQ,EAAE,UAAZ;AAAwBE,IAAAA,SAAS,EAAE,WAAnC;AAAgDqJ,IAAAA,KAAK,EAAE,OAAvD;AAAgEE,IAAAA,KAAK,EAAE,OAAvE;AAAgFrJ,IAAAA,SAAS,EAAE,CAAC,iBAAD,EAAoB,WAApB,CAA3F;AAA6HuJ,IAAAA,OAAO,EAAE,SAAtI;AAAiJoQ,IAAAA,cAAc,EAAE,gBAAjK;AAAmLlQ,IAAAA,OAAO,EAAE,SAA5L;AAAuMpO,IAAAA,OAAO,EAAE,SAAhN;AAA2NmF,IAAAA,MAAM,EAAE,QAAnO;AAA6OqJ,IAAAA,SAAS,EAAE,WAAxP;AAAqQ9J,IAAAA,SAAS,EAAE,CAAC,iBAAD,EAAoB,WAApB;AAAhR,GALuC;AAK6Q4D,EAAAA,OAAO,EAAE;AAAEkW,IAAAA,WAAW,EAAE,aAAf;AAA8BnY,IAAAA,SAAS,EAAE,WAAzC;AAAsDF,IAAAA,IAAI,EAAE,MAA5D;AAAoEC,IAAAA,OAAO,EAAE,SAA7E;AAAwFK,IAAAA,SAAS,EAAE,WAAnG;AAAgHD,IAAAA,QAAQ,EAAE,UAA1H;AAAsI+X,IAAAA,eAAe,EAAE,iBAAvJ;AAA0KE,IAAAA,cAAc,EAAE,gBAA1L;AAA4MC,IAAAA,gBAAgB,EAAE;AAA9N,GALtR;AAK0gB9a,EAAAA,QAAQ,EAAE,CAACxG,MAAM,CAAC0gB,kBAAP,CAA0B,CAC3lB;AAAE+C,IAAAA,OAAO,EAAEzV,iBAAX;AAA8B0V,IAAAA,WAAW,EAAEvlB,UAAU,CAAC;AAAA,aAAM4iB,WAAN;AAAA,KAAD;AAArD,GAD2lB,CAA1B,CAAD,EAEhkB/gB,MAAM,CAACyG,oBAFyjB;AALphB,CAAzB,CAA/B;;AAQAwa,SAAS,CAACvc,cAAV,GAA2B;AAAA,SAAM,CAC7B;AAAEC,IAAAA,IAAI,EAAEuL;AAAR,GAD6B,CAAN;AAAA,CAA3B;;AAGAhT,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGP8V,SAAS,CAACta,SAHH,EAGc,UAHd,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGP8V,SAAS,CAACta,SAHH,EAGc,WAHd,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGP6V,SAAS,CAACta,SAHH,EAGc,OAHd,EAGuB,KAAK,CAH5B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPua,SAAS,CAACta,SAHH,EAGc,OAHd,EAGuB,KAAK,CAH5B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,CAAC,iBAAD,CADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPua,SAAS,CAACta,SAHH,EAGc,WAHd,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGP6V,SAAS,CAACta,SAHH,EAGc,SAHd,EAGyB,KAAK,CAH9B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPua,SAAS,CAACta,SAHH,EAGc,SAHd,EAGyB,KAAK,CAH9B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPua,SAAS,CAACta,SAHH,EAGc,gBAHd,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPua,SAAS,CAACta,SAHH,EAGc,SAHd,EAGyB,KAAK,CAH9B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPua,SAAS,CAACta,SAHH,EAGc,QAHd,EAGwB,KAAK,CAH7B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,CAAC,iBAAD,CADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPua,SAAS,CAACta,SAHH,EAGc,WAHd,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGP6V,SAAS,CAACta,SAHH,EAGc,WAHd,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPua,SAAS,CAACta,SAHH,EAGc,iBAHd,EAGiC,KAAK,CAHtC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPujB,SAAS,CAACta,SAHH,EAGc,aAHd,EAG6B,KAAK,CAHlC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPujB,SAAS,CAACta,SAHH,EAGc,gBAHd,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPujB,SAAS,CAACta,SAHH,EAGc,kBAHd,EAGkC,KAAK,CAHvC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPujB,SAAS,CAACta,SAHH,EAGc,WAHd,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPujB,SAAS,CAACta,SAHH,EAGc,MAHd,EAGsB,KAAK,CAH3B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPujB,SAAS,CAACta,SAHH,EAGc,SAHd,EAGyB,KAAK,CAH9B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPujB,SAAS,CAACta,SAHH,EAGc,WAHd,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPujB,SAAS,CAACta,SAHH,EAGc,UAHd,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPgB,eAAe,CAAC4U,aAAD,CADR,EAEP3V,UAAU,CAAC,aAAD,EAAgBc,SAAhB,CAFH,CAAD,EAGPgjB,SAAS,CAACta,SAHH,EAGc,YAHd,EAG4B,KAAK,CAHjC,CAAV;;AAIAsa,SAAS,GAAGF,WAAW,GAAG7jB,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAAC+S,aAAD,CAAtB,CAAZ,CAAD,EACjC+Q,SADiC,CAApC;AAGA,IAAI0C,YAAJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU,GAAGD,YAAY;AACzB,sBAAYE,eAAZ,EAA6B;AAAA;;AACzB,SAAKA,eAAL,GAAuBA,eAAvB;AACA;AACR;AACA;;AACQ,SAAKvc,SAAL,GAAiB,IAAjB;AACA;AACR;AACA;AACA;AACQ;;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA;AACR;AACA;AACA;;AACQ,SAAKC,QAAL,GAAgB,KAAhB;AACA;AACR;AACA;AACA;AACA;AACA;AACA;;AACQ,SAAKgQ,QAAL,GAAgB,KAAhB;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,SAAKC,KAAL,GAAa,EAAb;AACA;AACR;AACA;;AACQ,SAAKqM,SAAL,GAAiB,IAAIpmB,YAAJ,EAAjB;AACA;AACR;AACA;;AACQ,SAAKqmB,YAAL,GAAoB,IAAIrmB,YAAJ,EAApB;AACA;AACR;AACA;;AACQ,SAAKsmB,QAAL,GAAgB,IAAItmB,YAAJ,EAAhB;AACA;AACR;AACA;;AACQ,SAAKumB,WAAL,GAAmB,IAAIvmB,YAAJ,EAAnB;AACA;AACR;AACA;;AACQ,SAAKwmB,aAAL,GAAqB,IAAIxmB,YAAJ,EAArB;AACA;AACR;AACA;;AACQ,SAAKymB,aAAL,GAAqB,IAAIzmB,YAAJ,EAArB;AACA;AACR;AACA;;AACQ,SAAK0mB,aAAL,GAAqB,IAAI1mB,YAAJ,EAArB;AACA;AACR;AACA;;AACQ,SAAK2mB,YAAL,GAAoB,IAAI3mB,YAAJ,EAApB;AACA;AACR;AACA;;AACQ,SAAK4mB,aAAL,GAAqB,IAAI5mB,YAAJ,EAArB;AACA;AACR;AACA;;AACQ,SAAK6mB,WAAL,GAAmB,IAAI7mB,YAAJ,EAAnB;AACA;AACR;AACA;;AACQ,SAAK8mB,cAAL,GAAsB,IAAI9mB,YAAJ,EAAtB;AACA;AACR;AACA;;AACQ,SAAK+mB,eAAL,GAAuB,IAAI/mB,YAAJ,EAAvB;AACA,SAAKgnB,sBAAL,GAA8B,KAA9B;AACA,SAAK7X,cAAL,GAAsB,EAAtB;AACH;AACD;;;AAzFyB;AAAA;AAAA,WA0FzB,8BAAqB;AACjB,UAAI,CAAC,KAAK6X,sBAAV,EAAkC;AAC9B,aAAKC,KAAL;AACH;AACJ;AA9FwB;AAAA;AAAA,WA+FzB,qBAAY7e,OAAZ,EAAqB;AACjB,UAAI,CAAC,KAAK4e,sBAAV,EAAkC;AAC9B,aAAKC,KAAL;;AACA;AACH;;AACD,WAAKd,eAAL,CAAqBe,iBAArB,CAAuC,IAAvC,EAA6C,KAAKnP,qBAAL,CAA2B3P,OAA3B,CAA7C;AACH;AArGwB;AAAA;AAAA,WAsGzB,iBAAQ;AACJ,WAAK+d,eAAL,CAAqBgB,UAArB,CAAgC,IAAhC;;AACA,WAAKH,sBAAL,GAA8B,IAA9B;;AACA,WAAK1X,kBAAL;AACH;AA1GwB;AAAA;AAAA,WA2GzB,8BAAqB;AAAA;;AACjB,UAAM8X,QAAQ,GAAG,CACb;AAAE5X,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAAC0W,SAAL,CAAelZ,IAAf,CAAoBwC,EAApB,CAAR;AAAA;AAA1B,OADa,EAEb;AAAEF,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAAC2W,YAAL,CAAkBnZ,IAAlB,CAAuBwC,EAAvB,CAAR;AAAA;AAA7B,OAFa,EAGb;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAAC4W,QAAL,CAAcpZ,IAAd,CAAmBwC,EAAnB,CAAR;AAAA;AAAzB,OAHa,EAIb;AAAEF,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAAC6W,WAAL,CAAiBrZ,IAAjB,CAAsBwC,EAAtB,CAAR;AAAA;AAA5B,OAJa,EAKb;AAAEF,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAAC8W,aAAL,CAAmBtZ,IAAnB,CAAwBwC,EAAxB,CAAR;AAAA;AAA9B,OALa,EAMb;AAAEF,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAAC+W,aAAL,CAAmBvZ,IAAnB,CAAwBwC,EAAxB,CAAR;AAAA;AAA9B,OANa,EAOb;AAAEF,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAACgX,aAAL,CAAmBxZ,IAAnB,CAAwBwC,EAAxB,CAAR;AAAA;AAA9B,OAPa,EAQb;AAAEF,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAACiX,YAAL,CAAkBzZ,IAAlB,CAAuBwC,EAAvB,CAAR;AAAA;AAA7B,OARa,EASb;AAAEF,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAACkX,aAAL,CAAmB1Z,IAAnB,CAAwBwC,EAAxB,CAAR;AAAA;AAA9B,OATa,EAUb;AAAEF,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAACmX,WAAL,CAAiB3Z,IAAjB,CAAsBwC,EAAtB,CAAR;AAAA;AAA5B,OAVa,EAWb;AAAEF,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAACoX,cAAL,CAAoB5Z,IAApB,CAAyBwC,EAAzB,CAAR;AAAA;AAA/B,OAXa,CAAjB;AAaA0X,MAAAA,QAAQ,CAAC1a,OAAT,CAAiB,UAACiD,GAAD,EAAS;AACtB,YAAMC,EAAE,GAAG,OAAI,CAACuW,eAAL,CAAqBpZ,qBAArB,CAA2C4C,GAAG,CAACH,IAA/C,EAAqD,OAArD,EAA2DxC,SAA3D,CAAqE2C,GAAG,CAACF,OAAzE,CAAX;;AACA,QAAA,OAAI,CAACN,cAAL,CAAoBrC,IAApB,CAAyB8C,EAAzB;AACH,OAHD;;AAIA,WAAKuW,eAAL,CAAqBkB,yBAArB,CAA+C,IAA/C,EACK3jB,IADL,CACU,UAAA4jB,MAAM,EAAI;AAChB,YAAM1X,EAAE,GAAG0X,MAAM,CAACta,SAAP,CAAiB,UAAAua,SAAS;AAAA,iBAAI,OAAI,CAACR,eAAL,CAAqB7Z,IAArB,CAA0Bqa,SAA1B,CAAJ;AAAA,SAA1B,CAAX;;AACA,QAAA,OAAI,CAACpY,cAAL,CAAoBrC,IAApB,CAAyB8C,EAAzB;AACH,OAJD;AAKH;AAlIwB;AAAA;AAAA,WAmIzB,+BAAsBxH,OAAtB,EAA+B;AAC3B,aAAOY,MAAM,CAACqD,IAAP,CAAYjE,OAAZ,EACFkE,MADE,CACK,UAAAC,CAAC;AAAA,eAAI0Z,YAAY,CAACuB,yBAAb,CAAuC/a,OAAvC,CAA+CF,CAA/C,MAAsD,CAAC,CAA3D;AAAA,OADN,EAEF0L,MAFE,CAEK,UAACtI,GAAD,EAAMpD,CAAN,EAAY;AACpBoD,QAAAA,GAAG,CAACpD,CAAD,CAAH,GAASnE,OAAO,CAACmE,CAAD,CAAP,CAAWjE,YAApB;AACA,eAAOqH,GAAP;AACH,OALM,EAKJ,EALI,CAAP;AAMH;AACD;;AA3IyB;AAAA;AAAA,WA4IzB,cAAK;AAAE,aAAO,KAAK1H,GAAZ;AAAkB;AACzB;;AA7IyB;AAAA;AAAA,WA8IzB,uBAAc;AACV,WAAKke,eAAL,CAAqBsB,aAArB,CAAmC,IAAnC,EADU,CAEV;;;AACA,WAAKtY,cAAL,CAAoBzC,OAApB,CAA4B,UAACU,CAAD;AAAA,eAAOA,CAAC,CAACC,WAAF,EAAP;AAAA,OAA5B;AACH;AAlJwB;AAAA;AAAA,WAmJzB,mBAAU;AACN,aAAO,KAAK8Y,eAAL,CAAqBlM,OAArB,CAA6B,IAA7B,CAAP;AACH;AArJwB;AAAA;AAAA,WAsJzB,oBAAW;AACP,aAAO,KAAKkM,eAAL,CAAqBjM,QAArB,CAA8B,IAA9B,CAAP;AACH;AAxJwB;;AAAA;AAAA,GAA7B;;AA0JAgM,UAAU,CAACzjB,IAAX,GAAkB,SAASilB,kBAAT,CAA4B/kB,CAA5B,EAA+B;AAAE,SAAO,KAAKA,CAAC,IAAIujB,UAAV,EAAsB5jB,MAAM,CAACmG,iBAAP,CAAyBgR,cAAzB,CAAtB,CAAP;AAAyE,CAA5H;;AACAyM,UAAU,CAACxd,IAAX,GAAkB,aAAcpG,MAAM,CAACqG,iBAAP,CAAyB;AAAE1B,EAAAA,IAAI,EAAEif,UAAR;AAAoBtd,EAAAA,SAAS,EAAE,CAAC,CAAC,aAAD,CAAD,CAA/B;AAAkDC,EAAAA,MAAM,EAAE;AAAEe,IAAAA,SAAS,EAAE,WAAb;AAA0BC,IAAAA,SAAS,EAAE,CAAC,eAAD,EAAkB,WAAlB,CAArC;AAAqEC,IAAAA,QAAQ,EAAE,UAA/E;AAA2FgQ,IAAAA,QAAQ,EAAE,UAArG;AAAiHC,IAAAA,KAAK,EAAE,OAAxH;AAAiIhQ,IAAAA,SAAS,EAAE,WAA5I;AAAyJC,IAAAA,WAAW,EAAE,aAAtK;AAAqLE,IAAAA,WAAW,EAAE,aAAlM;AAAiNC,IAAAA,aAAa,EAAE,eAAhO;AAAiPC,IAAAA,YAAY,EAAE,cAA/P;AAA+QlF,IAAAA,OAAO,EAAE,SAAxR;AAAmSmF,IAAAA,MAAM,EAAE;AAA3S,GAA1D;AAAiXmD,EAAAA,OAAO,EAAE;AAAE4Y,IAAAA,SAAS,EAAE,WAAb;AAA0BC,IAAAA,YAAY,EAAE,cAAxC;AAAwDC,IAAAA,QAAQ,EAAE,UAAlE;AAA8EC,IAAAA,WAAW,EAAE,aAA3F;AAA0GC,IAAAA,aAAa,EAAE,eAAzH;AAA0IC,IAAAA,aAAa,EAAE,eAAzJ;AAA0KC,IAAAA,aAAa,EAAE,eAAzL;AAA0MC,IAAAA,YAAY,EAAE,cAAxN;AAAwOC,IAAAA,aAAa,EAAE,eAAvP;AAAwQC,IAAAA,WAAW,EAAE,aAArR;AAAoSC,IAAAA,cAAc,EAAE,gBAApT;AAAsUC,IAAAA,eAAe,EAAE;AAAvV,GAA1X;AAAsuBje,EAAAA,QAAQ,EAAE,CAACxG,MAAM,CAACyG,oBAAR;AAAhvB,CAAzB,CAAhC;AACAmd,UAAU,CAACsB,yBAAX,GAAuC,CACnC,WADmC,EACtB,WADsB,EACT,UADS,EACG,WADH,EACgB,aADhB,EAC+B,UAD/B,EAC2C,MAD3C,EACmD,KADnD,EAEnC,OAFmC,EAE1B,aAF0B,EAEX,eAFW,EAEM,cAFN,EAEsB,SAFtB,EAEiC,QAFjC,EAE2C,WAF3C,EAGnC,UAHmC,EAGvB,SAHuB,CAAvC;;AAKAtB,UAAU,CAAClf,cAAX,GAA4B;AAAA,SAAM,CAC9B;AAAEC,IAAAA,IAAI,EAAEwS;AAAR,GAD8B,CAAN;AAAA,CAA5B;;AAGAja,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPkd,UAAU,CAACjd,SAHJ,EAGe,WAHf,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,CAAC,eAAD,CADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPkd,UAAU,CAACjd,SAHJ,EAGe,WAHf,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPkd,UAAU,CAACjd,SAHJ,EAGe,UAHf,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPwY,UAAU,CAACjd,SAHJ,EAGe,WAHf,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPyY,UAAU,CAACjd,SAHJ,EAGe,aAHf,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPkd,UAAU,CAACjd,SAHJ,EAGe,UAHf,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgB2jB,KAAhB,CAFH,CAAD,EAGP8C,UAAU,CAACjd,SAHJ,EAGe,OAHf,EAGwB,KAAK,CAH7B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPwY,UAAU,CAACjd,SAHJ,EAGe,aAHf,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPyY,UAAU,CAACjd,SAHJ,EAGe,eAHf,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPyY,UAAU,CAACjd,SAHJ,EAGe,cAHf,EAG+B,KAAK,CAHpC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBwX,OAAhB,CAFH,CAAD,EAGPiP,UAAU,CAACjd,SAHJ,EAGe,SAHf,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPyY,UAAU,CAACjd,SAHJ,EAGe,QAHf,EAGyB,KAAK,CAH9B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPkmB,UAAU,CAACjd,SAHJ,EAGe,WAHf,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPkmB,UAAU,CAACjd,SAHJ,EAGe,cAHf,EAG+B,KAAK,CAHpC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPkmB,UAAU,CAACjd,SAHJ,EAGe,UAHf,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPkmB,UAAU,CAACjd,SAHJ,EAGe,aAHf,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPkmB,UAAU,CAACjd,SAHJ,EAGe,eAHf,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPkmB,UAAU,CAACjd,SAHJ,EAGe,eAHf,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPkmB,UAAU,CAACjd,SAHJ,EAGe,eAHf,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPkmB,UAAU,CAACjd,SAHJ,EAGe,cAHf,EAG+B,KAAK,CAHpC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPkmB,UAAU,CAACjd,SAHJ,EAGe,eAHf,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPkmB,UAAU,CAACjd,SAHJ,EAGe,aAHf,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPkmB,UAAU,CAACjd,SAHJ,EAGe,gBAHf,EAGiC,KAAK,CAHtC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPkd,UAAU,CAACjd,SAHJ,EAGe,iBAHf,EAGkC,KAAK,CAHvC,CAAV;;AAIAid,UAAU,GAAGD,YAAY,GAAGzmB,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACga,cAAD,CAAtB,CAAZ,CAAD,EACnCyM,UADmC,CAAtC;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIyB,eAAe;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACf,oBAAW;AACP,UAAI,KAAKhO,IAAL,IAAa,IAAjB,EAAuB;AACnB,cAAM,IAAIqK,KAAJ,CAAU,gCAAV,CAAN;AACH;AACJ;AALc;;AAAA;AAAA,GAAnB;;AAOA2D,eAAe,CAACllB,IAAhB,GAAuB,SAASmlB,uBAAT,CAAiCjlB,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAIglB,eAAV,GAAP;AAAsC,CAAnG;;AACAA,eAAe,CAACjf,IAAhB,GAAuB,aAAcpG,MAAM,CAACqG,iBAAP,CAAyB;AAAE1B,EAAAA,IAAI,EAAE0gB,eAAR;AAAyB/e,EAAAA,SAAS,EAAE,CAAC,CAAC,mBAAD,CAAD,CAApC;AAA6DC,EAAAA,MAAM,EAAE;AAAEqT,IAAAA,aAAa,EAAE,eAAjB;AAAkCC,IAAAA,MAAM,EAAE,QAA1C;AAAoDC,IAAAA,MAAM,EAAE,QAA5D;AAAsEG,IAAAA,OAAO,EAAE,SAA/E;AAA0FC,IAAAA,OAAO,EAAE,SAAnG;AAA8GzS,IAAAA,SAAS,EAAE,WAAzH;AAAsIC,IAAAA,WAAW,EAAE,aAAnJ;AAAkK2P,IAAAA,IAAI,EAAE,MAAxK;AAAgL+C,IAAAA,QAAQ,EAAE,UAA1L;AAAsMC,IAAAA,KAAK,EAAE,OAA7M;AAAsNzS,IAAAA,WAAW,EAAE,aAAnO;AAAkPC,IAAAA,aAAa,EAAE,eAAjQ;AAAkRC,IAAAA,YAAY,EAAE;AAAhS;AAArE,CAAzB,CAArC;;AACA5K,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBwX,OAAhB,CAFH,CAAD,EAGP0Q,eAAe,CAAC1e,SAHT,EAGoB,eAHpB,EAGqC,KAAK,CAH1C,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPia,eAAe,CAAC1e,SAHT,EAGoB,QAHpB,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPia,eAAe,CAAC1e,SAHT,EAGoB,QAHpB,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPka,eAAe,CAAC1e,SAHT,EAGoB,SAHpB,EAG+B,KAAK,CAHpC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPka,eAAe,CAAC1e,SAHT,EAGoB,SAHpB,EAG+B,KAAK,CAHpC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPia,eAAe,CAAC1e,SAHT,EAGoB,WAHpB,EAGiC,KAAK,CAHtC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPka,eAAe,CAAC1e,SAHT,EAGoB,aAHpB,EAGmC,KAAK,CAHxC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPia,eAAe,CAAC1e,SAHT,EAGoB,MAHpB,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPka,eAAe,CAAC1e,SAHT,EAGoB,UAHpB,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPka,eAAe,CAAC1e,SAHT,EAGoB,OAHpB,EAG6B,KAAK,CAHlC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPia,eAAe,CAAC1e,SAHT,EAGoB,aAHpB,EAGmC,KAAK,CAHxC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPka,eAAe,CAAC1e,SAHT,EAGoB,eAHpB,EAGqC,KAAK,CAH1C,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPka,eAAe,CAAC1e,SAHT,EAGoB,cAHpB,EAGoC,KAAK,CAHzC,CAAV;;AAKA,IAAI4e,kBAAJ;AACA;AACA;AACA;AACA;;AACA,IAAIC,gBAAgB,GAAGD,kBAAkB;AACrC,8BAAc;AAAA;;AACV;AACR;AACA;AACQ,SAAKE,eAAL,GAAuB,IAAI/nB,YAAJ,EAAvB;AACH;;AANoC;AAAA;AAAA,WAOrC,qBAAYoI,OAAZ,EAAqB;AACjB,UAAIA,OAAO,CAAC,UAAD,CAAP,IAAuBA,OAAO,CAAC,WAAD,CAAlC,EAAiD;AAC7C,YAAMyL,QAAQ,GAAG;AACbrK,UAAAA,GAAG,EAAEpB,OAAO,CAAC,UAAD,CAAP,GAAsBA,OAAO,CAAC,UAAD,CAAP,CAAoBE,YAA1C,GAAyD,KAAKmB,QADtD;AAEbC,UAAAA,GAAG,EAAEtB,OAAO,CAAC,WAAD,CAAP,GAAuBA,OAAO,CAAC,WAAD,CAAP,CAAqBE,YAA5C,GAA2D,KAAKqB;AAFxD,SAAjB;AAIA,aAAKoe,eAAL,CAAqB7a,IAArB,CAA0B2G,QAA1B;AACH;AACJ;AACD;;AAhBqC;AAAA;AAAA,WAiBrC,gCAAuB;AACnB,aAAO,KAAKkU,eAAL,CAAqBnX,IAArB,CAA0B1O,SAAS,CAAC;AAAEsH,QAAAA,GAAG,EAAE,KAAKC,QAAZ;AAAsBC,QAAAA,GAAG,EAAE,KAAKC;AAAhC,OAAD,CAAnC,EAAkF7H,GAAG,CAAC,UAAA+R,QAAQ;AAAA,eAAK;AAAEzO,UAAAA,MAAM,EAAEyO;AAAV,SAAL;AAAA,OAAT,CAArF,CAAP;AACH;AAnBoC;;AAAA;AAAA,GAAzC;;AAqBAiU,gBAAgB,CAACrlB,IAAjB,GAAwB,SAASulB,wBAAT,CAAkCrlB,CAAlC,EAAqC;AAAE,SAAO,KAAKA,CAAC,IAAImlB,gBAAV,GAAP;AAAuC,CAAtG;;AACAA,gBAAgB,CAACpf,IAAjB,GAAwB,aAAcpG,MAAM,CAACqG,iBAAP,CAAyB;AAAE1B,EAAAA,IAAI,EAAE6gB,gBAAR;AAA0Blf,EAAAA,SAAS,EAAE,CAAC,CAAC,oBAAD,CAAD,CAArC;AAA+DC,EAAAA,MAAM,EAAE;AAAEY,IAAAA,QAAQ,EAAE,UAAZ;AAAwBE,IAAAA,SAAS,EAAE;AAAnC,GAAvE;AAAyH6D,EAAAA,OAAO,EAAE;AAAEua,IAAAA,eAAe,EAAE;AAAnB,GAAlI;AAA0Kjf,EAAAA,QAAQ,EAAE,CAACxG,MAAM,CAAC0gB,kBAAP,CAA0B,CAClQ;AAAE+C,IAAAA,OAAO,EAAEzV,iBAAX;AAA8B0V,IAAAA,WAAW,EAAEvlB,UAAU,CAAC;AAAA,aAAMonB,kBAAN;AAAA,KAAD;AAArD,GADkQ,CAA1B,CAAD,EAEvOvlB,MAAM,CAACyG,oBAFgO;AAApL,CAAzB,CAAtC;;AAGAvJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPqa,gBAAgB,CAAC7e,SAHV,EAGqB,UAHrB,EAGiC,KAAK,CAHtC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPqa,gBAAgB,CAAC7e,SAHV,EAGqB,WAHrB,EAGkC,KAAK,CAHvC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGP8nB,gBAAgB,CAAC7e,SAHV,EAGqB,iBAHrB,EAGwC,KAAK,CAH7C,CAAV;;AAIA6e,gBAAgB,GAAGD,kBAAkB,GAAGroB,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,EAAtB,CAAZ,CAAD,EAC/CqoB,gBAD+C,CAAlD;AAGA,IAAIG,aAAJ;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,WAAW,GAAGF,aAAa;AAC3B,uBAAYG,gBAAZ,EAA8B;AAAA;;AAC1B,SAAKA,gBAAL,GAAwBA,gBAAxB;AACA;AACR;AACA;;AACQ,SAAKxe,SAAL,GAAiB,IAAjB;AACA;AACR;AACA;AACA;AACQ;;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA;AACR;AACA;AACA;;AACQ,SAAKC,QAAL,GAAgB,KAAhB;AACA;AACR;AACA;AACA;AACA;AACA;;AACQ,SAAKgQ,QAAL,GAAgB,KAAhB;AACA;AACR;AACA;;AACQ,SAAK5U,OAAL,GAAe,IAAf;AACA;AACR;AACA;;AACQ,SAAKmjB,SAAL,GAAiB,IAAIroB,YAAJ,EAAjB;AACA;AACR;AACA;;AACQ,SAAKsoB,YAAL,GAAoB,IAAItoB,YAAJ,EAApB;AACA;AACR;AACA;;AACQ,SAAKuoB,QAAL,GAAgB,IAAIvoB,YAAJ,EAAhB;AACA;AACR;AACA;;AACQ,SAAKwoB,WAAL,GAAmB,IAAIxoB,YAAJ,EAAnB;AACA;AACR;AACA;;AACQ,SAAKyoB,aAAL,GAAqB,IAAIzoB,YAAJ,EAArB;AACA;AACR;AACA;;AACQ,SAAK0oB,aAAL,GAAqB,IAAI1oB,YAAJ,EAArB;AACA;AACR;AACA;;AACQ,SAAK2oB,aAAL,GAAqB,IAAI3oB,YAAJ,EAArB;AACA;AACR;AACA;;AACQ,SAAK4oB,YAAL,GAAoB,IAAI5oB,YAAJ,EAApB;AACA;AACR;AACA;;AACQ,SAAK6oB,aAAL,GAAqB,IAAI7oB,YAAJ,EAArB;AACA;AACR;AACA;;AACQ,SAAK8oB,WAAL,GAAmB,IAAI9oB,YAAJ,EAAnB;AACA;AACR;AACA;;AACQ,SAAK+oB,cAAL,GAAsB,IAAI/oB,YAAJ,EAAtB;AACA;AACR;AACA;;AACQ,SAAKgpB,cAAL,GAAsB,IAAIhpB,YAAJ,EAAtB;AACA,SAAKipB,uBAAL,GAA+B,KAA/B;AACA,SAAK9Z,cAAL,GAAsB,EAAtB;AACA,SAAKlH,GAAL,GAAW,CAACigB,UAAU,EAAX,EAAehgB,QAAf,EAAX;AACH;AACD;;;AAjF2B;AAAA;AAAA,WAkF3B,8BAAqB;AAAA;;AACjB,UAAI,KAAKghB,MAAL,CAAYvc,MAAhB,EAAwB;AACpB,aAAKuc,MAAL,CAAYxc,OAAZ,CAAoB,UAACmP,KAAD,EAAW;AAC3B,cAAMzO,CAAC,GAAGyO,KAAK,CAACkM,eAAN,CAAsB/a,SAAtB,CAAgC,YAAM;AAAE,YAAA,OAAI,CAACob,gBAAL,CAAsBe,oBAAtB,CAA2C,OAA3C;AAAmD,WAA3F,CAAV;;AACA,UAAA,OAAI,CAACha,cAAL,CAAoBrC,IAApB,CAAyBM,CAAzB;AACH,SAHD;AAIH;;AACD,UAAI,CAAC,KAAK6b,uBAAV,EAAmC;AAC/B,aAAKhC,KAAL;AACH;;AACD,UAAMmC,QAAQ,GAAG,KAAKF,MAAL,CAAY9gB,OAAZ,CAAoB4E,SAApB,CAA8B;AAAA,eAAM,OAAI,CAACob,gBAAL,CAAsBe,oBAAtB,CAA2C,OAA3C,CAAN;AAAA,OAA9B,CAAjB;;AACA,WAAKha,cAAL,CAAoBrC,IAApB,CAAyBsc,QAAzB;;AACA,WAAKhB,gBAAL,CAAsBe,oBAAtB,CAA2C,IAA3C;;AACA,UAAME,OAAO,GAAG,KAAKC,aAAL,CAAmBlhB,OAAnB,CAA2B4E,SAA3B,CAAqC;AAAA,eAAM,OAAI,CAACob,gBAAL,CAAsBmB,mBAAtB,CAA0C,OAA1C,CAAN;AAAA,OAArC,CAAhB;;AACA,WAAKpa,cAAL,CAAoBrC,IAApB,CAAyBuc,OAAzB;AACH;AAjG0B;AAAA;AAAA,WAkG3B,qBAAYjhB,OAAZ,EAAqB;AACjB,UAAI,CAAC,KAAK6gB,uBAAV,EAAmC;AAC/B,aAAKhC,KAAL;;AACA;AACH;;AACD,UAAInjB,OAAO,GAAG,EAAd;AACA,UAAMsI,UAAU,GAAGpD,MAAM,CAACqD,IAAP,CAAYjE,OAAZ,EAAqBkE,MAArB,CAA4B,UAAAC,CAAC;AAAA,eAAI0b,aAAa,CAACuB,0BAAd,CAAyC/c,OAAzC,CAAiDF,CAAjD,MAAwD,CAAC,CAA7D;AAAA,OAA7B,CAAnB;AACAH,MAAAA,UAAU,CAACM,OAAX,CAAmB,UAAAH,CAAC;AAAA,eAAIzI,OAAO,CAACyI,CAAD,CAAP,GAAanE,OAAO,CAACmE,CAAD,CAAP,CAAWjE,YAA5B;AAAA,OAApB;;AACA,WAAK8f,gBAAL,CAAsBqB,kBAAtB,CAAyC,IAAzC,EAA+C3lB,OAA/C;AACH;AA3G0B;AAAA;AAAA,WA4G3B,mBAAU;AACN,aAAO,KAAKskB,gBAAL,CAAsBnO,OAAtB,CAA8B,IAA9B,CAAP;AACH;AA9G0B;AAAA;AAAA,WA+G3B,iBAAQ;AACJ,WAAKmO,gBAAL,CAAsBsB,WAAtB,CAAkC,IAAlC;;AACA,WAAKT,uBAAL,GAA+B,IAA/B;;AACA,WAAK3Z,kBAAL;AACH;AAnH0B;AAAA;AAAA,WAoH3B,8BAAqB;AAAA;;AACjB,UAAM8X,QAAQ,GAAG,CACb;AAAE5X,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAAC2Y,SAAL,CAAenb,IAAf,CAAoBwC,EAApB,CAAR;AAAA;AAA1B,OADa,EAEb;AAAEF,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAAC4Y,YAAL,CAAkBpb,IAAlB,CAAuBwC,EAAvB,CAAR;AAAA;AAA7B,OAFa,EAGb;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAAC6Y,QAAL,CAAcrb,IAAd,CAAmBwC,EAAnB,CAAR;AAAA;AAAzB,OAHa,EAIb;AAAEF,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAAC8Y,WAAL,CAAiBtb,IAAjB,CAAsBwC,EAAtB,CAAR;AAAA;AAA5B,OAJa,EAKb;AAAEF,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAAC+Y,aAAL,CAAmBvb,IAAnB,CAAwBwC,EAAxB,CAAR;AAAA;AAA9B,OALa,EAMb;AAAEF,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAACgZ,aAAL,CAAmBxb,IAAnB,CAAwBwC,EAAxB,CAAR;AAAA;AAA9B,OANa,EAOb;AAAEF,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAACiZ,aAAL,CAAmBzb,IAAnB,CAAwBwC,EAAxB,CAAR;AAAA;AAA9B,OAPa,EAQb;AAAEF,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAACkZ,YAAL,CAAkB1b,IAAlB,CAAuBwC,EAAvB,CAAR;AAAA;AAA7B,OARa,EASb;AAAEF,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAACmZ,aAAL,CAAmB3b,IAAnB,CAAwBwC,EAAxB,CAAR;AAAA;AAA9B,OATa,EAUb;AAAEF,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAACoZ,WAAL,CAAiB5b,IAAjB,CAAsBwC,EAAtB,CAAR;AAAA;AAA5B,OAVa,EAWb;AAAEF,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAQ,OAAI,CAACqZ,cAAL,CAAoB7b,IAApB,CAAyBwC,EAAzB,CAAR;AAAA;AAA/B,OAXa,CAAjB;AAaA0X,MAAAA,QAAQ,CAAC1a,OAAT,CAAiB,UAACiD,GAAD,EAAS;AACtB,YAAMC,EAAE,GAAG,OAAI,CAACwY,gBAAL,CAAsBrb,qBAAtB,CAA4C4C,GAAG,CAACH,IAAhD,EAAsD,OAAtD,EAA4DxC,SAA5D,CAAsE2C,GAAG,CAACF,OAA1E,CAAX;;AACA,QAAA,OAAI,CAACN,cAAL,CAAoBrC,IAApB,CAAyB8C,EAAzB;AACH,OAHD;;AAIA,WAAKwY,gBAAL,CAAsBf,yBAAtB,CAAgD,IAAhD,EAAsD3jB,IAAtD,CAA2D,UAACimB,GAAD,EAAS;AAChE,YAAM/Z,EAAE,GAAG+Z,GAAG,CAAC3c,SAAJ,CAAc,UAAAua,SAAS;AAAA,iBAAI,OAAI,CAACyB,cAAL,CAAoB9b,IAApB,CAAyBqa,SAAzB,CAAJ;AAAA,SAAvB,CAAX;;AACA,QAAA,OAAI,CAACpY,cAAL,CAAoBrC,IAApB,CAAyB8C,EAAzB;AACH,OAHD;AAIH;AACD;;AA3I2B;AAAA;AAAA,WA4I3B,sBAAa;AACT,UAAI,KAAKsZ,MAAT,EAAiB;AACb,eAAO,KAAKA,MAAL,CAAYU,OAAZ,EAAP;AACH;;AACD,aAAO,EAAP;AACH;AAjJ0B;AAAA;AAAA,WAkJ3B,qBAAY;AACR,UAAI,KAAKN,aAAT,EAAwB;AACpB,eAAO,KAAKA,aAAL,CAAmBM,OAAnB,EAAP;AACH;;AACD,aAAO,EAAP;AACH;AACD;;AAxJ2B;AAAA;AAAA,WAyJ3B,cAAK;AAAE,aAAO,KAAK3hB,GAAZ;AAAkB;AACzB;;AA1J2B;AAAA;AAAA,WA2J3B,uBAAc;AACV,WAAKmgB,gBAAL,CAAsByB,cAAtB,CAAqC,IAArC,EADU,CAEV;;;AACA,WAAK1a,cAAL,CAAoBzC,OAApB,CAA4B,UAACU,CAAD;AAAA,eAAOA,CAAC,CAACC,WAAF,EAAP;AAAA,OAA5B;AACH;AA/J0B;;AAAA;AAAA,GAA/B;;AAiKA8a,WAAW,CAAC1lB,IAAZ,GAAmB,SAASqnB,mBAAT,CAA6BnnB,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIwlB,WAAV,EAAuB7lB,MAAM,CAACmG,iBAAP,CAAyBuS,eAAzB,CAAvB,CAAP;AAA2E,CAAhI;;AACAmN,WAAW,CAACzf,IAAZ,GAAmB,aAAcpG,MAAM,CAACqG,iBAAP,CAAyB;AAAE1B,EAAAA,IAAI,EAAEkhB,WAAR;AAAqBvf,EAAAA,SAAS,EAAE,CAAC,CAAC,cAAD,CAAD,CAAhC;AAAoD4c,EAAAA,cAAc,EAAE,SAASuE,0BAAT,CAAoCrT,EAApC,EAAwCC,GAAxC,EAA6C+O,QAA7C,EAAuD;AAAE,QAAIhP,EAAE,GAAG,CAAT,EAAY;AAC3LpU,MAAAA,MAAM,CAACqjB,cAAP,CAAsBD,QAAtB,EAAgCoC,gBAAhC,EAAkD,CAAlD;AACAxlB,MAAAA,MAAM,CAACqjB,cAAP,CAAsBD,QAAtB,EAAgCiC,eAAhC,EAAiD,CAAjD;AACH;;AAAC,QAAIjR,EAAE,GAAG,CAAT,EAAY;AACV,UAAIkP,EAAJ;;AACAtjB,MAAAA,MAAM,CAACujB,cAAP,CAAsBD,EAAE,GAAGtjB,MAAM,CAACwjB,WAAP,EAA3B,MAAqDnP,GAAG,CAACuS,MAAJ,GAAatD,EAAlE;AACAtjB,MAAAA,MAAM,CAACujB,cAAP,CAAsBD,EAAE,GAAGtjB,MAAM,CAACwjB,WAAP,EAA3B,MAAqDnP,GAAG,CAAC2S,aAAJ,GAAoB1D,EAAzE;AACH;AAAE,GAPmD;AAOjD/c,EAAAA,MAAM,EAAE;AAAEe,IAAAA,SAAS,EAAE,WAAb;AAA0BC,IAAAA,SAAS,EAAE,CAAC,mBAAD,EAAsB,WAAtB,CAArC;AAAyEC,IAAAA,QAAQ,EAAE,UAAnF;AAA+FgQ,IAAAA,QAAQ,EAAE,UAAzG;AAAqH5U,IAAAA,OAAO,EAAE,SAA9H;AAAyIgF,IAAAA,WAAW,EAAE,aAAtJ;AAAqKC,IAAAA,aAAa,EAAE,eAApL;AAAqMC,IAAAA,YAAY,EAAE,cAAnN;AAAmOC,IAAAA,MAAM,EAAE;AAA3O,GAPyC;AAO8MmD,EAAAA,OAAO,EAAE;AAAE6a,IAAAA,SAAS,EAAE,WAAb;AAA0BC,IAAAA,YAAY,EAAE,cAAxC;AAAwDC,IAAAA,QAAQ,EAAE,UAAlE;AAA8EC,IAAAA,WAAW,EAAE,aAA3F;AAA0GC,IAAAA,aAAa,EAAE,eAAzH;AAA0IC,IAAAA,aAAa,EAAE,eAAzJ;AAA0KC,IAAAA,aAAa,EAAE,eAAzL;AAA0MC,IAAAA,YAAY,EAAE,cAAxN;AAAwOC,IAAAA,aAAa,EAAE,eAAvP;AAAwQC,IAAAA,WAAW,EAAE,aAArR;AAAoSC,IAAAA,cAAc,EAAE,gBAApT;AAAsUC,IAAAA,cAAc,EAAE;AAAtV,GAPvN;AAOikBlgB,EAAAA,QAAQ,EAAE,CAACxG,MAAM,CAACyG,oBAAR;AAP3kB,CAAzB,CAAjC;AAQAof,WAAW,CAACqB,0BAAZ,GAAyC,CACrC,WADqC,EACxB,UADwB,EACZ,SADY,EACD,UADC,EACW,aADX,EAC0B,eAD1B,EAC2C,cAD3C,EAErC,QAFqC,CAAzC;;AAIArB,WAAW,CAACnhB,cAAZ,GAA6B;AAAA,SAAM,CAC/B;AAAEC,IAAAA,IAAI,EAAE+T;AAAR,GAD+B,CAAN;AAAA,CAA7B;;AAGAxb,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPmf,WAAW,CAAClf,SAHL,EAGgB,WAHhB,EAG6B,KAAK,CAHlC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,CAAC,mBAAD,CADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPmf,WAAW,CAAClf,SAHL,EAGgB,WAHhB,EAG6B,KAAK,CAHlC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPmf,WAAW,CAAClf,SAHL,EAGgB,UAHhB,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPmf,WAAW,CAAClf,SAHL,EAGgB,UAHhB,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPya,WAAW,CAAClf,SAHL,EAGgB,aAHhB,EAG+B,KAAK,CAHpC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGP0a,WAAW,CAAClf,SAHL,EAGgB,eAHhB,EAGiC,KAAK,CAHtC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGP0a,WAAW,CAAClf,SAHL,EAGgB,cAHhB,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPmf,WAAW,CAAClf,SAHL,EAGgB,SAHhB,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGP0a,WAAW,CAAClf,SAHL,EAGgB,QAHhB,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPmoB,WAAW,CAAClf,SAHL,EAGgB,WAHhB,EAG6B,KAAK,CAHlC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPmoB,WAAW,CAAClf,SAHL,EAGgB,cAHhB,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPmoB,WAAW,CAAClf,SAHL,EAGgB,UAHhB,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPmoB,WAAW,CAAClf,SAHL,EAGgB,aAHhB,EAG+B,KAAK,CAHpC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPmoB,WAAW,CAAClf,SAHL,EAGgB,eAHhB,EAGiC,KAAK,CAHtC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPmoB,WAAW,CAAClf,SAHL,EAGgB,eAHhB,EAGiC,KAAK,CAHtC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPmoB,WAAW,CAAClf,SAHL,EAGgB,eAHhB,EAGiC,KAAK,CAHtC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPmoB,WAAW,CAAClf,SAHL,EAGgB,cAHhB,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPmoB,WAAW,CAAClf,SAHL,EAGgB,eAHhB,EAGiC,KAAK,CAHtC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPmoB,WAAW,CAAClf,SAHL,EAGgB,aAHhB,EAG+B,KAAK,CAHpC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPmoB,WAAW,CAAClf,SAHL,EAGgB,gBAHhB,EAGkC,KAAK,CAHvC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPmf,WAAW,CAAClf,SAHL,EAGgB,gBAHhB,EAGkC,KAAK,CAHvC,CAAV;;AAIAzJ,UAAU,CAAC,CACPgB,eAAe,CAACsnB,gBAAD,CADR,EAEProB,UAAU,CAAC,aAAD,EAAgBc,SAAhB,CAFH,CAAD,EAGP4nB,WAAW,CAAClf,SAHL,EAGgB,QAHhB,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPgB,eAAe,CAACmnB,eAAD,CADR,EAEPloB,UAAU,CAAC,aAAD,EAAgBc,SAAhB,CAFH,CAAD,EAGP4nB,WAAW,CAAClf,SAHL,EAGgB,eAHhB,EAGiC,KAAK,CAHtC,CAAV;;AAIAkf,WAAW,GAAGF,aAAa,GAAGzoB,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACub,eAAD,CAAtB,CAAZ,CAAD,EACrCmN,WADqC,CAAxC;AAGA,IAAI6B,cAAJ;;AACA,IAAIC,YAAY,GAAGD,cAAc;AAC7B,wBAAYjiB,QAAZ,EAAsB;AAAA;;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACA;AACR;AACA;;AACQ,SAAK6B,SAAL,GAAiB,IAAjB;AACA;AACR;AACA;AACQ;;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA;AACR;AACA;AACA;;AACQ,SAAKC,QAAL,GAAgB,KAAhB;AACA;AACR;AACA;AACA;;AACQ,SAAK1F,cAAL,GAAsB,QAAtB;AACA;AACR;AACA;;AACQ,SAAKgG,YAAL,GAAoB,CAApB;AACA;AACR;AACA;;AACQ,SAAKlF,OAAL,GAAe,IAAf;AACA;AACR;AACA;;AACQ,SAAKka,YAAL,GAAoB,IAAIpf,YAAJ,EAApB;AACA;AACR;AACA;;AACQ,SAAKkqB,cAAL,GAAsB,IAAIlqB,YAAJ,EAAtB;AACA;AACR;AACA;;AACQ,SAAKmqB,iBAAL,GAAyB,IAAInqB,YAAJ,EAAzB;AACA;AACR;AACA;;AACQ,SAAKqL,IAAL,GAAY,IAAIrL,YAAJ,EAAZ;AACA;AACR;AACA;;AACQ,SAAKsL,OAAL,GAAe,IAAItL,YAAJ,EAAf;AACA;AACR;AACA;;AACQ,SAAKuL,SAAL,GAAiB,IAAIvL,YAAJ,EAAjB;AACA;AACR;AACA;;AACQ,SAAKwL,SAAL,GAAiB,IAAIxL,YAAJ,EAAjB;AACA;AACR;AACA;;AACQ,SAAKyL,SAAL,GAAiB,IAAIzL,YAAJ,EAAjB;AACA;AACR;AACA;;AACQ,SAAK0L,QAAL,GAAgB,IAAI1L,YAAJ,EAAhB;AACA;AACR;AACA;;AACQ,SAAK2L,SAAL,GAAiB,IAAI3L,YAAJ,EAAjB;AACA;AACR;AACA;;AACQ,SAAK4L,OAAL,GAAe,IAAI5L,YAAJ,EAAf;AACA;AACR;AACA;;AACQ,SAAK8L,UAAL,GAAkB,IAAI9L,YAAJ,EAAlB;AACA,SAAKoqB,wBAAL,GAAgC,KAAhC;AACA,SAAKpe,mBAAL,GAA2B,EAA3B;AACH;AACD;;;AAjF6B;AAAA;AAAA,WAkF7B,oBAAW;AACP,WAAKjE,QAAL,CAAcsiB,YAAd,CAA2B,IAA3B;;AACA,WAAKD,wBAAL,GAAgC,IAAhC;;AACA,WAAKle,uBAAL;AACH;AACD;;AAvF6B;AAAA;AAAA,WAwF7B,qBAAY9D,OAAZ,EAAqB;AACjB,UAAI,CAAC,KAAKgiB,wBAAV,EAAoC;AAChC;AACH;;AACD,UAAIhiB,OAAO,CAAC,OAAD,CAAP,IACAA,OAAO,CAAC,MAAD,CADP,IAEAA,OAAO,CAAC,OAAD,CAFP,IAGAA,OAAO,CAAC,MAAD,CAHX,EAGqB;AACjB,aAAKL,QAAL,CAAc0V,SAAd,CAAwB,IAAxB;AACH;;AACD,UAAIrV,OAAO,CAAC,UAAD,CAAX,EAAyB;AACrB,aAAKL,QAAL,CAAcyC,WAAd,CAA0B,IAA1B;AACH;;AACD,UAAIpC,OAAO,CAAC,WAAD,CAAX,EAA0B;AACtB,aAAKL,QAAL,CAAc0C,YAAd,CAA2B,IAA3B;AACH;;AACD,UAAIrC,OAAO,CAAC,SAAD,CAAX,EAAwB;AACpB,aAAKL,QAAL,CAAc2C,UAAd,CAAyB,IAAzB;AACH;;AACD,WAAK4f,8BAAL,CAAoCliB,OAApC;AACH;AA5G4B;AAAA;AAAA,WA6G7B,wCAA+BA,OAA/B,EAAwC;AACpC,UAAItE,OAAO,GAAG,EAAd;AACA,UAAIsI,UAAU,GAAGpD,MAAM,CAACqD,IAAP,CAAYjE,OAAZ,EAAqBkE,MAArB,CAA4B,UAAAC,CAAC;AAAA,eAAIyd,cAAc,CAACxd,WAAf,CAA2BC,OAA3B,CAAmCF,CAAnC,MAA0C,CAAC,CAA/C;AAAA,OAA7B,CAAjB;AACAH,MAAAA,UAAU,CAACM,OAAX,CAAmB,UAAAH,CAAC,EAAI;AACpBzI,QAAAA,OAAO,CAACyI,CAAD,CAAP,GAAanE,OAAO,CAACmE,CAAD,CAAP,CAAWjE,YAAxB;AACH,OAFD;;AAGA,UAAI8D,UAAU,CAACO,MAAX,GAAoB,CAAxB,EAA2B;AACvB,aAAK5E,QAAL,CAAc/D,UAAd,CAAyB,IAAzB,EAA+BF,OAA/B;AACH;AACJ;AAtH4B;AAAA;AAAA,WAuH7B,mCAA0B;AAAA;;AACtB,UAAI8I,MAAM,GAAG,IAAI/I,GAAJ,EAAb;AACA+I,MAAAA,MAAM,CAACrF,GAAP,CAAW,gBAAX,EAA6B,KAAK6X,YAAlC;AACAxS,MAAAA,MAAM,CAACrF,GAAP,CAAW,OAAX,EAAoB,KAAK2iB,cAAzB;AACAtd,MAAAA,MAAM,CAACrF,GAAP,CAAW,UAAX,EAAuB,KAAK4iB,iBAA5B;AACAvd,MAAAA,MAAM,CAACrF,GAAP,CAAW,MAAX,EAAmB,KAAK8D,IAAxB;AACAuB,MAAAA,MAAM,CAACrF,GAAP,CAAW,SAAX,EAAsB,KAAK+D,OAA3B;AACAsB,MAAAA,MAAM,CAACrF,GAAP,CAAW,WAAX,EAAwB,KAAKgE,SAA7B;AACAqB,MAAAA,MAAM,CAACrF,GAAP,CAAW,WAAX,EAAwB,KAAKiE,SAA7B;AACAoB,MAAAA,MAAM,CAACrF,GAAP,CAAW,WAAX,EAAwB,KAAKkE,SAA7B;AACAmB,MAAAA,MAAM,CAACrF,GAAP,CAAW,UAAX,EAAuB,KAAKmE,QAA5B;AACAkB,MAAAA,MAAM,CAACrF,GAAP,CAAW,WAAX,EAAwB,KAAKoE,SAA7B;AACAiB,MAAAA,MAAM,CAACrF,GAAP,CAAW,SAAX,EAAsB,KAAKqE,OAA3B;AACAgB,MAAAA,MAAM,CAACrF,GAAP,CAAW,YAAX,EAAyB,KAAKuE,UAA9B;AACAc,MAAAA,MAAM,CAACF,OAAP,CAAe,UAACG,YAAD,EAAerH,SAAf,EAA6B;AACxC,QAAA,OAAI,CAACwG,mBAAL,CAAyBc,IAAzB,CAA8B,OAAI,CAAC/E,QAAL,CACzBgF,qBADyB,CACHvH,SADG,EACQ,OADR,EAEzBwH,SAFyB,CAEf,UAAAC,KAAK,EAAI;AACpB,kBAAQzH,SAAR;AACI,iBAAK,gBAAL;AACI,cAAA,OAAI,CAACuC,QAAL,CAAc7B,SAAd,CAAwB,OAAxB,EAA8BxC,IAA9B,CAAmC,UAAAsN,MAAM;AAAA,uBAAInE,YAAY,CAACK,IAAb,CAAkB;AAC3DkQ,kBAAAA,KAAK,EAAEpM,MAAM,CAACuZ,YAAP,GAAsB/gB,GAAtB,EADoD;AAE3D6T,kBAAAA,IAAI,EAAErM,MAAM,CAACuZ,YAAP,GAAsB7gB,GAAtB,EAFqD;AAG3D4T,kBAAAA,KAAK,EAAEtM,MAAM,CAACwZ,YAAP,GAAsBhhB,GAAtB,EAHoD;AAI3D+T,kBAAAA,IAAI,EAAEvM,MAAM,CAACwZ,YAAP,GAAsB9gB,GAAtB;AAJqD,iBAAlB,CAAJ;AAAA,eAAzC;;AAMA;;AACJ;AACImD,cAAAA,YAAY,CAACK,IAAb,CAAkB;AACdC,gBAAAA,MAAM,EAAE;AAAE3D,kBAAAA,GAAG,EAAEyD,KAAK,CAAC7H,MAAN,CAAaoE,GAAb,EAAP;AAA2BE,kBAAAA,GAAG,EAAEuD,KAAK,CAAC7H,MAAN,CAAasE,GAAb;AAAhC;AADM,eAAlB;AAVR;AAcH,SAjB6B,CAA9B;AAkBH,OAnBD;AAoBH;AACD;;AA1J6B;AAAA;AAAA,WA2J7B,uBAAc;AACV,WAAKsC,mBAAL,CAAyBU,OAAzB,CAAiC,UAAUU,CAAV,EAAa;AAC1CA,QAAAA,CAAC,CAACC,WAAF;AACH,OAFD;;AAGA,WAAKrB,mBAAL,GAA2B,IAA3B;;AACA,WAAKjE,QAAL,CAAc0iB,eAAd,CAA8B,IAA9B;AACH;AACD;AACJ;AACA;;AApKiC;AAAA;AAAA,WAqK7B,qBAAY;AACR,aAAO,KAAK1iB,QAAL,CAAc7B,SAAd,CAAwB,IAAxB,CAAP;AACH;AAvK4B;;AAAA;AAAA,GAAjC;;AAyKA+jB,YAAY,CAACxnB,IAAb,GAAoB,SAASioB,oBAAT,CAA8B/nB,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIsnB,YAAV,EAAwB3nB,MAAM,CAACmG,iBAAP,CAAyBuU,gBAAzB,CAAxB,CAAP;AAA6E,CAApI;;AACAiN,YAAY,CAACvhB,IAAb,GAAoB,aAAcpG,MAAM,CAACqG,iBAAP,CAAyB;AAAE1B,EAAAA,IAAI,EAAEgjB,YAAR;AAAsBrhB,EAAAA,SAAS,EAAE,CAAC,CAAC,eAAD,CAAD,CAAjC;AAAsDC,EAAAA,MAAM,EAAE;AAAEe,IAAAA,SAAS,EAAE,WAAb;AAA0BC,IAAAA,SAAS,EAAE,CAAC,oBAAD,EAAuB,WAAvB,CAArC;AAA0EC,IAAAA,QAAQ,EAAE,UAApF;AAAgG1F,IAAAA,cAAc,EAAE,gBAAhH;AAAkIgG,IAAAA,YAAY,EAAE,cAAhJ;AAAgKlF,IAAAA,OAAO,EAAE,SAAzK;AAAoLkY,IAAAA,KAAK,EAAE,OAA3L;AAAoMC,IAAAA,IAAI,EAAE,MAA1M;AAAkNC,IAAAA,KAAK,EAAE,OAAzN;AAAkOC,IAAAA,IAAI,EAAE,MAAxO;AAAgPxT,IAAAA,SAAS,EAAE,WAA3P;AAAwQC,IAAAA,WAAW,EAAE,aAArR;AAAoSE,IAAAA,WAAW,EAAE,aAAjT;AAAgUC,IAAAA,aAAa,EAAE,eAA/U;AAAgWE,IAAAA,MAAM,EAAE;AAAxW,GAA9D;AAAkbmD,EAAAA,OAAO,EAAE;AAAE4R,IAAAA,YAAY,EAAE,cAAhB;AAAgC8K,IAAAA,cAAc,EAAE,gBAAhD;AAAkEC,IAAAA,iBAAiB,EAAE,mBAArF;AAA0G9e,IAAAA,IAAI,EAAE,MAAhH;AAAwHC,IAAAA,OAAO,EAAE,SAAjI;AAA4IC,IAAAA,SAAS,EAAE,WAAvJ;AAAoKC,IAAAA,SAAS,EAAE,WAA/K;AAA4LC,IAAAA,SAAS,EAAE,WAAvM;AAAoNC,IAAAA,QAAQ,EAAE,UAA9N;AAA0OC,IAAAA,SAAS,EAAE,WAArP;AAAkQC,IAAAA,OAAO,EAAE,SAA3Q;AAAsRE,IAAAA,UAAU,EAAE;AAAlS,GAA3b;AAA6uBhD,EAAAA,QAAQ,EAAE,CAACxG,MAAM,CAACyG,oBAAR;AAAvvB,CAAzB,CAAlC;AACAkhB,YAAY,CAACzd,WAAb,GAA2B,CACvB,WADuB,EAEvB,aAFuB,EAGvB,aAHuB,EAIvB,eAJuB,EAKvB,gBALuB,EAMvB,cANuB,EAOvB,SAPuB,EAQvB,QARuB,EASvB,WATuB,CAA3B;;AAWAyd,YAAY,CAACjjB,cAAb,GAA8B;AAAA,SAAM,CAChC;AAAEC,IAAAA,IAAI,EAAE+V;AAAR,GADgC,CAAN;AAAA,CAA9B;;AAGAxd,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPwc,YAAY,CAAChhB,SAHN,EAGiB,OAHjB,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPwc,YAAY,CAAChhB,SAHN,EAGiB,MAHjB,EAGyB,KAAK,CAH9B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPwc,YAAY,CAAChhB,SAHN,EAGiB,OAHjB,EAG0B,KAAK,CAH/B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPwc,YAAY,CAAChhB,SAHN,EAGiB,MAHjB,EAGyB,KAAK,CAH9B,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPihB,YAAY,CAAChhB,SAHN,EAGiB,WAHjB,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,CAAC,oBAAD,CADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPihB,YAAY,CAAChhB,SAHN,EAGiB,WAHjB,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPihB,YAAY,CAAChhB,SAHN,EAGiB,UAHjB,EAG6B,KAAK,CAHlC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPuc,YAAY,CAAChhB,SAHN,EAGiB,WAHjB,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPwc,YAAY,CAAChhB,SAHN,EAGiB,aAHjB,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPuc,YAAY,CAAChhB,SAHN,EAGiB,aAHjB,EAGgC,KAAK,CAHrC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPwc,YAAY,CAAChhB,SAHN,EAGiB,eAHjB,EAGkC,KAAK,CAHvC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBiO,MAAhB,CAFH,CAAD,EAGPuc,YAAY,CAAChhB,SAHN,EAGiB,gBAHjB,EAGmC,KAAK,CAHxC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPihB,YAAY,CAAChhB,SAHN,EAGiB,cAHjB,EAGiC,KAAK,CAHtC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGPihB,YAAY,CAAChhB,SAHN,EAGiB,SAHjB,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBgO,MAAhB,CAFH,CAAD,EAGPwc,YAAY,CAAChhB,SAHN,EAGiB,QAHjB,EAG2B,KAAK,CAHhC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiqB,YAAY,CAAChhB,SAHN,EAGiB,cAHjB,EAGiC,KAAK,CAHtC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiqB,YAAY,CAAChhB,SAHN,EAGiB,gBAHjB,EAGmC,KAAK,CAHxC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiqB,YAAY,CAAChhB,SAHN,EAGiB,mBAHjB,EAGsC,KAAK,CAH3C,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiqB,YAAY,CAAChhB,SAHN,EAGiB,MAHjB,EAGyB,KAAK,CAH9B,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiqB,YAAY,CAAChhB,SAHN,EAGiB,SAHjB,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiqB,YAAY,CAAChhB,SAHN,EAGiB,WAHjB,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiqB,YAAY,CAAChhB,SAHN,EAGiB,WAHjB,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiqB,YAAY,CAAChhB,SAHN,EAGiB,WAHjB,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiqB,YAAY,CAAChhB,SAHN,EAGiB,UAHjB,EAG6B,KAAK,CAHlC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiqB,YAAY,CAAChhB,SAHN,EAGiB,WAHjB,EAG8B,KAAK,CAHnC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiqB,YAAY,CAAChhB,SAHN,EAGiB,SAHjB,EAG4B,KAAK,CAHjC,CAAV;;AAIAzJ,UAAU,CAAC,CACPS,MAAM,EADC,EAEPR,UAAU,CAAC,aAAD,EAAgBO,YAAhB,CAFH,CAAD,EAGPiqB,YAAY,CAAChhB,SAHN,EAGiB,YAHjB,EAG+B,KAAK,CAHpC,CAAV;;AAIAghB,YAAY,GAAGD,cAAc,GAAGxqB,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACud,gBAAD,CAAtB,CAAZ,CAAD,EACvCiN,YADuC,CAA1C;AAGA,IAAIU,SAAS,GAAG,CAAhB;AACA;AACA;AACA;AACA;;AACA,IAAIC,eAAe;AACf,2BAAY7iB,QAAZ,EAAsB;AAAA;;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,eAAL,GAAuB,KAAvB;AACA,SAAKC,GAAL,GAAW,CAAC0iB,SAAS,EAAV,EAAcziB,QAAd,EAAX;AACA;AACR;AACA;;AACQ,SAAKhD,OAAL,GAAe,IAAf;AACH;;AATc;AAAA;AAAA,WAUf,oBAAW;AACP,UAAI,KAAK8C,eAAT,EAA0B;AACtB;AACH;;AACD,WAAKD,QAAL,CAAc8iB,eAAd,CAA8B,IAA9B,EAAoC;AAAE3lB,QAAAA,OAAO,EAAE,KAAKA;AAAhB,OAApC;;AACA,WAAK8C,eAAL,GAAuB,IAAvB;AACH;AAhBc;AAAA;AAAA,WAiBf,qBAAYI,OAAZ,EAAqB;AACjB,UAAI,CAAC,KAAKJ,eAAV,EAA2B;AACvB;AACH;;AACD,UAAII,OAAO,CAAC,SAAD,CAAP,IAAsB,IAA1B,EAAgC;AAC5B,aAAKL,QAAL,CAAcM,qBAAd,CAAoC,IAApC,EAA0C;AAAEnD,UAAAA,OAAO,EAAEkD,OAAO,CAAC,SAAD,CAAP,CAAmBE;AAA9B,SAA1C;AACH;AACJ;AACD;;AAzBe;AAAA;AAAA,WA0Bf,cAAK;AAAE,aAAO,KAAKL,GAAZ;AAAkB;AACzB;;AA3Be;AAAA;AAAA,WA4Bf,oBAAW;AAAE,uCAA0B,KAAKA,GAAL,CAASC,QAAT,EAA1B;AAAkD;AAC/D;;AA7Be;AAAA;AAAA,WA8Bf,uBAAc;AACV,WAAKH,QAAL,CAAcQ,WAAd,CAA0B,IAA1B;AACH;AAhCc;;AAAA;AAAA,GAAnB;;AAkCAqiB,eAAe,CAACnoB,IAAhB,GAAuB,SAASqoB,uBAAT,CAAiCnoB,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAIioB,eAAV,EAA2BtoB,MAAM,CAACmG,iBAAP,CAAyBvB,YAAzB,CAA3B,CAAP;AAA4E,CAAzI;;AACA0jB,eAAe,CAACliB,IAAhB,GAAuB,aAAcpG,MAAM,CAACqG,iBAAP,CAAyB;AAAE1B,EAAAA,IAAI,EAAE2jB,eAAR;AAAyBhiB,EAAAA,SAAS,EAAE,CAAC,CAAC,mBAAD,CAAD,CAApC;AAA6DC,EAAAA,MAAM,EAAE;AAAE3D,IAAAA,OAAO,EAAE;AAAX,GAArE;AAA6F4D,EAAAA,QAAQ,EAAE,CAACxG,MAAM,CAACyG,oBAAR;AAAvG,CAAzB,CAArC;;AACA6hB,eAAe,CAAC5jB,cAAhB,GAAiC;AAAA,SAAM,CACnC;AAAEC,IAAAA,IAAI,EAAEC;AAAR,GADmC,CAAN;AAAA,CAAjC;;AAGA1H,UAAU,CAAC,CACPM,KAAK,EADE,EAEPL,UAAU,CAAC,aAAD,EAAgBuJ,MAAhB,CAFH,CAAD,EAGP4hB,eAAe,CAAC3hB,SAHT,EAGoB,SAHpB,EAG+B,KAAK,CAHpC,CAAV;;AAIA2hB,eAAe,GAAGprB,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAACyH,YAAD,CAAtB,CAAZ,CAAD,EACzB0jB,eADyB,CAA5B;AAGA,IAAIG,QAAJ;AACA,IAAIhP,UAAJ;;AACA,CAAC,UAAUA,UAAV,EAAsB;AACnBA,EAAAA,UAAU,CAACA,UAAU,CAAC,uBAAD,CAAV,GAAsC,CAAvC,CAAV,GAAsD,uBAAtD;AACAA,EAAAA,UAAU,CAACA,UAAU,CAAC,qBAAD,CAAV,GAAoC,CAArC,CAAV,GAAoD,qBAApD;AACAA,EAAAA,UAAU,CAACA,UAAU,CAAC,QAAD,CAAV,GAAuB,CAAxB,CAAV,GAAuC,QAAvC;AACAA,EAAAA,UAAU,CAACA,UAAU,CAAC,sBAAD,CAAV,GAAqC,CAAtC,CAAV,GAAqD,sBAArD;AACAA,EAAAA,UAAU,CAACA,UAAU,CAAC,oBAAD,CAAV,GAAmC,CAApC,CAAV,GAAmD,oBAAnD;AACH,CAND,EAMGA,UAAU,KAAKA,UAAU,GAAG,EAAlB,CANb;AAOA;AACA;AACA;AACA;AACA;;;AACA,IAAIiP,eAAJ;;AACA,CAAC,UAAUA,eAAV,EAA2B;AACxBA,EAAAA,eAAe,CAACA,eAAe,CAAC,cAAD,CAAf,GAAkC,CAAnC,CAAf,GAAuD,cAAvD;AACAA,EAAAA,eAAe,CAACA,eAAe,CAAC,UAAD,CAAf,GAA8B,CAA/B,CAAf,GAAmD,UAAnD;AACAA,EAAAA,eAAe,CAACA,eAAe,CAAC,YAAD,CAAf,GAAgC,CAAjC,CAAf,GAAqD,YAArD;AACAA,EAAAA,eAAe,CAACA,eAAe,CAAC,WAAD,CAAf,GAA+B,CAAhC,CAAf,GAAoD,WAApD;AACAA,EAAAA,eAAe,CAACA,eAAe,CAAC,aAAD,CAAf,GAAiC,CAAlC,CAAf,GAAsD,aAAtD;AACAA,EAAAA,eAAe,CAACA,eAAe,CAAC,UAAD,CAAf,GAA8B,CAA/B,CAAf,GAAmD,UAAnD;AACAA,EAAAA,eAAe,CAACA,eAAe,CAAC,aAAD,CAAf,GAAiC,CAAlC,CAAf,GAAsD,aAAtD;AACAA,EAAAA,eAAe,CAACA,eAAe,CAAC,WAAD,CAAf,GAA+B,CAAhC,CAAf,GAAoD,WAApD;AACAA,EAAAA,eAAe,CAACA,eAAe,CAAC,cAAD,CAAf,GAAkC,CAAnC,CAAf,GAAuD,cAAvD;AACAA,EAAAA,eAAe,CAACA,eAAe,CAAC,cAAD,CAAf,GAAkC,CAAnC,CAAf,GAAuD,cAAvD;AACAA,EAAAA,eAAe,CAACA,eAAe,CAAC,aAAD,CAAf,GAAiC,EAAlC,CAAf,GAAuD,aAAvD;AACAA,EAAAA,eAAe,CAACA,eAAe,CAAC,eAAD,CAAf,GAAmC,EAApC,CAAf,GAAyD,eAAzD;AACH,CAbD,EAaGA,eAAe,KAAKA,eAAe,GAAG,EAAvB,CAblB;;AAcA,IAAIC,SAAJ;;AACA,CAAC,UAAUA,SAAV,EAAqB;AAClB;AACAA,EAAAA,SAAS,CAACA,SAAS,CAAC,QAAD,CAAT,GAAsB,CAAvB,CAAT,GAAqC,QAArC;AACA;;AACAA,EAAAA,SAAS,CAACA,SAAS,CAAC,SAAD,CAAT,GAAuB,CAAxB,CAAT,GAAsC,SAAtC;AACA;;AACAA,EAAAA,SAAS,CAACA,SAAS,CAAC,WAAD,CAAT,GAAyB,CAA1B,CAAT,GAAwC,WAAxC;AACA;;AACAA,EAAAA,SAAS,CAACA,SAAS,CAAC,SAAD,CAAT,GAAuB,CAAxB,CAAT,GAAsC,SAAtC;AACH,CATD,EASGA,SAAS,KAAKA,SAAS,GAAG,EAAjB,CATZ;;AAUA,IAAIC,mBAAJ;;AACA,CAAC,UAAUA,mBAAV,EAA+B;AAC5BA,EAAAA,mBAAmB,CAACA,mBAAmB,CAAC,SAAD,CAAnB,GAAiC,CAAlC,CAAnB,GAA0D,SAA1D;AACAA,EAAAA,mBAAmB,CAACA,mBAAmB,CAAC,eAAD,CAAnB,GAAuC,CAAxC,CAAnB,GAAgE,eAAhE;AACAA,EAAAA,mBAAmB,CAACA,mBAAmB,CAAC,gBAAD,CAAnB,GAAwC,CAAzC,CAAnB,GAAiE,gBAAjE;AACH,CAJD,EAIGA,mBAAmB,KAAKA,mBAAmB,GAAG,EAA3B,CAJtB;;AAKA,IAAIC,iBAAJ;;AACA,CAAC,UAAUA,iBAAV,EAA6B;AAC1BA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,SAAD,CAAjB,GAA+B,CAAhC,CAAjB,GAAsD,SAAtD;AACH,CAFD,EAEGA,iBAAiB,KAAKA,iBAAiB,GAAG,EAAzB,CAFpB;;AAGA,IAAIC,gBAAJ;;AACA,CAAC,UAAUA,gBAAV,EAA4B;AACzBA,EAAAA,gBAAgB,CAACA,gBAAgB,CAAC,SAAD,CAAhB,GAA8B,CAA/B,CAAhB,GAAoD,SAApD;AACAA,EAAAA,gBAAgB,CAACA,gBAAgB,CAAC,OAAD,CAAhB,GAA4B,CAA7B,CAAhB,GAAkD,OAAlD;AACAA,EAAAA,gBAAgB,CAACA,gBAAgB,CAAC,OAAD,CAAhB,GAA4B,CAA7B,CAAhB,GAAkD,OAAlD;AACH,CAJD,EAIGA,gBAAgB,KAAKA,gBAAgB,GAAG,EAAxB,CAJnB;;AAKA,IAAIC,oBAAJ;;AACA,CAAC,UAAUA,oBAAV,EAAgC;AAC7BA,EAAAA,oBAAoB,CAAC,aAAD,CAApB,GAAsC,aAAtC;AACAA,EAAAA,oBAAoB,CAAC,kBAAD,CAApB,GAA2C,kBAA3C;AACAA,EAAAA,oBAAoB,CAAC,oBAAD,CAApB,GAA6C,oBAA7C;AACAA,EAAAA,oBAAoB,CAAC,SAAD,CAApB,GAAkC,SAAlC;AACH,CALD,EAKGA,oBAAoB,KAAKA,oBAAoB,GAAG,EAA5B,CALvB;;AAMA,IAAIC,cAAJ;;AACA,CAAC,UAAUA,cAAV,EAA0B;AACvBA,EAAAA,cAAc,CAAC,OAAD,CAAd,GAA0B,OAA1B;AACAA,EAAAA,cAAc,CAAC,iBAAD,CAAd,GAAoC,iBAApC;AACAA,EAAAA,cAAc,CAAC,IAAD,CAAd,GAAuB,IAAvB;AACAA,EAAAA,cAAc,CAAC,kBAAD,CAAd,GAAqC,kBAArC;AACAA,EAAAA,cAAc,CAAC,gBAAD,CAAd,GAAmC,gBAAnC;AACAA,EAAAA,cAAc,CAAC,eAAD,CAAd,GAAkC,eAAlC;AACAA,EAAAA,cAAc,CAAC,cAAD,CAAd,GAAiC,cAAjC;AACH,CARD,EAQGA,cAAc,KAAKA,cAAc,GAAG,EAAtB,CARjB;;AAUA,IAAIC,WAAW;AACX,uBAAY/a,MAAZ,EAAoB;AAAA;;AAAA;;AAChB,QAAMgb,oBAAoB,GAAG,IAAIxqB,UAAJ,CAAe,UAAAyqB,UAAU,EAAI;AACtDjb,MAAAA,MAAM,CAAC/M,IAAP,GAAcC,IAAd,CAAmB;AAAA,eAAM+nB,UAAU,CAAC5lB,IAAX,EAAN;AAAA,OAAnB;AACH,KAF4B,EAGxB+K,IAHwB,CAGnB9O,GAAG,CAAC;AAAA,aAAM,OAAI,CAAC4pB,eAAL,EAAN;AAAA,KAAD,CAHgB,EAGgBtpB,SAAS,CAAC,IAAIb,aAAJ,CAAkB,CAAlB,CAAD,CAHzB,CAA7B;AAIAiqB,IAAAA,oBAAoB,CAACG,OAArB,GALgB,CAKgB;AAChC;;AACA,SAAKC,SAAL,GAAiBJ,oBAAjB;AACH;;AATU;AAAA;AAAA,WAUX,iBAAQK,OAAR,EAAiB;AAAA;;AACb,aAAO,KAAKD,SAAL,CAAehb,IAAf,CAAoB/O,SAAS,CAAC,UAACiqB,QAAD;AAAA,eAAc,OAAI,CAACC,iBAAL,CAAuBD,QAAvB,EAAiCD,OAAjC,CAAd;AAAA,OAAD,CAA7B,CAAP;AACH;AAZU;AAAA;AAAA,WAaX,2BAAkBC,QAAlB,EAA4BD,OAA5B,EAAqC;AACjC,UAAMG,iBAAiB,GAAGxqB,YAAY,CAACsqB,QAAQ,CAACG,OAAV,CAAtC;AACA,aAAOD,iBAAiB,CAACH,OAAD,CAAjB,CAA2Bjb,IAA3B,CAAgC/O,SAAS,CAAC,iBAAuB;AAAA;AAAA,YAArBqqB,OAAqB;AAAA,YAAZC,MAAY;;AACpE,YAAIA,MAAM,KAAKb,cAAc,CAACc,EAA9B,EAAkC;AAC9B,iBAAO3qB,EAAE,CAACyqB,OAAD,CAAT;AACH;;AACD,eAAOxqB,UAAU,CAACyqB,MAAD,CAAjB;AACH,OAL+C,CAAzC,CAAP;AAMH;AArBU;AAAA;AAAA,WAsBX,2BAAkB;AACd,aAAO,IAAIxoB,MAAM,CAACC,IAAP,CAAYyoB,QAAhB,EAAP;AACH;AAxBU;;AAAA;AAAA,GAAf;;AA0BAd,WAAW,CAAC9oB,IAAZ,GAAmB,SAAS6pB,mBAAT,CAA6B3pB,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAI4oB,WAAV,EAAuBjpB,MAAM,CAAC3B,QAAP,CAAgB6B,aAAhB,CAAvB,CAAP;AAAgE,CAArH;;AACA+oB,WAAW,CAAC3oB,KAAZ,GAAoB,aAAcN,MAAM,CAAC5B,kBAAP,CAA0B;AAAEmC,EAAAA,KAAK,EAAE0oB,WAAT;AAAsBzoB,EAAAA,OAAO,EAAE,iBAAUH,CAAV,EAAa;AAAE,WAAO4oB,WAAW,CAAC9oB,IAAZ,CAAiBE,CAAjB,CAAP;AAA6B,GAA3E;AAA6E4pB,EAAAA,UAAU,EAAE;AAAzF,CAA1B,CAAlC;;AACAhB,WAAW,CAACvkB,cAAZ,GAA6B;AAAA,SAAM,CAC/B;AAAEC,IAAAA,IAAI,EAAEzE;AAAR,GAD+B,CAAN;AAAA,CAA7B;;AAGA+oB,WAAW,CAACiB,eAAZ,GAA8B9rB,kBAAkB,CAAC;AAAEoC,EAAAA,OAAO,EAAE,SAASwpB,mBAAT,GAA+B;AAAE,WAAO,IAAIf,WAAJ,CAAgB5qB,QAAQ,CAAC6B,aAAD,CAAxB,CAAP;AAAkD,GAA9F;AAAgGK,EAAAA,KAAK,EAAE0oB,WAAvG;AAAoHgB,EAAAA,UAAU,EAAE;AAAhI,CAAD,CAAhD;AACAhB,WAAW,GAAG/rB,UAAU,CAAC,CAAEC,UAAU,CAAC,mBAAD,EAAsB,CAAC+C,aAAD,CAAtB,CAAZ,CAAD,EACrB+oB,WADqB,CAAxB;;IAGMkB,S;;;;;;;WACF,2BAAkB;AAAE,aAAOC,MAAP;AAAgB;;;;;;IAElCC,W;;;;;;;WACF,6BAAoB;AAAE,aAAOC,QAAP;AAAkB;;;;;;AAE5C,IAAMC,yBAAyB,GAAG,CAACJ,SAAD,EAAYE,WAAZ,CAAlC;AAEA,IAAIG,wBAAJ;;AACA,CAAC,UAAUA,wBAAV,EAAoC;AACjCA,EAAAA,wBAAwB,CAACA,wBAAwB,CAAC,MAAD,CAAxB,GAAmC,CAApC,CAAxB,GAAiE,MAAjE;AACAA,EAAAA,wBAAwB,CAACA,wBAAwB,CAAC,OAAD,CAAxB,GAAoC,CAArC,CAAxB,GAAkE,OAAlE;AACAA,EAAAA,wBAAwB,CAACA,wBAAwB,CAAC,MAAD,CAAxB,GAAmC,CAApC,CAAxB,GAAiE,MAAjE;AACH,CAJD,EAIGA,wBAAwB,KAAKA,wBAAwB,GAAG,EAAhC,CAJ3B;AAKA;AACA;AACA;AACA;;;AACA,IAAMC,oBAAoB,GAAG,IAAInsB,cAAJ,CAAmB,0CAAnB,CAA7B;;AACA,IAAIosB,iBAAiB;AAAA;;AAAA;;AACjB,+BAA2C;AAAA;;AAAA,QAA/BC,MAA+B,uEAAtB,IAAsB;AAAA,QAAhBzY,CAAgB;AAAA,QAAb1G,CAAa;AAAA,QAAVof,QAAU;;AAAA;;AACvC;AACA,YAAKA,QAAL,GAAgBA,QAAhB;AACA,YAAKC,UAAL,GAAkB,wBAAlB;AACA,YAAKC,YAAL;AACA,YAAKC,OAAL,GAAeJ,MAAM,IAAI,EAAzB;AACA,YAAKK,UAAL,GAAkB9Y,CAAlB;AACA,YAAK+Y,YAAL,GAAoBzf,CAApB;AAPuC;AAQ1C;;AATgB;AAAA;AAAA,WAUjB,gBAAO;AACH,UAAM4e,MAAM,GAAG,KAAKY,UAAL,CAAgBE,eAAhB,EAAf;;AACA,UAAId,MAAM,CAAC/oB,MAAP,IAAiB+oB,MAAM,CAAC/oB,MAAP,CAAcC,IAAnC,EAAyC;AACrC;AACA,eAAOT,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,UAAI,KAAKqqB,qBAAT,EAAgC;AAC5B,eAAO,KAAKA,qBAAZ;AACH,OARE,CASH;;;AACA,UAAMC,YAAY,GAAG,KAAKH,YAAL,CAAkBI,iBAAlB,GAAsCC,cAAtC,CAAqD,KAAKT,UAA1D,CAArB;;AACA,UAAIO,YAAJ,EAAkB;AACd,aAAKG,2BAAL,CAAiCH,YAAjC;;AACA,eAAO,KAAKD,qBAAZ;AACH;;AACD,UAAMK,MAAM,GAAG,KAAKP,YAAL,CAAkBI,iBAAlB,GAAsCI,aAAtC,CAAoD,QAApD,CAAf;;AACAD,MAAAA,MAAM,CAAC7mB,IAAP,GAAc,iBAAd;AACA6mB,MAAAA,MAAM,CAACE,KAAP,GAAe,IAAf;AACAF,MAAAA,MAAM,CAACG,KAAP,GAAe,IAAf;AACAH,MAAAA,MAAM,CAAC1c,EAAP,GAAY,KAAK+b,UAAjB;AACAW,MAAAA,MAAM,CAACI,GAAP,GAAa,KAAKC,aAAL,CAAmB,KAAKf,YAAxB,CAAb;;AACA,WAAKS,2BAAL,CAAiCC,MAAjC;;AACA,WAAKP,YAAL,CAAkBI,iBAAlB,GAAsCS,IAAtC,CAA2CC,WAA3C,CAAuDP,MAAvD;;AACA,aAAO,KAAKL,qBAAZ;AACH;AAlCgB;AAAA;AAAA,WAmCjB,qCAA4Ba,UAA5B,EAAwC;AAAA;;AACpC,WAAKb,qBAAL,GAA6B,IAAItqB,OAAJ,CAAY,UAACC,OAAD,EAAUwL,MAAV,EAAqB;AAC1D,QAAA,OAAI,CAAC0e,UAAL,CAAgBE,eAAhB,GAAkC,OAAI,CAACJ,YAAvC,IAAuD,YAAM;AACzDhqB,UAAAA,OAAO;AACV,SAFD;;AAGAkrB,QAAAA,UAAU,CAACC,OAAX,GAAqB,UAACC,KAAD,EAAW;AAC5B5f,UAAAA,MAAM,CAAC4f,KAAD,CAAN;AACH,SAFD;AAGH,OAP4B,CAA7B;AAQH;AA5CgB;AAAA;AAAA,WA6CjB,uBAAcpB,YAAd,EAA4B;AACxB,UAAIqB,YAAY,GAAI,KAAKpB,OAAL,IAAgB,KAAKA,OAAL,CAAaqB,QAA9B,IAA2C5B,wBAAwB,CAAC6B,KAAvF;AACA,UAAID,QAAJ;;AACA,cAAQD,YAAR;AACI,aAAK3B,wBAAwB,CAAC8B,IAA9B;AACIF,UAAAA,QAAQ,GAAG,EAAX;AACA;;AACJ,aAAK5B,wBAAwB,CAAC+B,IAA9B;AACIH,UAAAA,QAAQ,GAAG,OAAX;AACA;;AACJ,aAAK5B,wBAAwB,CAAC6B,KAA9B;AACID,UAAAA,QAAQ,GAAG,QAAX;AACA;AATR;;AAWA,UAAMI,WAAW,GAAG,KAAKzB,OAAL,CAAayB,WAAb,IAA4B,iCAAhD;AACA,UAAMC,WAAW,GAAG;AAChBC,QAAAA,CAAC,EAAE,KAAK3B,OAAL,CAAa4B,UAAb,IAA2B,WADd;AAEhB1V,QAAAA,QAAQ,EAAE6T,YAFM;AAGhBvQ,QAAAA,GAAG,EAAE,KAAKwQ,OAAL,CAAa6B,MAHF;AAIhBC,QAAAA,MAAM,EAAE,KAAK9B,OAAL,CAAa+B,QAJL;AAKhBC,QAAAA,OAAO,EAAE,KAAKhC,OAAL,CAAagC,OALN;AAMhBC,QAAAA,SAAS,EAAE,KAAKjC,OAAL,CAAaiC,SANR;AAOhBC,QAAAA,MAAM,EAAE,KAAKlC,OAAL,CAAakC,MAPL;AAQhBC,QAAAA,QAAQ,EAAE,KAAKnC,OAAL,CAAamC,QAAb,IAAyB,KAAKtC,QAAL,KAAkB,OAA3C,GAAqD,KAAKA,QAA1D,GAAqE;AAR/D,OAApB;AAUA,UAAMuC,MAAM,GAAGzmB,MAAM,CAACqD,IAAP,CAAY0iB,WAAZ,EACVziB,MADU,CACH,UAACC,CAAD;AAAA,eAAOwiB,WAAW,CAACxiB,CAAD,CAAX,IAAkB,IAAzB;AAAA,OADG,EAEVD,MAFU,CAEH,UAACC,CAAD,EAAO;AACf;AACA,eAAO,CAAC6W,KAAK,CAACsM,OAAN,CAAcX,WAAW,CAACxiB,CAAD,CAAzB,CAAD,IACF6W,KAAK,CAACsM,OAAN,CAAcX,WAAW,CAACxiB,CAAD,CAAzB,KAAiCwiB,WAAW,CAACxiB,CAAD,CAAX,CAAeI,MAAf,GAAwB,CAD9D;AAEH,OANc,EAOV7K,GAPU,CAON,UAACyK,CAAD,EAAO;AACZ;AACA,YAAI+H,CAAC,GAAGya,WAAW,CAACxiB,CAAD,CAAnB;;AACA,YAAI6W,KAAK,CAACsM,OAAN,CAAcpb,CAAd,CAAJ,EAAsB;AAClB,iBAAO;AAAEuI,YAAAA,GAAG,EAAEtQ,CAAP;AAAUU,YAAAA,KAAK,EAAEqH,CAAC,CAACqb,IAAF,CAAO,GAAP;AAAjB,WAAP;AACH;;AACD,eAAO;AAAE9S,UAAAA,GAAG,EAAEtQ,CAAP;AAAUU,UAAAA,KAAK,EAAE8hB,WAAW,CAACxiB,CAAD;AAA5B,SAAP;AACH,OAdc,EAeVzK,GAfU,CAeN,UAAC8tB,KAAD,EAAW;AAChB,yBAAUA,KAAK,CAAC/S,GAAhB,cAAuB+S,KAAK,CAAC3iB,KAA7B;AACH,OAjBc,EAkBV0iB,IAlBU,CAkBL,GAlBK,CAAf;AAmBA,uBAAUjB,QAAV,eAAuBI,WAAvB,cAAsCW,MAAtC;AACH;AA1FgB;;AAAA;AAAA,EAAmCjtB,aAAnC,CAArB;;AA4FAwqB,iBAAiB,CAACvqB,IAAlB,GAAyB,SAASotB,yBAAT,CAAmCltB,CAAnC,EAAsC;AAAE,SAAO,KAAKA,CAAC,IAAIqqB,iBAAV,EAA6B1qB,MAAM,CAAC3B,QAAP,CAAgBosB,oBAAhB,EAAsC,CAAtC,CAA7B,EAAuEzqB,MAAM,CAAC3B,QAAP,CAAgB8rB,SAAhB,CAAvE,EAAmGnqB,MAAM,CAAC3B,QAAP,CAAgBgsB,WAAhB,CAAnG,EAAiIrqB,MAAM,CAAC3B,QAAP,CAAgBG,SAAhB,CAAjI,CAAP;AAAsK,CAAvO;;AACAksB,iBAAiB,CAACpqB,KAAlB,GAA0B,aAAcN,MAAM,CAAC5B,kBAAP,CAA0B;AAAEmC,EAAAA,KAAK,EAAEmqB,iBAAT;AAA4BlqB,EAAAA,OAAO,EAAE,iBAAUH,CAAV,EAAa;AAAE,WAAOqqB,iBAAiB,CAACvqB,IAAlB,CAAuBE,CAAvB,CAAP;AAAmC;AAAvF,CAA1B,CAAxC;;AACAqqB,iBAAiB,CAAChmB,cAAlB,GAAmC;AAAA,SAAM,CACrC;AAAEC,IAAAA,IAAI,EAAEob,SAAR;AAAmB9P,IAAAA,UAAU,EAAE,CAAC;AAAEtL,MAAAA,IAAI,EAAEpG;AAAR,KAAD,EAAqB;AAAEoG,MAAAA,IAAI,EAAE5G,MAAR;AAAgB8iB,MAAAA,IAAI,EAAE,CAAC4J,oBAAD;AAAtB,KAArB;AAA/B,GADqC,EAErC;AAAE9lB,IAAAA,IAAI,EAAEwlB;AAAR,GAFqC,EAGrC;AAAExlB,IAAAA,IAAI,EAAE0lB;AAAR,GAHqC,EAIrC;AAAE1lB,IAAAA,IAAI,EAAEyG,MAAR;AAAgB6E,IAAAA,UAAU,EAAE,CAAC;AAAEtL,MAAAA,IAAI,EAAE5G,MAAR;AAAgB8iB,MAAAA,IAAI,EAAE,CAACriB,SAAD;AAAtB,KAAD;AAA5B,GAJqC,CAAN;AAAA,CAAnC;;AAMAksB,iBAAiB,GAAGxtB,UAAU,CAAC,CAAEE,OAAO,CAAC,CAAD,EAAImB,QAAQ,EAAZ,CAAT,EAA0BnB,OAAO,CAAC,CAAD,EAAIW,MAAM,CAAC0sB,oBAAD,CAAV,CAAjC,EAC3BrtB,OAAO,CAAC,CAAD,EAAIW,MAAM,CAACS,SAAD,CAAV,CADoB,EAE3BrB,UAAU,CAAC,mBAAD,EAAsB,CAACuJ,MAAD,EAASyjB,SAAT,EAAoBE,WAApB,EAAiCjf,MAAjC,CAAtB,CAFiB,CAAD,EAG3Bsf,iBAH2B,CAA9B;AAKA;AACA;AACA;AACA;AACA;;IACM8C,iB;;;;;;;WACF,gBAAO;AACH,UAAI,CAACpD,MAAM,CAAC/oB,MAAR,IAAkB,CAAC+oB,MAAM,CAAC/oB,MAAP,CAAcC,IAArC,EAA2C;AACvC,cAAM,IAAIogB,KAAJ,CAAU,gFAAV,CAAN;AACH;;AACD,aAAO7gB,OAAO,CAACC,OAAR,EAAP;AACH;;;;KAGL;;;AAEA,IAAI2sB,eAAJ;AACA;AACA;AACA;;AACA,SAASC,cAAT,GAA0B;AACtB,SAAO,CACHloB,iBADG,EAEHmD,SAFG,EAGHiE,YAHG,EAIHuC,YAJG,EAKH2D,aALG,EAMHuC,WANG,EAOHkG,MAPG,EAQH0F,SARG,EASH2C,UATG,EAUHiC,WAVG,EAWHR,eAXG,EAYHG,gBAZG,EAaHmC,YAbG,EAcHW,eAdG,CAAP;AAgBH;AACD;AACA;AACA;AACA;;;AACA,IAAIqF,aAAa,GAAGF,eAAe;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAC/B;AACJ;AACA;AACI,qBAAeG,uBAAf,EAAwC;AACpC,aAAO;AACHC,QAAAA,QAAQ,EAAEJ,eADP;AAEHK,QAAAA,SAAS,YACFvD,yBADE,GACyB;AAAE9G,UAAAA,OAAO,EAAEvjB,aAAX;AAA0B6tB,UAAAA,QAAQ,EAAErD;AAApC,SADzB,EAEL;AAAEjH,UAAAA,OAAO,EAAEgH,oBAAX;AAAiCuD,UAAAA,QAAQ,EAAEJ;AAA3C,SAFK;AAFN,OAAP;AAOH;AAZ8B;;AAAA;AAAA,GAAnC;;AAcAD,aAAa,CAACxtB,IAAd,GAAqB,SAAS8tB,qBAAT,CAA+B5tB,CAA/B,EAAkC;AAAE,SAAO,KAAKA,CAAC,IAAIstB,aAAV,GAAP;AAAoC,CAA7F;;AACAA,aAAa,CAACO,IAAd,GAAqB,aAAcluB,MAAM,CAACmuB,gBAAP,CAAwB;AAAExpB,EAAAA,IAAI,EAAEgpB;AAAR,CAAxB,CAAnC;AACAA,aAAa,CAACS,IAAd,GAAqB,aAAcpuB,MAAM,CAACquB,gBAAP,CAAwB,EAAxB,CAAnC;;AACA,CAAC,YAAY;AAAE,GAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyBruB,aAAzB,EAAwC,CAAC;AACnGyE,IAAAA,IAAI,EAAErH;AAD6F,GAAD,CAAxC,EAE1D,IAF0D,EAEpD,IAFoD,CAAnD;AAEO,CAFtB;;AAGA,CAAC,YAAY;AAAE,GAAC,OAAOgxB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyB9tB,oBAAzB,EAA+C,CAAC;AAC1GkE,IAAAA,IAAI,EAAErH;AADoG,GAAD,CAA/C,EAE1D,YAAY;AAAE,WAAO,CAAC;AAAEqH,MAAAA,IAAI,EAAEzE;AAAR,KAAD,EAA0B;AAAEyE,MAAAA,IAAI,EAAE3E,MAAM,CAACzC;AAAf,KAA1B,CAAP;AAA4D,GAFhB,EAEkB,IAFlB,CAAnD;AAE6E,CAF5F;;AAGA,CAAC,YAAY;AAAE,GAAC,OAAO+wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyB3pB,YAAzB,EAAuC,CAAC;AAClGD,IAAAA,IAAI,EAAErH;AAD4F,GAAD,CAAvC,EAE1D,YAAY;AAAE,WAAO,CAAC;AAAEqH,MAAAA,IAAI,EAAElE;AAAR,KAAD,CAAP;AAA0C,GAFE,EAEA,IAFA,CAAnD;AAE2D,CAF1E;;AAGA,CAAC,YAAY;AAAE,GAAC,OAAO6tB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyB/oB,iBAAzB,EAA4C,CAAC;AACvGb,IAAAA,IAAI,EAAElH,SADiG;AAEvGojB,IAAAA,IAAI,EAAE,CAAC;AACC2N,MAAAA,QAAQ,EAAE;AADX,KAAD;AAFiG,GAAD,CAA5C,EAK1D,YAAY;AAAE,WAAO,CAAC;AAAE7pB,MAAAA,IAAI,EAAEC;AAAR,KAAD,CAAP;AAAkC,GALU,EAKR;AAAEhC,IAAAA,OAAO,EAAE,CAAC;AAC1D+B,MAAAA,IAAI,EAAEnH;AADoD,KAAD;AAAX,GALQ,CAAnD;AAOC,CAPhB;;AAQA,CAAC,YAAY;AAAE,GAAC,OAAO8wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyB3nB,aAAzB,EAAwC,CAAC;AACnGjC,IAAAA,IAAI,EAAErH;AAD6F,GAAD,CAAxC,EAE1D,YAAY;AAAE,WAAO,CAAC;AAAEqH,MAAAA,IAAI,EAAElE;AAAR,KAAD,EAAiC;AAAEkE,MAAAA,IAAI,EAAE3E,MAAM,CAACzC;AAAf,KAAjC,CAAP;AAAmE,GAFvB,EAEyB,IAFzB,CAAnD;AAEoF,CAFnG;;AAGA,CAAC,YAAY;AAAE,GAAC,OAAO+wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyB5lB,SAAzB,EAAoC,CAAC;AAC/FhE,IAAAA,IAAI,EAAElH,SADyF;AAE/FojB,IAAAA,IAAI,EAAE,CAAC;AACC2N,MAAAA,QAAQ,EAAE;AADX,KAAD;AAFyF,GAAD,CAApC,EAK1D,YAAY;AAAE,WAAO,CAAC;AAAE7pB,MAAAA,IAAI,EAAEiC;AAAR,KAAD,CAAP;AAAmC,GALS,EAKP;AAAEU,IAAAA,SAAS,EAAE,CAAC;AAC7D3C,MAAAA,IAAI,EAAEnH;AADuD,KAAD,CAAb;AAE/C+J,IAAAA,SAAS,EAAE,CAAC;AACZ5C,MAAAA,IAAI,EAAEnH,KADM;AAEZqjB,MAAAA,IAAI,EAAE,CAAC,iBAAD;AAFM,KAAD,CAFoC;AAK/CrZ,IAAAA,QAAQ,EAAE,CAAC;AACX7C,MAAAA,IAAI,EAAEnH;AADK,KAAD,CALqC;AAO/CmK,IAAAA,MAAM,EAAE,CAAC;AACThD,MAAAA,IAAI,EAAEnH;AADG,KAAD,CAPuC;AAS/CsE,IAAAA,cAAc,EAAE,CAAC;AACjB6C,MAAAA,IAAI,EAAEnH;AADW,KAAD,CAT+B;AAW/CsK,IAAAA,YAAY,EAAE,CAAC;AACfnD,MAAAA,IAAI,EAAEnH;AADS,KAAD,CAXiC;AAa/CoF,IAAAA,OAAO,EAAE,CAAC;AACV+B,MAAAA,IAAI,EAAEnH;AADI,KAAD,CAbsC;AAe/CoL,IAAAA,YAAY,EAAE,CAAC;AACfjE,MAAAA,IAAI,EAAEhH;AADS,KAAD,CAfiC;AAiB/CkL,IAAAA,WAAW,EAAE,CAAC;AACdlE,MAAAA,IAAI,EAAEhH;AADQ,KAAD,CAjBkC;AAmB/CmL,IAAAA,cAAc,EAAE,CAAC;AACjBnE,MAAAA,IAAI,EAAEhH;AADW,KAAD,CAnB+B;AAqB/CoL,IAAAA,IAAI,EAAE,CAAC;AACPpE,MAAAA,IAAI,EAAEhH;AADC,KAAD,CArByC;AAuB/CqL,IAAAA,OAAO,EAAE,CAAC;AACVrE,MAAAA,IAAI,EAAEhH;AADI,KAAD,CAvBsC;AAyB/CsL,IAAAA,SAAS,EAAE,CAAC;AACZtE,MAAAA,IAAI,EAAEhH;AADM,KAAD,CAzBoC;AA2B/CuL,IAAAA,SAAS,EAAE,CAAC;AACZvE,MAAAA,IAAI,EAAEhH;AADM,KAAD,CA3BoC;AA6B/CwL,IAAAA,SAAS,EAAE,CAAC;AACZxE,MAAAA,IAAI,EAAEhH;AADM,KAAD,CA7BoC;AA+B/CyL,IAAAA,QAAQ,EAAE,CAAC;AACXzE,MAAAA,IAAI,EAAEhH;AADK,KAAD,CA/BqC;AAiC/C0L,IAAAA,SAAS,EAAE,CAAC;AACZ1E,MAAAA,IAAI,EAAEhH;AADM,KAAD,CAjCoC;AAmC/C2L,IAAAA,OAAO,EAAE,CAAC;AACV3E,MAAAA,IAAI,EAAEhH;AADI,KAAD,CAnCsC;AAqC/C4L,IAAAA,YAAY,EAAE,CAAC;AACf5E,MAAAA,IAAI,EAAEhH;AADS,KAAD,CArCiC;AAuC/C6L,IAAAA,UAAU,EAAE,CAAC;AACb7E,MAAAA,IAAI,EAAEhH;AADO,KAAD,CAvCmC;AAyC/CwJ,IAAAA,QAAQ,EAAE,CAAC;AACXxC,MAAAA,IAAI,EAAEnH;AADK,KAAD,CAzCqC;AA2C/C6J,IAAAA,SAAS,EAAE,CAAC;AACZ1C,MAAAA,IAAI,EAAEnH;AADM,KAAD,CA3CoC;AA6C/CiK,IAAAA,SAAS,EAAE,CAAC;AACZ9C,MAAAA,IAAI,EAAEnH;AADM,KAAD,CA7CoC;AA+C/CkK,IAAAA,WAAW,EAAE,CAAC;AACd/C,MAAAA,IAAI,EAAEnH;AADQ,KAAD,CA/CkC;AAiD/CoK,IAAAA,WAAW,EAAE,CAAC;AACdjD,MAAAA,IAAI,EAAEnH;AADQ,KAAD,CAjDkC;AAmD/CqK,IAAAA,aAAa,EAAE,CAAC;AAChBlD,MAAAA,IAAI,EAAEnH;AADU,KAAD,CAnDgC;AAqD/CuK,IAAAA,MAAM,EAAE,CAAC;AACTpD,MAAAA,IAAI,EAAEnH;AADG,KAAD;AArDuC,GALO,CAAnD;AA4DC,CA5DhB;;AA6DA,CAAC,YAAY;AAAE,GAAC,OAAO8wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyBljB,gBAAzB,EAA2C,CAAC;AACtG1G,IAAAA,IAAI,EAAErH;AADgG,GAAD,CAA3C,EAE1D,YAAY;AAAE,WAAO,CAAC;AAAEqH,MAAAA,IAAI,EAAElE;AAAR,KAAD,EAAiC;AAAEkE,MAAAA,IAAI,EAAE3E,MAAM,CAACzC;AAAf,KAAjC,CAAP;AAAmE,GAFvB,EAEyB,IAFzB,CAAnD;AAEoF,CAFnG;;AAGA,CAAC,YAAY;AAAE,GAAC,OAAO+wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyB3hB,YAAzB,EAAuC,CAAC;AAClGjI,IAAAA,IAAI,EAAElH,SAD4F;AAElGojB,IAAAA,IAAI,EAAE,CAAC;AACC2N,MAAAA,QAAQ,EAAE;AADX,KAAD;AAF4F,GAAD,CAAvC,EAK1D,YAAY;AAAE,WAAO,CAAC;AAAE7pB,MAAAA,IAAI,EAAE0G;AAAR,KAAD,CAAP;AAAsC,GALM,EAKJ;AAAEyB,IAAAA,UAAU,EAAE,CAAC;AACjEnI,MAAAA,IAAI,EAAEhH;AAD2D,KAAD,CAAd;AAElD8N,IAAAA,OAAO,EAAE,CAAC;AACV9G,MAAAA,IAAI,EAAEnH;AADI,KAAD,CAFyC;AAIlD+N,IAAAA,KAAK,EAAE,CAAC;AACR5G,MAAAA,IAAI,EAAEnH;AADE,KAAD;AAJ2C,GALI,CAAnD;AAWC,CAXhB;;AAYA,CAAC,YAAY;AAAE,GAAC,OAAO8wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyBtgB,gBAAzB,EAA2C,CAAC;AACtGtJ,IAAAA,IAAI,EAAErH;AADgG,GAAD,CAA3C,EAE1D,YAAY;AAAE,WAAO,CAAC;AAAEqH,MAAAA,IAAI,EAAEzE;AAAR,KAAD,CAAP;AAAmC,GAFS,EAEP,IAFO,CAAnD;AAEoD,CAFnE;;AAGA,CAAC,YAAY;AAAE,GAAC,OAAOouB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyBpf,YAAzB,EAAuC,CAAC;AAClGxK,IAAAA,IAAI,EAAElH,SAD4F;AAElGojB,IAAAA,IAAI,EAAE,CAAC;AACC2N,MAAAA,QAAQ,EAAE;AADX,KAAD;AAF4F,GAAD,CAAvC,EAK1D,YAAY;AAAE,WAAO,CAAC;AAAE7pB,MAAAA,IAAI,EAAEqJ,iBAAR;AAA2BiC,MAAAA,UAAU,EAAE,CAAC;AACtDtL,QAAAA,IAAI,EAAE/G;AADgD,OAAD;AAAvC,KAAD,EAEX;AAAE+G,MAAAA,IAAI,EAAEsJ;AAAR,KAFW,CAAP;AAE0B,GAPkB,EAOhB;AAAEqB,IAAAA,YAAY,EAAE,CAAC;AACvD3K,MAAAA,IAAI,EAAEnH;AADiD,KAAD;AAAhB,GAPgB,CAAnD;AASC,CAThB;;AAUA,CAAC,YAAY;AAAE,GAAC,OAAO8wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyBre,aAAzB,EAAwC,CAAC;AACnGvL,IAAAA,IAAI,EAAErH;AAD6F,GAAD,CAAxC,EAE1D,YAAY;AAAE,WAAO,CAAC;AAAEqH,MAAAA,IAAI,EAAElE;AAAR,KAAD,EAAiC;AAAEkE,MAAAA,IAAI,EAAE3E,MAAM,CAACzC;AAAf,KAAjC,CAAP;AAAmE,GAFvB,EAEyB,IAFzB,CAAnD;AAEoF,CAFnG;;AAGA,CAAC,YAAY;AAAE,GAAC,OAAO+wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyB5c,iBAAzB,EAA4C,CAAC;AACvGhN,IAAAA,IAAI,EAAErH;AADiG,GAAD,CAA5C,EAE1D,YAAY;AAAE,WAAO,CAAC;AAAEqH,MAAAA,IAAI,EAAElE;AAAR,KAAD,EAAiC;AAAEkE,MAAAA,IAAI,EAAE3E,MAAM,CAACzC;AAAf,KAAjC,EAA0D;AAAEoH,MAAAA,IAAI,EAAEuL;AAAR,KAA1D,CAAP;AAA4F,GAFhD,EAEkD,IAFlD,CAAnD;AAE6G,CAF5H;;AAGA,CAAC,YAAY;AAAE,GAAC,OAAOoe,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyBzb,aAAzB,EAAwC,CAAC;AACnGnO,IAAAA,IAAI,EAAE7G,SAD6F;AAEnG+iB,IAAAA,IAAI,EAAE,CAAC;AACC2N,MAAAA,QAAQ,EAAE,iBADX;AAECta,MAAAA,QAAQ;AAFT,KAAD;AAF6F,GAAD,CAAxC,EAS1D,YAAY;AAAE,WAAO,CAAC;AAAEvP,MAAAA,IAAI,EAAEgN;AAAR,KAAD,EAA8B;AAAEhN,MAAAA,IAAI,EAAE3E,MAAM,CAACnC;AAAf,KAA9B,CAAP;AAAoE,GATxB,EAS0B;AAAEoV,IAAAA,MAAM,EAAE,CAAC;AAC3FtO,MAAAA,IAAI,EAAEnH;AADqF,KAAD,CAAV;AAEhF0V,IAAAA,eAAe,EAAE,CAAC;AAClBvO,MAAAA,IAAI,EAAEhH;AADY,KAAD,CAF+D;AAIhFwJ,IAAAA,QAAQ,EAAE,CAAC;AACXxC,MAAAA,IAAI,EAAEnH;AADK,KAAD,CAJsE;AAMhF6J,IAAAA,SAAS,EAAE,CAAC;AACZ1C,MAAAA,IAAI,EAAEnH;AADM,KAAD,CANqE;AAQhFgV,IAAAA,cAAc,EAAE,CAAC;AACjB7N,MAAAA,IAAI,EAAEnH;AADW,KAAD,CARgE;AAUhFuK,IAAAA,MAAM,EAAE,CAAC;AACTpD,MAAAA,IAAI,EAAEnH;AADG,KAAD,CAVwE;AAYhF+U,IAAAA,QAAQ,EAAE,CAAC;AACX5N,MAAAA,IAAI,EAAEnH;AADK,KAAD;AAZsE,GAT1B,CAAnD;AAuBC,CAvBhB;;AAwBA,CAAC,YAAY;AAAE,GAAC,OAAO8wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyB3Z,eAAzB,EAA0C,CAAC;AACrGjQ,IAAAA,IAAI,EAAErH;AAD+F,GAAD,CAA1C,EAE1D,YAAY;AAAE,WAAO,CAAC;AAAEqH,MAAAA,IAAI,EAAElE;AAAR,KAAD,EAAiC;AAAEkE,MAAAA,IAAI,EAAE3E,MAAM,CAACzC;AAAf,KAAjC,CAAP;AAAmE,GAFvB,EAEyB,IAFzB,CAAnD;AAEoF,CAFnG;;AAGA,CAAC,YAAY;AAAE,GAAC,OAAO+wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyBlZ,WAAzB,EAAsC,CAAC;AACjG1Q,IAAAA,IAAI,EAAElH,SAD2F;AAEjGojB,IAAAA,IAAI,EAAE,CAAC;AACC2N,MAAAA,QAAQ,EAAE;AADX,KAAD;AAF2F,GAAD,CAAtC,EAK1D,YAAY;AAAE,WAAO,CAAC;AAAE7pB,MAAAA,IAAI,EAAEiQ;AAAR,KAAD,CAAP;AAAqC,GALO,EAKL;AAAEtN,IAAAA,SAAS,EAAE,CAAC;AAC/D3C,MAAAA,IAAI,EAAEnH;AADyD,KAAD,CAAb;AAEjDsX,IAAAA,gBAAgB,EAAE,CAAC;AACnBnQ,MAAAA,IAAI,EAAEnH;AADa,KAAD,CAF+B;AAIjDuX,IAAAA,cAAc,EAAE,CAAC;AACjBpQ,MAAAA,IAAI,EAAEnH;AADW,KAAD,CAJiC;AAMjDwX,IAAAA,mBAAmB,EAAE,CAAC;AACtBrQ,MAAAA,IAAI,EAAEnH;AADgB,KAAD,CAN4B;AAQjDyX,IAAAA,GAAG,EAAE,CAAC;AACNtQ,MAAAA,IAAI,EAAEnH;AADA,KAAD,CAR4C;AAUjDuK,IAAAA,MAAM,EAAE,CAAC;AACTpD,MAAAA,IAAI,EAAEnH;AADG,KAAD,CAVyC;AAYjDsP,IAAAA,UAAU,EAAE,CAAC;AACbnI,MAAAA,IAAI,EAAEhH;AADO,KAAD,CAZqC;AAcjD2X,IAAAA,qBAAqB,EAAE,CAAC;AACxB3Q,MAAAA,IAAI,EAAEhH;AADkB,KAAD,CAd0B;AAgBjD4X,IAAAA,YAAY,EAAE,CAAC;AACf5Q,MAAAA,IAAI,EAAEhH;AADS,KAAD;AAhBmC,GALK,CAAnD;AAuBC,CAvBhB;;AAwBA,CAAC,YAAY;AAAE,GAAC,OAAO2wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyBpX,cAAzB,EAAyC,CAAC;AACpGxS,IAAAA,IAAI,EAAErH;AAD8F,GAAD,CAAzC,EAE1D,YAAY;AAAE,WAAO,CAAC;AAAEqH,MAAAA,IAAI,EAAElE;AAAR,KAAD,EAAiC;AAAEkE,MAAAA,IAAI,EAAE3E,MAAM,CAACzC;AAAf,KAAjC,CAAP;AAAmE,GAFvB,EAEyB,IAFzB,CAAnD;AAEoF,CAFnG;;AAGA,CAAC,YAAY;AAAE,GAAC,OAAO+wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyB7V,eAAzB,EAA0C,CAAC;AACrG/T,IAAAA,IAAI,EAAErH;AAD+F,GAAD,CAA1C,EAE1D,YAAY;AAAE,WAAO,CAAC;AAAEqH,MAAAA,IAAI,EAAElE;AAAR,KAAD,EAAiC;AAAEkE,MAAAA,IAAI,EAAE3E,MAAM,CAACzC;AAAf,KAAjC,CAAP;AAAmE,GAFvB,EAEyB,IAFzB,CAAnD;AAEoF,CAFnG;;AAGA,CAAC,YAAY;AAAE,GAAC,OAAO+wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyB7T,gBAAzB,EAA2C,CAAC;AACtG/V,IAAAA,IAAI,EAAErH;AADgG,GAAD,CAA3C,EAE1D,YAAY;AAAE,WAAO,CAAC;AAAEqH,MAAAA,IAAI,EAAElE;AAAR,KAAD,EAAiC;AAAEkE,MAAAA,IAAI,EAAE3E,MAAM,CAACzC;AAAf,KAAjC,CAAP;AAAmE,GAFvB,EAEyB,IAFzB,CAAnD;AAEoF,CAFnG;;AAGA,CAAC,YAAY;AAAE,GAAC,OAAO+wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyBhT,MAAzB,EAAiC,CAAC;AAC5F5W,IAAAA,IAAI,EAAE7G,SADsF;AAE5F+iB,IAAAA,IAAI,EAAE,CAAC;AACC2N,MAAAA,QAAQ,EAAE,SADX;AAECV,MAAAA,SAAS,EAAE,CACPlnB,aADO,EAEPyE,gBAFO,EAGPA,gBAHO,EAIP4C,gBAJO,EAKPxN,oBALO,EAMPkR,iBANO,EAOPiD,eAPO,EAQPhQ,YARO,EASPsL,aATO,EAUPiH,cAVO,EAWPuB,eAXO,EAYPgC,gBAZO,CAFZ;AAgBC+T,MAAAA,IAAI,EAAE;AACF;AACA,6CAAqC;AAFnC,OAhBP;AAoBCva,MAAAA,QAAQ,iNApBT;AA0BC4H,MAAAA,MAAM,EAAE;AA1BT,KAAD;AAFsF,GAAD,CAAjC,EAsC1D,YAAY;AAAE,WAAO,CAAC;AAAEnX,MAAAA,IAAI,EAAE3E,MAAM,CAACnC;AAAf,KAAD,EAA8B;AAAE8G,MAAAA,IAAI,EAAElE;AAAR,KAA9B,EAA8D;AAAEkE,MAAAA,IAAI,EAAE+B,MAAR;AAAgBuJ,MAAAA,UAAU,EAAE,CAAC;AACxGtL,QAAAA,IAAI,EAAE5G,MADkG;AAExG8iB,QAAAA,IAAI,EAAE,CAAC7iB,WAAD;AAFkG,OAAD;AAA5B,KAA9D,EAGX;AAAE2G,MAAAA,IAAI,EAAEsJ;AAAR,KAHW,EAGiB;AAAEtJ,MAAAA,IAAI,EAAE3E,MAAM,CAACzC;AAAf,KAHjB,CAAP;AAGmD,GAzCP,EAyCS;AAAE8J,IAAAA,SAAS,EAAE,CAAC;AAC7E1C,MAAAA,IAAI,EAAEnH;AADuE,KAAD,CAAb;AAE/D2J,IAAAA,QAAQ,EAAE,CAAC;AACXxC,MAAAA,IAAI,EAAEnH;AADK,KAAD,CAFqD;AAI/DsG,IAAAA,IAAI,EAAE,CAAC;AACPa,MAAAA,IAAI,EAAEnH;AADC,KAAD,CAJyD;AAM/D+J,IAAAA,SAAS,EAAE,CAAC;AACZ5C,MAAAA,IAAI,EAAEnH,KADM;AAEZqjB,MAAAA,IAAI,EAAE,CAAC,cAAD;AAFM,KAAD,CANoD;AAS/DnF,IAAAA,sBAAsB,EAAE,CAAC;AACzB/W,MAAAA,IAAI,EAAEnH;AADmB,KAAD,CATuC;AAW/Dme,IAAAA,gBAAgB,EAAE,CAAC;AACnBhX,MAAAA,IAAI,EAAEnH;AADa,KAAD,CAX6C;AAa/Doe,IAAAA,WAAW,EAAE,CAAC;AACdjX,MAAAA,IAAI,EAAEnH;AADQ,KAAD,CAbkD;AAe/Dqe,IAAAA,iBAAiB,EAAE,CAAC;AACpBlX,MAAAA,IAAI,EAAEnH;AADc,KAAD,CAf4C;AAiB/Dse,IAAAA,MAAM,EAAE,CAAC;AACTnX,MAAAA,IAAI,EAAEnH;AADG,KAAD,CAjBuD;AAmB/Due,IAAAA,UAAU,EAAE,CAAC;AACbpX,MAAAA,IAAI,EAAEnH;AADO,KAAD,CAnBmD;AAqB/D8G,IAAAA,SAAS,EAAE,CAAC;AACZK,MAAAA,IAAI,EAAEnH;AADM,KAAD,CArBoD;AAuB/Dwe,IAAAA,YAAY,EAAE,CAAC;AACfrX,MAAAA,IAAI,EAAEnH;AADS,KAAD,CAvBiD;AAyB/Dye,IAAAA,cAAc,EAAE,CAAC;AACjBtX,MAAAA,IAAI,EAAEnH;AADW,KAAD,CAzB+C;AA2B/D0e,IAAAA,UAAU,EAAE,CAAC;AACbvX,MAAAA,IAAI,EAAEnH;AADO,KAAD,CA3BmD;AA6B/D2e,IAAAA,aAAa,EAAE,CAAC;AAChBxX,MAAAA,IAAI,EAAEnH;AADU,KAAD,CA7BgD;AA+B/D4e,IAAAA,iBAAiB,EAAE,CAAC;AACpBzX,MAAAA,IAAI,EAAEnH;AADc,KAAD,CA/B4C;AAiC/D6e,IAAAA,SAAS,EAAE,CAAC;AACZ1X,MAAAA,IAAI,EAAEnH;AADM,KAAD,CAjCoD;AAmC/D8e,IAAAA,cAAc,EAAE,CAAC;AACjB3X,MAAAA,IAAI,EAAEnH;AADW,KAAD,CAnC+C;AAqC/D+e,IAAAA,qBAAqB,EAAE,CAAC;AACxB5X,MAAAA,IAAI,EAAEnH;AADkB,KAAD,CArCwC;AAuC/Dgf,IAAAA,eAAe,EAAE,CAAC;AAClB7X,MAAAA,IAAI,EAAEnH;AADY,KAAD,CAvC8C;AAyC/Dif,IAAAA,IAAI,EAAE,CAAC;AACP9X,MAAAA,IAAI,EAAEnH;AADC,KAAD,CAzCyD;AA2C/Dmf,IAAAA,QAAQ,EAAE,CAAC;AACXhY,MAAAA,IAAI,EAAEhH;AADK,KAAD,CA3CqD;AA6C/Dif,IAAAA,aAAa,EAAE,CAAC;AAChBjY,MAAAA,IAAI,EAAEhH;AADU,KAAD,CA7CgD;AA+C/Dkf,IAAAA,WAAW,EAAE,CAAC;AACdlY,MAAAA,IAAI,EAAEhH;AADQ,KAAD,CA/CkD;AAiD/DiL,IAAAA,YAAY,EAAE,CAAC;AACfjE,MAAAA,IAAI,EAAEhH;AADS,KAAD,CAjDiD;AAmD/Dmf,IAAAA,YAAY,EAAE,CAAC;AACfnY,MAAAA,IAAI,EAAEhH;AADS,KAAD,CAnDiD;AAqD/Dof,IAAAA,eAAe,EAAE,CAAC;AAClBpY,MAAAA,IAAI,EAAEhH;AADY,KAAD,CArD8C;AAuD/Dqf,IAAAA,IAAI,EAAE,CAAC;AACPrY,MAAAA,IAAI,EAAEhH;AADC,KAAD,CAvDyD;AAyD/Dsf,IAAAA,UAAU,EAAE,CAAC;AACbtY,MAAAA,IAAI,EAAEhH;AADO,KAAD,CAzDmD;AA2D/Duf,IAAAA,QAAQ,EAAE,CAAC;AACXvY,MAAAA,IAAI,EAAEhH;AADK,KAAD,CA3DqD;AA6D/Dwf,IAAAA,WAAW,EAAE,CAAC;AACdxY,MAAAA,IAAI,EAAEhH;AADQ,KAAD,CA7DkD;AA+D/D4f,IAAAA,OAAO,EAAE,CAAC;AACV5Y,MAAAA,IAAI,EAAEnH;AADI,KAAD,CA/DsD;AAiE/DggB,IAAAA,OAAO,EAAE,CAAC;AACV7Y,MAAAA,IAAI,EAAEnH;AADI,KAAD,CAjEsD;AAmE/DigB,IAAAA,WAAW,EAAE,CAAC;AACd9Y,MAAAA,IAAI,EAAEnH;AADQ,KAAD,CAnEkD;AAqE/DkgB,IAAAA,eAAe,EAAE,CAAC;AAClB/Y,MAAAA,IAAI,EAAEnH;AADY,KAAD,CArE8C;AAuE/DmgB,IAAAA,eAAe,EAAE,CAAC;AAClBhZ,MAAAA,IAAI,EAAEnH;AADY,KAAD,CAvE8C;AAyE/DogB,IAAAA,cAAc,EAAE,CAAC;AACjBjZ,MAAAA,IAAI,EAAEnH;AADW,KAAD,CAzE+C;AA2E/DqgB,IAAAA,WAAW,EAAE,CAAC;AACdlZ,MAAAA,IAAI,EAAEnH;AADQ,KAAD,CA3EkD;AA6E/DsgB,IAAAA,kBAAkB,EAAE,CAAC;AACrBnZ,MAAAA,IAAI,EAAEnH;AADe,KAAD,CA7E2C;AA+E/DugB,IAAAA,iBAAiB,EAAE,CAAC;AACpBpZ,MAAAA,IAAI,EAAEnH;AADc,KAAD,CA/E4C;AAiF/DwgB,IAAAA,wBAAwB,EAAE,CAAC;AAC3BrZ,MAAAA,IAAI,EAAEnH;AADqB,KAAD,CAjFqC;AAmF/DkiB,IAAAA,gBAAgB,EAAE,CAAC;AACnB/a,MAAAA,IAAI,EAAEnH;AADa,KAAD,CAnF6C;AAqF/DygB,IAAAA,mBAAmB,EAAE,CAAC;AACtBtZ,MAAAA,IAAI,EAAEnH;AADgB,KAAD,CArF0C;AAuF/D0gB,IAAAA,qBAAqB,EAAE,CAAC;AACxBvZ,MAAAA,IAAI,EAAEnH;AADkB,KAAD,CAvFwC;AAyF/D2gB,IAAAA,iBAAiB,EAAE,CAAC;AACpBxZ,MAAAA,IAAI,EAAEnH;AADc,KAAD,CAzF4C;AA2F/D4gB,IAAAA,oBAAoB,EAAE,CAAC;AACvBzZ,MAAAA,IAAI,EAAEnH;AADiB,KAAD,CA3FyC;AA6F/D6gB,IAAAA,wBAAwB,EAAE,CAAC;AAC3B1Z,MAAAA,IAAI,EAAEnH;AADqB,KAAD,CA7FqC;AA+F/D8gB,IAAAA,WAAW,EAAE,CAAC;AACd3Z,MAAAA,IAAI,EAAEnH;AADQ,KAAD;AA/FkD,GAzCT,CAAnD;AA0IC,CA1IhB;;AA2IA,CAAC,YAAY;AAAE,GAAC,OAAO8wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyBtN,SAAzB,EAAoC,CAAC;AAC/Ftc,IAAAA,IAAI,EAAElH,SADyF;AAE/FojB,IAAAA,IAAI,EAAE,CAAC;AACC2N,MAAAA,QAAQ,EAAE,YADX;AAECV,MAAAA,SAAS,EAAE,CACP;AAAErK,QAAAA,OAAO,EAAEzV,iBAAX;AAA8B0V,QAAAA,WAAW,EAAEvlB,UAAU,CAAC;AAAA,iBAAM4iB,WAAN;AAAA,SAAD;AAArD,OADO,CAFZ;AAKCxa,MAAAA,MAAM,EAAE,CACJ,UADI,EACQ,WADR,EACqB,OADrB,EAC8B,OAD9B,EACuC,4BADvC,EACqE,SADrE,EAEJ,gBAFI,EAEc,SAFd,EAEyB,SAFzB,EAEoC,QAFpC,EAE8C,WAF9C,CALT;AASC2E,MAAAA,OAAO,EAAE,CAAC,aAAD,EAAgB,WAAhB,EAA6B,MAA7B,EAAqC,SAArC,EAAgD,WAAhD,EAA6D,UAA7D;AATV,KAAD;AAFyF,GAAD,CAApC,EAa1D,YAAY;AAAE,WAAO,CAAC;AAAEvG,MAAAA,IAAI,EAAEuL;AAAR,KAAD,CAAP;AAAmC,GAbS,EAaP;AAAE3I,IAAAA,SAAS,EAAE,CAAC;AAC7D5C,MAAAA,IAAI,EAAEnH,KADuD;AAE7DqjB,MAAAA,IAAI,EAAE,CAAC,iBAAD;AAFuD,KAAD,CAAb;AAG/Cje,IAAAA,OAAO,EAAE,CAAC;AACV+B,MAAAA,IAAI,EAAEnH;AADI,KAAD,CAHsC;AAK/C0jB,IAAAA,cAAc,EAAE,CAAC;AACjBvc,MAAAA,IAAI,EAAEnH;AADW,KAAD,CAL+B;AAO/CwT,IAAAA,OAAO,EAAE,CAAC;AACVrM,MAAAA,IAAI,EAAEnH;AADI,KAAD,CAPsC;AAS/CuK,IAAAA,MAAM,EAAE,CAAC;AACTpD,MAAAA,IAAI,EAAEnH;AADG,KAAD,CATuC;AAW/C8J,IAAAA,SAAS,EAAE,CAAC;AACZ3C,MAAAA,IAAI,EAAEnH,KADM;AAEZqjB,MAAAA,IAAI,EAAE,CAAC,iBAAD;AAFM,KAAD,CAXoC;AAc/CM,IAAAA,eAAe,EAAE,CAAC;AAClBxc,MAAAA,IAAI,EAAEhH;AADY,KAAD,CAd8B;AAgB/CyjB,IAAAA,WAAW,EAAE,CAAC;AACdzc,MAAAA,IAAI,EAAEhH;AADQ,KAAD,CAhBkC;AAkB/C0jB,IAAAA,cAAc,EAAE,CAAC;AACjB1c,MAAAA,IAAI,EAAEhH;AADW,KAAD,CAlB+B;AAoB/C2jB,IAAAA,gBAAgB,EAAE,CAAC;AACnB3c,MAAAA,IAAI,EAAEhH;AADa,KAAD,CApB6B;AAsB/CsL,IAAAA,SAAS,EAAE,CAAC;AACZtE,MAAAA,IAAI,EAAEhH;AADM,KAAD,CAtBoC;AAwB/CoL,IAAAA,IAAI,EAAE,CAAC;AACPpE,MAAAA,IAAI,EAAEhH;AADC,KAAD,CAxByC;AA0B/CqL,IAAAA,OAAO,EAAE,CAAC;AACVrE,MAAAA,IAAI,EAAEhH;AADI,KAAD,CA1BsC;AA4B/C0L,IAAAA,SAAS,EAAE,CAAC;AACZ1E,MAAAA,IAAI,EAAEhH;AADM,KAAD,CA5BoC;AA8B/CyL,IAAAA,QAAQ,EAAE,CAAC;AACXzE,MAAAA,IAAI,EAAEhH;AADK,KAAD,CA9BqC;AAgC/CmU,IAAAA,UAAU,EAAE,CAAC;AACbnN,MAAAA,IAAI,EAAEzG,eADO;AAEb2iB,MAAAA,IAAI,EAAE,CAAC/N,aAAD;AAFO,KAAD,CAhCmC;AAmC/C3L,IAAAA,QAAQ,EAAE,CAAC;AACXxC,MAAAA,IAAI,EAAEnH;AADK,KAAD,CAnCqC;AAqC/C6J,IAAAA,SAAS,EAAE,CAAC;AACZ1C,MAAAA,IAAI,EAAEnH;AADM,KAAD,CArCoC;AAuC/CkT,IAAAA,KAAK,EAAE,CAAC;AACR/L,MAAAA,IAAI,EAAEnH;AADE,KAAD,CAvCwC;AAyC/CoT,IAAAA,KAAK,EAAE,CAAC;AACRjM,MAAAA,IAAI,EAAEnH;AADE,KAAD,CAzCwC;AA2C/CsT,IAAAA,OAAO,EAAE,CAAC;AACVnM,MAAAA,IAAI,EAAEnH;AADI,KAAD,CA3CsC;AA6C/C4T,IAAAA,SAAS,EAAE,CAAC;AACZzM,MAAAA,IAAI,EAAEnH;AADM,KAAD;AA7CoC,GAbO,CAAnD;AA4DC,CA5DhB;;AA6DA,CAAC,YAAY;AAAE,GAAC,OAAO8wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyB3K,UAAzB,EAAqC,CAAC;AAChGjf,IAAAA,IAAI,EAAElH,SAD0F;AAEhGojB,IAAAA,IAAI,EAAE,CAAC;AACC2N,MAAAA,QAAQ,EAAE;AADX,KAAD;AAF0F,GAAD,CAArC,EAK1D,YAAY;AAAE,WAAO,CAAC;AAAE7pB,MAAAA,IAAI,EAAEwS;AAAR,KAAD,CAAP;AAAoC,GALQ,EAKN;AAAE7P,IAAAA,SAAS,EAAE,CAAC;AAC9D3C,MAAAA,IAAI,EAAEnH;AADwD,KAAD,CAAb;AAEhD+J,IAAAA,SAAS,EAAE,CAAC;AACZ5C,MAAAA,IAAI,EAAEnH,KADM;AAEZqjB,MAAAA,IAAI,EAAE,CAAC,eAAD;AAFM,KAAD,CAFqC;AAKhDrZ,IAAAA,QAAQ,EAAE,CAAC;AACX7C,MAAAA,IAAI,EAAEnH;AADK,KAAD,CALsC;AAOhDga,IAAAA,QAAQ,EAAE,CAAC;AACX7S,MAAAA,IAAI,EAAEnH;AADK,KAAD,CAPsC;AAShDia,IAAAA,KAAK,EAAE,CAAC;AACR9S,MAAAA,IAAI,EAAEnH;AADE,KAAD,CATyC;AAWhDsmB,IAAAA,SAAS,EAAE,CAAC;AACZnf,MAAAA,IAAI,EAAEhH;AADM,KAAD,CAXqC;AAahDomB,IAAAA,YAAY,EAAE,CAAC;AACfpf,MAAAA,IAAI,EAAEhH;AADS,KAAD,CAbkC;AAehDqmB,IAAAA,QAAQ,EAAE,CAAC;AACXrf,MAAAA,IAAI,EAAEhH;AADK,KAAD,CAfsC;AAiBhDsmB,IAAAA,WAAW,EAAE,CAAC;AACdtf,MAAAA,IAAI,EAAEhH;AADQ,KAAD,CAjBmC;AAmBhDumB,IAAAA,aAAa,EAAE,CAAC;AAChBvf,MAAAA,IAAI,EAAEhH;AADU,KAAD,CAnBiC;AAqBhDwmB,IAAAA,aAAa,EAAE,CAAC;AAChBxf,MAAAA,IAAI,EAAEhH;AADU,KAAD,CArBiC;AAuBhDymB,IAAAA,aAAa,EAAE,CAAC;AAChBzf,MAAAA,IAAI,EAAEhH;AADU,KAAD,CAvBiC;AAyBhD0mB,IAAAA,YAAY,EAAE,CAAC;AACf1f,MAAAA,IAAI,EAAEhH;AADS,KAAD,CAzBkC;AA2BhD2mB,IAAAA,aAAa,EAAE,CAAC;AAChB3f,MAAAA,IAAI,EAAEhH;AADU,KAAD,CA3BiC;AA6BhD4mB,IAAAA,WAAW,EAAE,CAAC;AACd5f,MAAAA,IAAI,EAAEhH;AADQ,KAAD,CA7BmC;AA+BhD6mB,IAAAA,cAAc,EAAE,CAAC;AACjB7f,MAAAA,IAAI,EAAEhH;AADW,KAAD,CA/BgC;AAiChD8mB,IAAAA,eAAe,EAAE,CAAC;AAClB9f,MAAAA,IAAI,EAAEhH;AADY,KAAD,CAjC+B;AAmChD8J,IAAAA,SAAS,EAAE,CAAC;AACZ9C,MAAAA,IAAI,EAAEnH;AADM,KAAD,CAnCqC;AAqChDkK,IAAAA,WAAW,EAAE,CAAC;AACd/C,MAAAA,IAAI,EAAEnH;AADQ,KAAD,CArCmC;AAuChDoK,IAAAA,WAAW,EAAE,CAAC;AACdjD,MAAAA,IAAI,EAAEnH;AADQ,KAAD,CAvCmC;AAyChDqK,IAAAA,aAAa,EAAE,CAAC;AAChBlD,MAAAA,IAAI,EAAEnH;AADU,KAAD,CAzCiC;AA2ChDsK,IAAAA,YAAY,EAAE,CAAC;AACfnD,MAAAA,IAAI,EAAEnH;AADS,KAAD,CA3CkC;AA6ChDoF,IAAAA,OAAO,EAAE,CAAC;AACV+B,MAAAA,IAAI,EAAEnH;AADI,KAAD,CA7CuC;AA+ChDuK,IAAAA,MAAM,EAAE,CAAC;AACTpD,MAAAA,IAAI,EAAEnH;AADG,KAAD;AA/CwC,GALM,CAAnD;AAsDC,CAtDhB;;AAuDA,CAAC,YAAY;AAAE,GAAC,OAAO8wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyBlJ,eAAzB,EAA0C,CAAC;AACrG1gB,IAAAA,IAAI,EAAElH,SAD+F;AAErGojB,IAAAA,IAAI,EAAE,CAAC;AAAE2N,MAAAA,QAAQ,EAAE;AAAZ,KAAD;AAF+F,GAAD,CAA1C,EAG1D,IAH0D,EAGpD;AAAE5U,IAAAA,aAAa,EAAE,CAAC;AACpBjV,MAAAA,IAAI,EAAEnH;AADc,KAAD,CAAjB;AAEFqc,IAAAA,MAAM,EAAE,CAAC;AACTlV,MAAAA,IAAI,EAAEnH;AADG,KAAD,CAFN;AAIFsc,IAAAA,MAAM,EAAE,CAAC;AACTnV,MAAAA,IAAI,EAAEnH;AADG,KAAD,CAJN;AAMFyc,IAAAA,OAAO,EAAE,CAAC;AACVtV,MAAAA,IAAI,EAAEnH;AADI,KAAD,CANP;AAQF0c,IAAAA,OAAO,EAAE,CAAC;AACVvV,MAAAA,IAAI,EAAEnH;AADI,KAAD,CARP;AAUFiK,IAAAA,SAAS,EAAE,CAAC;AACZ9C,MAAAA,IAAI,EAAEnH;AADM,KAAD,CAVT;AAYFkK,IAAAA,WAAW,EAAE,CAAC;AACd/C,MAAAA,IAAI,EAAEnH;AADQ,KAAD,CAZX;AAcF6Z,IAAAA,IAAI,EAAE,CAAC;AACP1S,MAAAA,IAAI,EAAEnH;AADC,KAAD,CAdJ;AAgBF4c,IAAAA,QAAQ,EAAE,CAAC;AACXzV,MAAAA,IAAI,EAAEnH;AADK,KAAD,CAhBR;AAkBF6c,IAAAA,KAAK,EAAE,CAAC;AACR1V,MAAAA,IAAI,EAAEnH;AADE,KAAD,CAlBL;AAoBFoK,IAAAA,WAAW,EAAE,CAAC;AACdjD,MAAAA,IAAI,EAAEnH;AADQ,KAAD,CApBX;AAsBFqK,IAAAA,aAAa,EAAE,CAAC;AAChBlD,MAAAA,IAAI,EAAEnH;AADU,KAAD,CAtBb;AAwBFsK,IAAAA,YAAY,EAAE,CAAC;AACfnD,MAAAA,IAAI,EAAEnH;AADS,KAAD;AAxBZ,GAHoD,CAAnD;AA6BC,CA7BhB;;AA8BA,CAAC,YAAY;AAAE,GAAC,OAAO8wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyB/I,gBAAzB,EAA2C,CAAC;AACtG7gB,IAAAA,IAAI,EAAElH,SADgG;AAEtGojB,IAAAA,IAAI,EAAE,CAAC;AACC2N,MAAAA,QAAQ,EAAE,oBADX;AAECV,MAAAA,SAAS,EAAE,CACP;AAAErK,QAAAA,OAAO,EAAEzV,iBAAX;AAA8B0V,QAAAA,WAAW,EAAEvlB,UAAU,CAAC;AAAA,iBAAMonB,kBAAN;AAAA,SAAD;AAArD,OADO;AAFZ,KAAD;AAFgG,GAAD,CAA3C,EAQ1D,YAAY;AAAE,WAAO,EAAP;AAAY,GARgC,EAQ9B;AAAEE,IAAAA,eAAe,EAAE,CAAC;AAC5C9gB,MAAAA,IAAI,EAAEhH;AADsC,KAAD,CAAnB;AAExBwJ,IAAAA,QAAQ,EAAE,CAAC;AACXxC,MAAAA,IAAI,EAAEnH;AADK,KAAD,CAFc;AAIxB6J,IAAAA,SAAS,EAAE,CAAC;AACZ1C,MAAAA,IAAI,EAAEnH;AADM,KAAD;AAJa,GAR8B,CAAnD;AAcC,CAdhB;;AAeA,CAAC,YAAY;AAAE,GAAC,OAAO8wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyB1I,WAAzB,EAAsC,CAAC;AACjGlhB,IAAAA,IAAI,EAAElH,SAD2F;AAEjGojB,IAAAA,IAAI,EAAE,CAAC;AACC2N,MAAAA,QAAQ,EAAE;AADX,KAAD;AAF2F,GAAD,CAAtC,EAK1D,YAAY;AAAE,WAAO,CAAC;AAAE7pB,MAAAA,IAAI,EAAE+T;AAAR,KAAD,CAAP;AAAqC,GALO,EAKL;AAAEpR,IAAAA,SAAS,EAAE,CAAC;AAC/D3C,MAAAA,IAAI,EAAEnH;AADyD,KAAD,CAAb;AAEjD+J,IAAAA,SAAS,EAAE,CAAC;AACZ5C,MAAAA,IAAI,EAAEnH,KADM;AAEZqjB,MAAAA,IAAI,EAAE,CAAC,mBAAD;AAFM,KAAD,CAFsC;AAKjDrZ,IAAAA,QAAQ,EAAE,CAAC;AACX7C,MAAAA,IAAI,EAAEnH;AADK,KAAD,CALuC;AAOjDga,IAAAA,QAAQ,EAAE,CAAC;AACX7S,MAAAA,IAAI,EAAEnH;AADK,KAAD,CAPuC;AASjDoF,IAAAA,OAAO,EAAE,CAAC;AACV+B,MAAAA,IAAI,EAAEnH;AADI,KAAD,CATwC;AAWjDuoB,IAAAA,SAAS,EAAE,CAAC;AACZphB,MAAAA,IAAI,EAAEhH;AADM,KAAD,CAXsC;AAajDqoB,IAAAA,YAAY,EAAE,CAAC;AACfrhB,MAAAA,IAAI,EAAEhH;AADS,KAAD,CAbmC;AAejDsoB,IAAAA,QAAQ,EAAE,CAAC;AACXthB,MAAAA,IAAI,EAAEhH;AADK,KAAD,CAfuC;AAiBjDuoB,IAAAA,WAAW,EAAE,CAAC;AACdvhB,MAAAA,IAAI,EAAEhH;AADQ,KAAD,CAjBoC;AAmBjDwoB,IAAAA,aAAa,EAAE,CAAC;AAChBxhB,MAAAA,IAAI,EAAEhH;AADU,KAAD,CAnBkC;AAqBjDyoB,IAAAA,aAAa,EAAE,CAAC;AAChBzhB,MAAAA,IAAI,EAAEhH;AADU,KAAD,CArBkC;AAuBjD0oB,IAAAA,aAAa,EAAE,CAAC;AAChB1hB,MAAAA,IAAI,EAAEhH;AADU,KAAD,CAvBkC;AAyBjD2oB,IAAAA,YAAY,EAAE,CAAC;AACf3hB,MAAAA,IAAI,EAAEhH;AADS,KAAD,CAzBmC;AA2BjD4oB,IAAAA,aAAa,EAAE,CAAC;AAChB5hB,MAAAA,IAAI,EAAEhH;AADU,KAAD,CA3BkC;AA6BjD6oB,IAAAA,WAAW,EAAE,CAAC;AACd7hB,MAAAA,IAAI,EAAEhH;AADQ,KAAD,CA7BoC;AA+BjD8oB,IAAAA,cAAc,EAAE,CAAC;AACjB9hB,MAAAA,IAAI,EAAEhH;AADW,KAAD,CA/BiC;AAiCjD+oB,IAAAA,cAAc,EAAE,CAAC;AACjB/hB,MAAAA,IAAI,EAAEhH;AADW,KAAD,CAjCiC;AAmCjDiK,IAAAA,WAAW,EAAE,CAAC;AACdjD,MAAAA,IAAI,EAAEnH;AADQ,KAAD,CAnCoC;AAqCjDqK,IAAAA,aAAa,EAAE,CAAC;AAChBlD,MAAAA,IAAI,EAAEnH;AADU,KAAD,CArCkC;AAuCjDsK,IAAAA,YAAY,EAAE,CAAC;AACfnD,MAAAA,IAAI,EAAEnH;AADS,KAAD,CAvCmC;AAyCjDuK,IAAAA,MAAM,EAAE,CAAC;AACTpD,MAAAA,IAAI,EAAEnH;AADG,KAAD,CAzCyC;AA2CjDopB,IAAAA,MAAM,EAAE,CAAC;AACTjiB,MAAAA,IAAI,EAAEzG,eADG;AAET2iB,MAAAA,IAAI,EAAE,CAAC2E,gBAAD;AAFG,KAAD,CA3CyC;AA8CjDwB,IAAAA,aAAa,EAAE,CAAC;AAChBriB,MAAAA,IAAI,EAAEzG,eADU;AAEhB2iB,MAAAA,IAAI,EAAE,CAACwE,eAAD;AAFU,KAAD;AA9CkC,GALK,CAAnD;AAsDC,CAtDhB;;AAuDA,CAAC,YAAY;AAAE,GAAC,OAAOiJ,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyB5G,YAAzB,EAAuC,CAAC;AAClGhjB,IAAAA,IAAI,EAAElH,SAD4F;AAElGojB,IAAAA,IAAI,EAAE,CAAC;AACC2N,MAAAA,QAAQ,EAAE;AADX,KAAD;AAF4F,GAAD,CAAvC,EAK1D,YAAY;AAAE,WAAO,CAAC;AAAE7pB,MAAAA,IAAI,EAAE+V;AAAR,KAAD,CAAP;AAAsC,GALM,EAKJ;AAAEpT,IAAAA,SAAS,EAAE,CAAC;AAChE3C,MAAAA,IAAI,EAAEnH;AAD0D,KAAD,CAAb;AAElD+J,IAAAA,SAAS,EAAE,CAAC;AACZ5C,MAAAA,IAAI,EAAEnH,KADM;AAEZqjB,MAAAA,IAAI,EAAE,CAAC,oBAAD;AAFM,KAAD,CAFuC;AAKlDrZ,IAAAA,QAAQ,EAAE,CAAC;AACX7C,MAAAA,IAAI,EAAEnH;AADK,KAAD,CALwC;AAOlDsE,IAAAA,cAAc,EAAE,CAAC;AACjB6C,MAAAA,IAAI,EAAEnH;AADW,KAAD,CAPkC;AASlDsK,IAAAA,YAAY,EAAE,CAAC;AACfnD,MAAAA,IAAI,EAAEnH;AADS,KAAD,CAToC;AAWlDoF,IAAAA,OAAO,EAAE,CAAC;AACV+B,MAAAA,IAAI,EAAEnH;AADI,KAAD,CAXyC;AAalDsf,IAAAA,YAAY,EAAE,CAAC;AACfnY,MAAAA,IAAI,EAAEhH;AADS,KAAD,CAboC;AAelDiqB,IAAAA,cAAc,EAAE,CAAC;AACjBjjB,MAAAA,IAAI,EAAEhH;AADW,KAAD,CAfkC;AAiBlDkqB,IAAAA,iBAAiB,EAAE,CAAC;AACpBljB,MAAAA,IAAI,EAAEhH;AADc,KAAD,CAjB+B;AAmBlDoL,IAAAA,IAAI,EAAE,CAAC;AACPpE,MAAAA,IAAI,EAAEhH;AADC,KAAD,CAnB4C;AAqBlDqL,IAAAA,OAAO,EAAE,CAAC;AACVrE,MAAAA,IAAI,EAAEhH;AADI,KAAD,CArByC;AAuBlDsL,IAAAA,SAAS,EAAE,CAAC;AACZtE,MAAAA,IAAI,EAAEhH;AADM,KAAD,CAvBuC;AAyBlDuL,IAAAA,SAAS,EAAE,CAAC;AACZvE,MAAAA,IAAI,EAAEhH;AADM,KAAD,CAzBuC;AA2BlDwL,IAAAA,SAAS,EAAE,CAAC;AACZxE,MAAAA,IAAI,EAAEhH;AADM,KAAD,CA3BuC;AA6BlDyL,IAAAA,QAAQ,EAAE,CAAC;AACXzE,MAAAA,IAAI,EAAEhH;AADK,KAAD,CA7BwC;AA+BlD0L,IAAAA,SAAS,EAAE,CAAC;AACZ1E,MAAAA,IAAI,EAAEhH;AADM,KAAD,CA/BuC;AAiClD2L,IAAAA,OAAO,EAAE,CAAC;AACV3E,MAAAA,IAAI,EAAEhH;AADI,KAAD,CAjCyC;AAmClD6L,IAAAA,UAAU,EAAE,CAAC;AACb7E,MAAAA,IAAI,EAAEhH;AADO,KAAD,CAnCsC;AAqClDmd,IAAAA,KAAK,EAAE,CAAC;AACRnW,MAAAA,IAAI,EAAEnH;AADE,KAAD,CArC2C;AAuClDud,IAAAA,IAAI,EAAE,CAAC;AACPpW,MAAAA,IAAI,EAAEnH;AADC,KAAD,CAvC4C;AAyClDwd,IAAAA,KAAK,EAAE,CAAC;AACRrW,MAAAA,IAAI,EAAEnH;AADE,KAAD,CAzC2C;AA2ClDyd,IAAAA,IAAI,EAAE,CAAC;AACPtW,MAAAA,IAAI,EAAEnH;AADC,KAAD,CA3C4C;AA6ClDiK,IAAAA,SAAS,EAAE,CAAC;AACZ9C,MAAAA,IAAI,EAAEnH;AADM,KAAD,CA7CuC;AA+ClDkK,IAAAA,WAAW,EAAE,CAAC;AACd/C,MAAAA,IAAI,EAAEnH;AADQ,KAAD,CA/CqC;AAiDlDoK,IAAAA,WAAW,EAAE,CAAC;AACdjD,MAAAA,IAAI,EAAEnH;AADQ,KAAD,CAjDqC;AAmDlDqK,IAAAA,aAAa,EAAE,CAAC;AAChBlD,MAAAA,IAAI,EAAEnH;AADU,KAAD,CAnDmC;AAqDlDuK,IAAAA,MAAM,EAAE,CAAC;AACTpD,MAAAA,IAAI,EAAEnH;AADG,KAAD;AArD0C,GALI,CAAnD;AA4DC,CA5DhB;;AA6DA,CAAC,YAAY;AAAE,GAAC,OAAO8wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyBjG,eAAzB,EAA0C,CAAC;AACrG3jB,IAAAA,IAAI,EAAElH,SAD+F;AAErGojB,IAAAA,IAAI,EAAE,CAAC;AACC2N,MAAAA,QAAQ,EAAE;AADX,KAAD;AAF+F,GAAD,CAA1C,EAK1D,YAAY;AAAE,WAAO,CAAC;AAAE7pB,MAAAA,IAAI,EAAEC;AAAR,KAAD,CAAP;AAAkC,GALU,EAKR;AAAEhC,IAAAA,OAAO,EAAE,CAAC;AAC1D+B,MAAAA,IAAI,EAAEnH;AADoD,KAAD;AAAX,GALQ,CAAnD;AAOC,CAPhB;;AAQA,CAAC,YAAY;AAAE,GAAC,OAAO8wB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyBtF,WAAzB,EAAsC,CAAC;AACjGtkB,IAAAA,IAAI,EAAErH,UAD2F;AAEjGujB,IAAAA,IAAI,EAAE,CAAC;AAAEoJ,MAAAA,UAAU,EAAE;AAAd,KAAD;AAF2F,GAAD,CAAtC,EAG1D,YAAY;AAAE,WAAO,CAAC;AAAEtlB,MAAAA,IAAI,EAAEzE;AAAR,KAAD,CAAP;AAAmC,GAHS,EAGP,IAHO,CAAnD;AAGoD,CAHnE;;AAIA,CAAC,YAAY;AAAE,GAAC,OAAOouB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyB7D,iBAAzB,EAA4C,CAAC;AACvG/lB,IAAAA,IAAI,EAAErH;AADiG,GAAD,CAA5C,EAE1D,YAAY;AAAE,WAAO,CAAC;AAAEqH,MAAAA,IAAI,EAAEob,SAAR;AAAmB9P,MAAAA,UAAU,EAAE,CAAC;AAC9CtL,QAAAA,IAAI,EAAEpG;AADwC,OAAD,EAE9C;AACCoG,QAAAA,IAAI,EAAE5G,MADP;AAEC8iB,QAAAA,IAAI,EAAE,CAAC4J,oBAAD;AAFP,OAF8C;AAA/B,KAAD,EAKX;AAAE9lB,MAAAA,IAAI,EAAEwlB;AAAR,KALW,EAKU;AAAExlB,MAAAA,IAAI,EAAE0lB;AAAR,KALV,EAKiC;AAAE1lB,MAAAA,IAAI,EAAEyG,MAAR;AAAgB6E,MAAAA,UAAU,EAAE,CAAC;AAC3EtL,QAAAA,IAAI,EAAE5G,MADqE;AAE3E8iB,QAAAA,IAAI,EAAE,CAACriB,SAAD;AAFqE,OAAD;AAA5B,KALjC,CAAP;AAQF,GAV8C,EAU5C,IAV4C,CAAnD;AAUe,CAV9B;;AAWA,CAAC,YAAY;AAAE,GAAC,OAAO8vB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtuB,MAAM,CAACuuB,iBAAP,CAAyBZ,aAAzB,EAAwC,CAAC;AACnGhpB,IAAAA,IAAI,EAAElG,QAD6F;AAEnGoiB,IAAAA,IAAI,EAAE,CAAC;AAAE6N,MAAAA,YAAY,EAAEhB,cAAc,EAA9B;AAAkCiB,MAAAA,OAAO,EAAEjB,cAAc;AAAzD,KAAD;AAF6F,GAAD,CAAxC,EAG1D,IAH0D,EAGpD,IAHoD,CAAnD;AAGO,CAHtB;;AAIA,CAAC,YAAY;AAAE,GAAC,OAAOkB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD5uB,MAAM,CAAC6uB,kBAAP,CAA0BlB,aAA1B,EAAyC;AAAEe,IAAAA,YAAY,EAAE,CAAClpB,iBAAD,EAAoBmD,SAApB,EAA+BiE,YAA/B,EAA6CuC,YAA7C,EAA2D2D,aAA3D,EAA0EuC,WAA1E,EAAuFkG,MAAvF,EAA+F0F,SAA/F,EAA0G2C,UAA1G,EAAsHiC,WAAtH,EAAmIR,eAAnI,EAAoJG,gBAApJ,EAAsKmC,YAAtK,EAAoLW,eAApL,CAAhB;AAAsNqG,IAAAA,OAAO,EAAE,CAACnpB,iBAAD,EAAoBmD,SAApB,EAA+BiE,YAA/B,EAA6CuC,YAA7C,EAA2D2D,aAA3D,EAA0EuC,WAA1E,EAAuFkG,MAAvF,EAA+F0F,SAA/F,EAA0G2C,UAA1G,EAAsHiC,WAAtH,EAAmIR,eAAnI,EAAoJG,gBAApJ,EAAsKmC,YAAtK,EAAoLW,eAApL;AAA/N,GAAzC,CAAnD;AAAqgB,CAAphB,I,CAEA;;AAEA;AACA;AACA;;;AAEA,SAAS9iB,iBAAT,EAA4BmD,SAA5B,EAAuCglB,aAAvC,EAAsD/gB,YAAtD,EAAoEuC,YAApE,EAAkF8Z,WAAlF,EAA+FnW,aAA/F,EAA8GuC,WAA9G,EAA2HkG,MAA3H,EAAmI0F,SAAnI,EAA8I2C,UAA9I,EAA0JiC,WAA1J,EAAuKR,eAAvK,EAAwLG,gBAAxL,EAA0MmC,YAA1M,EAAwNW,eAAxN,EAAyO1hB,aAAzO,EAAwP8hB,eAAxP,EAAyQrd,gBAAzQ,EAA2R2C,iBAA3R,EAA8S+a,oBAA9S,EAAoUC,cAApU,EAAoVvoB,oBAApV,EAA0W+pB,wBAA1W,EAAoY7Y,iBAApY,EAAuZiD,eAAvZ,EAAwa6V,oBAAxa,EAA8b7lB,YAA9b,EAA4c8lB,iBAA5c,EAA+d/B,SAA/d,EAA0ezoB,aAA1e,EAAyfgQ,aAAzf,EAAwgBsd,iBAAxgB,EAA2hBrW,cAA3hB,EAA2iBuB,eAA3iB,EAA4jBgC,gBAA5jB,EAA8kBmO,iBAA9kB,EAAimBC,gBAAjmB,EAAmnB7a,gBAAgB,IAAI6gB,EAAvoB,EAA2oBpB,cAAc,IAAIqB,EAA7pB,EAAiqB5E,SAAS,IAAI6E,EAA9qB,EAAkrB3E,WAAW,IAAI4E,EAAjsB,EAAqsB1E,yBAAyB,IAAI2E,EAAluB,G,CAEA","sourcesContent":["import { __decorate, __metadata, __param, __awaiter } from 'tslib';\nimport { Injectable, NgZone, Input, Directive, EventEmitter, Output, Self, ElementRef, Component, Inject, PLATFORM_ID, QueryList, ContentChildren, forwardRef, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Optional, LOCALE_ID, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject, from, timer, Subject, fromEventPattern, merge, ReplaySubject, bindCallback, of, throwError } from 'rxjs';\nimport { flatMap, sample, switchMap, map, shareReplay, distinctUntilChanged, takeUntil, startWith, skip, multicast } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\"];\nlet MapsAPILoader = class MapsAPILoader {\n};\nMapsAPILoader.ɵfac = function MapsAPILoader_Factory(t) { return new (t || MapsAPILoader)(); };\nMapsAPILoader.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MapsAPILoader, factory: function (t) { return MapsAPILoader.ɵfac(t); } });\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nlet GoogleMapsAPIWrapper = class GoogleMapsAPIWrapper {\n    constructor(_loader, _zone) {\n        this._loader = _loader;\n        this._zone = _zone;\n        this._map =\n            new Promise((resolve) => { this._mapResolver = resolve; });\n    }\n    createMap(el, mapOptions) {\n        return this._zone.runOutsideAngular(() => {\n            return this._loader.load().then(() => {\n                const map = new google.maps.Map(el, mapOptions);\n                this._mapResolver(map);\n                return;\n            });\n        });\n    }\n    setMapOptions(options) {\n        return this._zone.runOutsideAngular(() => {\n            this._map.then((m) => { m.setOptions(options); });\n        });\n    }\n    /**\n     * Creates a google map marker with the map context\n     */\n    createMarker(options = {}, addToMap = true) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                if (addToMap) {\n                    options.map = map;\n                }\n                return new google.maps.Marker(options);\n            });\n        });\n    }\n    createInfoWindow(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then(() => { return new google.maps.InfoWindow(options); });\n        });\n    }\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n    createCircle(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                if (typeof options.strokePosition === 'string') {\n                    options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n                }\n                options.map = map;\n                return new google.maps.Circle(options);\n            });\n        });\n    }\n    /**\n     * Creates a google.map.Rectangle for the current map.\n     */\n    createRectangle(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                options.map = map;\n                return new google.maps.Rectangle(options);\n            });\n        });\n    }\n    createPolyline(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this.getNativeMap().then((map) => {\n                let line = new google.maps.Polyline(options);\n                line.setMap(map);\n                return line;\n            });\n        });\n    }\n    createPolygon(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this.getNativeMap().then((map) => {\n                let polygon = new google.maps.Polygon(options);\n                polygon.setMap(map);\n                return polygon;\n            });\n        });\n    }\n    /**\n     * Creates a new google.map.Data layer for the current map\n     */\n    createDataLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then(m => {\n                let data = new google.maps.Data(options);\n                data.setMap(m);\n                return data;\n            });\n        });\n    }\n    /**\n     * Creates a TransitLayer instance for a map\n     * @param {TransitLayerOptions} options - used for setting layer options\n     * @returns {Promise<TransitLayer>} a new transit layer object\n     */\n    createTransitLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                let newLayer = new google.maps.TransitLayer();\n                newLayer.setMap(options.visible ? map : null);\n                return newLayer;\n            });\n        });\n    }\n    /**\n     * Creates a BicyclingLayer instance for a map\n     * @param {BicyclingLayerOptions} options - used for setting layer options\n     * @returns {Promise<BicyclingLayer>} a new bicycling layer object\n     */\n    createBicyclingLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                let newLayer = new google.maps.BicyclingLayer();\n                newLayer.setMap(options.visible ? map : null);\n                return newLayer;\n            });\n        });\n    }\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n    containsLocation(latLng, polygon) {\n        return google.maps.geometry.poly.containsLocation(latLng, polygon);\n    }\n    subscribeToMapEvent(eventName) {\n        return new Observable((observer) => {\n            this._map.then((m) => {\n                m.addListener(eventName, (arg) => { this._zone.run(() => observer.next(arg)); });\n            });\n        });\n    }\n    clearInstanceListeners() {\n        return this._zone.runOutsideAngular(() => {\n            this._map.then((map) => {\n                google.maps.event.clearInstanceListeners(map);\n            });\n        });\n    }\n    setCenter(latLng) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.setCenter(latLng));\n        });\n    }\n    getZoom() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getZoom());\n        });\n    }\n    getBounds() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getBounds());\n        });\n    }\n    getMapTypeId() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getMapTypeId());\n        });\n    }\n    setZoom(zoom) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.setZoom(zoom));\n        });\n    }\n    getCenter() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getCenter());\n        });\n    }\n    panTo(latLng) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panTo(latLng));\n        });\n    }\n    panBy(x, y) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panBy(x, y));\n        });\n    }\n    fitBounds(latLng, padding) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.fitBounds(latLng, padding));\n        });\n    }\n    panToBounds(latLng, padding) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panToBounds(latLng, padding));\n        });\n    }\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n    getNativeMap() { return this._map; }\n    /**\n     * Triggers the given event name on the map instance.\n     */\n    triggerMapEvent(eventName) {\n        return this._map.then((m) => google.maps.event.trigger(m, eventName));\n    }\n};\nGoogleMapsAPIWrapper.ɵfac = function GoogleMapsAPIWrapper_Factory(t) { return new (t || GoogleMapsAPIWrapper)(ɵngcc0.ɵɵinject(MapsAPILoader), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nGoogleMapsAPIWrapper.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: GoogleMapsAPIWrapper, factory: function (t) { return GoogleMapsAPIWrapper.ɵfac(t); } });\nGoogleMapsAPIWrapper.ctorParameters = () => [\n    { type: MapsAPILoader },\n    { type: NgZone }\n];\nGoogleMapsAPIWrapper = __decorate([ __metadata(\"design:paramtypes\", [MapsAPILoader, NgZone])\n], GoogleMapsAPIWrapper);\n\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\nlet LayerManager = class LayerManager {\n    constructor(_wrapper) {\n        this._wrapper = _wrapper;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a transit layer to a map instance.\n     * @param {AgmTransitLayer} layer - a TransitLayer object\n     * @param {TransitLayerOptions} options - TransitLayerOptions options\n     * @returns void\n     */\n    addTransitLayer(layer, options) {\n        const newLayer = this._wrapper.createTransitLayer(options);\n        this._layers.set(layer, newLayer);\n    }\n    /**\n     * Adds a bicycling layer to a map instance.\n     * @param {AgmBicyclingLayer} layer - a bicycling layer object\n     * @param {BicyclingLayerOptions} options - BicyclingLayer options\n     * @returns void\n     */\n    addBicyclingLayer(layer, options) {\n        const newLayer = this._wrapper.createBicyclingLayer(options);\n        this._layers.set(layer, newLayer);\n    }\n    /**\n     * Deletes a map layer\n     * @param {AgmTransitLayer|AgmBicyclingLayer} layer - the layer to delete\n     * @returns  Promise<void>\n     */\n    deleteLayer(layer) {\n        return this._layers.get(layer).then(currentLayer => {\n            currentLayer.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    /**\n     * Hide/Show a google map layer\n     * @param { AgmTransitLayer|AgmBicyclingLayer} layer - the layer to hide/show\n     * @param {TransitLayerOptions|BicyclingLayerOptions} options - used to set visibility of the layer\n     * @returns Promise<void>\n     */\n    toggleLayerVisibility(layer, options) {\n        return this._layers.get(layer).then(currentLayer => {\n            if (!options.visible) {\n                currentLayer.setMap(null);\n                return;\n            }\n            else {\n                return this._wrapper.getNativeMap().then((map) => {\n                    currentLayer.setMap(map);\n                });\n            }\n        });\n    }\n};\nLayerManager.ɵfac = function LayerManager_Factory(t) { return new (t || LayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper)); };\nLayerManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LayerManager, factory: function (t) { return LayerManager.ɵfac(t); } });\nLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper }\n];\nLayerManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper])\n], LayerManager);\n\nlet layerId = 0;\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\nlet AgmBicyclingLayer = class AgmBicyclingLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId++).toString();\n        /**\n         * Hide/show bicycling layer\n         */\n        this.visible = true;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addBicyclingLayer(this, { visible: this.visible });\n        this._addedToManager = true;\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, { visible: changes['visible'].currentValue });\n        }\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmBicyclingLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n};\nAgmBicyclingLayer.ɵfac = function AgmBicyclingLayer_Factory(t) { return new (t || AgmBicyclingLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager)); };\nAgmBicyclingLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmBicyclingLayer, selectors: [[\"agm-bicycling-layer\"]], inputs: { visible: \"visible\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmBicyclingLayer.ctorParameters = () => [\n    { type: LayerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmBicyclingLayer.prototype, \"visible\", void 0);\nAgmBicyclingLayer = __decorate([ __metadata(\"design:paramtypes\", [LayerManager])\n], AgmBicyclingLayer);\n\nlet CircleManager = class CircleManager {\n    constructor(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._circles = new Map();\n    }\n    addCircle(circle) {\n        this._circles.set(circle, this._apiWrapper.createCircle({\n            center: { lat: circle.latitude, lng: circle.longitude },\n            clickable: circle.clickable,\n            draggable: circle.draggable,\n            editable: circle.editable,\n            fillColor: circle.fillColor,\n            fillOpacity: circle.fillOpacity,\n            radius: circle.radius,\n            strokeColor: circle.strokeColor,\n            strokeOpacity: circle.strokeOpacity,\n            strokePosition: circle.strokePosition,\n            strokeWeight: circle.strokeWeight,\n            visible: circle.visible,\n            zIndex: circle.zIndex,\n        }));\n    }\n    /**\n     * Removes the given circle from the map.\n     */\n    removeCircle(circle) {\n        return this._circles.get(circle).then((c) => {\n            c.setMap(null);\n            this._circles.delete(circle);\n        });\n    }\n    setOptions(circle, options) {\n        return this._circles.get(circle).then((c) => {\n            if (typeof options.strokePosition === 'string') {\n                options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n            }\n            c.setOptions(options);\n        });\n    }\n    getBounds(circle) {\n        return this._circles.get(circle).then((c) => c.getBounds());\n    }\n    getCenter(circle) {\n        return this._circles.get(circle).then((c) => c.getCenter());\n    }\n    getRadius(circle) {\n        return this._circles.get(circle).then((c) => c.getRadius());\n    }\n    setCenter(circle) {\n        return this._circles.get(circle).then((c) => { return c.setCenter({ lat: circle.latitude, lng: circle.longitude }); });\n    }\n    setEditable(circle) {\n        return this._circles.get(circle).then((c) => { return c.setEditable(circle.editable); });\n    }\n    setDraggable(circle) {\n        return this._circles.get(circle).then((c) => { return c.setDraggable(circle.draggable); });\n    }\n    setVisible(circle) {\n        return this._circles.get(circle).then((c) => { return c.setVisible(circle.visible); });\n    }\n    setRadius(circle) {\n        return this._circles.get(circle).then((c) => { return c.setRadius(circle.radius); });\n    }\n    getNativeCircle(circle) {\n        return this._circles.get(circle);\n    }\n    createEventObservable(eventName, circle) {\n        return new Observable((observer) => {\n            let listener = null;\n            this._circles.get(circle).then((c) => {\n                listener = c.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n            return () => {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    }\n};\nCircleManager.ɵfac = function CircleManager_Factory(t) { return new (t || CircleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nCircleManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: CircleManager, factory: function (t) { return CircleManager.ɵfac(t); } });\nCircleManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nCircleManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], CircleManager);\n\nvar AgmCircle_1;\nlet AgmCircle = AgmCircle_1 = class AgmCircle {\n    constructor(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Circle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this circle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this circle by dragging the control points shown at\n         * the center and around the circumference of the circle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The radius in meters on the Earth's surface.\n         */\n        this.radius = 0;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this circle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the circle's center is changed.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the circle.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the circle.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the circle.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the circle.\n         */\n        this.mouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the circle.\n         */\n        this.mouseMove = new EventEmitter();\n        /**\n         * This event is fired on circle mouseout.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * This event is fired on circle mouseover.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the circle.\n         */\n        this.mouseUp = new EventEmitter();\n        /**\n         * This event is fired when the circle's radius is changed.\n         */\n        this.radiusChange = new EventEmitter();\n        /**\n         * This event is fired when the circle is right-clicked on.\n         */\n        this.rightClick = new EventEmitter();\n        this._circleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n        this._manager.addCircle(this);\n        this._circleAddedToManager = true;\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._circleAddedToManager) {\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._manager.setCenter(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        if (changes['radius']) {\n            this._manager.setRadius(this);\n        }\n        this._updateCircleOptionsChanges(changes);\n    }\n    _updateCircleOptionsChanges(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmCircle_1._mapOptions.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _registerEventListeners() {\n        let events = new Map();\n        events.set('center_changed', this.centerChange);\n        events.set('click', this.circleClick);\n        events.set('dblclick', this.circleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragstart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('radius_changed', this.radiusChange);\n        events.set('rightclick', this.rightClick);\n        events.forEach((eventEmitter, eventName) => {\n            this._eventSubscriptions.push(this._manager.createEventObservable(eventName, this).subscribe((value) => {\n                switch (eventName) {\n                    case 'radius_changed':\n                        this._manager.getRadius(this).then((radius) => eventEmitter.emit(radius));\n                        break;\n                    case 'center_changed':\n                        this._manager.getCenter(this).then((center) => eventEmitter.emit({ lat: center.lat(), lng: center.lng() }));\n                        break;\n                    default:\n                        eventEmitter.emit({ coords: { lat: value.latLng.lat(), lng: value.latLng.lng() } });\n                }\n            }));\n        });\n    }\n    /** @internal */\n    ngOnDestroy() {\n        this._eventSubscriptions.forEach(function (s) { s.unsubscribe(); });\n        this._eventSubscriptions = null;\n        this._manager.removeCircle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Circle.\n     */\n    getBounds() { return this._manager.getBounds(this); }\n    getCenter() { return this._manager.getCenter(this); }\n};\nAgmCircle.ɵfac = function AgmCircle_Factory(t) { return new (t || AgmCircle)(ɵngcc0.ɵɵdirectiveInject(CircleManager)); };\nAgmCircle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmCircle, selectors: [[\"agm-circle\"]], inputs: { clickable: \"clickable\", draggable: [\"circleDraggable\", \"draggable\"], editable: \"editable\", radius: \"radius\", strokePosition: \"strokePosition\", strokeWeight: \"strokeWeight\", visible: \"visible\", latitude: \"latitude\", longitude: \"longitude\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", zIndex: \"zIndex\" }, outputs: { centerChange: \"centerChange\", circleClick: \"circleClick\", circleDblClick: \"circleDblClick\", drag: \"drag\", dragEnd: \"dragEnd\", dragStart: \"dragStart\", mouseDown: \"mouseDown\", mouseMove: \"mouseMove\", mouseOut: \"mouseOut\", mouseOver: \"mouseOver\", mouseUp: \"mouseUp\", radiusChange: \"radiusChange\", rightClick: \"rightClick\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmCircle._mapOptions = [\n    'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n    'visible', 'zIndex', 'clickable',\n];\nAgmCircle.ctorParameters = () => [\n    { type: CircleManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"clickable\", void 0);\n__decorate([\n    Input('circleDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmCircle.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"radius\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmCircle.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmCircle.prototype, \"strokePosition\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"centerChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"circleClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"circleDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"drag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"dragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"dragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"radiusChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"rightClick\", void 0);\nAgmCircle = AgmCircle_1 = __decorate([ __metadata(\"design:paramtypes\", [CircleManager])\n], AgmCircle);\n\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nlet DataLayerManager = class DataLayerManager {\n    constructor(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new Data Layer to the map.\n     */\n    addDataLayer(layer) {\n        const newLayer = this._wrapper.createDataLayer({\n            style: layer.style,\n        })\n            .then(d => {\n            if (layer.geoJson) {\n                this.getDataFeatures(d, layer.geoJson).then(features => d.features = features);\n            }\n            return d;\n        });\n        this._layers.set(layer, newLayer);\n    }\n    deleteDataLayer(layer) {\n        this._layers.get(layer).then(l => {\n            l.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    updateGeoJson(layer, geoJson) {\n        this._layers.get(layer).then(l => {\n            l.forEach(function (feature) {\n                l.remove(feature);\n                var index = l.features.indexOf(feature, 0);\n                if (index > -1) {\n                    l.features.splice(index, 1);\n                }\n            });\n            this.getDataFeatures(l, geoJson).then(features => l.features = features);\n        });\n    }\n    setDataOptions(layer, options) {\n        this._layers.get(layer).then(l => {\n            l.setControlPosition(options.controlPosition);\n            l.setControls(options.controls);\n            l.setDrawingMode(options.drawingMode);\n            l.setStyle(options.style);\n        });\n    }\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n        return new Observable((observer) => {\n            this._layers.get(layer).then((d) => {\n                d.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    /**\n     * Extract features from a geoJson using google.maps Data Class\n     * @param d : google.maps.Data class instance\n     * @param geoJson : url or geojson object\n     */\n    getDataFeatures(d, geoJson) {\n        return new Promise((resolve, reject) => {\n            if (typeof geoJson === 'object') {\n                try {\n                    const features = d.addGeoJson(geoJson);\n                    resolve(features);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            else if (typeof geoJson === 'string') {\n                d.loadGeoJson(geoJson, null, resolve);\n            }\n            else {\n                reject(`Impossible to extract features from geoJson: wrong argument type`);\n            }\n        });\n    }\n};\nDataLayerManager.ɵfac = function DataLayerManager_Factory(t) { return new (t || DataLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nDataLayerManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DataLayerManager, factory: function (t) { return DataLayerManager.ɵfac(t); } });\nDataLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nDataLayerManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], DataLayerManager);\n\nvar AgmDataLayer_1;\nlet layerId$1 = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\nlet AgmDataLayer = AgmDataLayer_1 = class AgmDataLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$1++).toString();\n        this._subscriptions = [];\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * The geoJson to be displayed\n         */\n        this.geoJson = null;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addDataLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const listeners = [\n            { name: 'click', handler: (ev) => this.layerClick.emit(ev) },\n        ];\n        listeners.forEach((obj) => {\n            const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmDataLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteDataLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(s => s.unsubscribe());\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        var geoJsonChange = changes['geoJson'];\n        if (geoJsonChange) {\n            this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n        }\n        let dataOptions = {};\n        AgmDataLayer_1._dataOptionsAttributes.forEach(k => dataOptions[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : this[k]);\n        this._manager.setDataOptions(this, dataOptions);\n    }\n};\nAgmDataLayer.ɵfac = function AgmDataLayer_Factory(t) { return new (t || AgmDataLayer)(ɵngcc0.ɵɵdirectiveInject(DataLayerManager)); };\nAgmDataLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmDataLayer, selectors: [[\"agm-data-layer\"]], inputs: { geoJson: \"geoJson\", style: \"style\" }, outputs: { layerClick: \"layerClick\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmDataLayer._dataOptionsAttributes = ['style'];\nAgmDataLayer.ctorParameters = () => [\n    { type: DataLayerManager }\n];\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmDataLayer.prototype, \"layerClick\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmDataLayer.prototype, \"geoJson\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Function)\n], AgmDataLayer.prototype, \"style\", void 0);\nAgmDataLayer = AgmDataLayer_1 = __decorate([ __metadata(\"design:paramtypes\", [DataLayerManager])\n], AgmDataLayer);\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nclass FitBoundsAccessor {\n}\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\nlet FitBoundsService = class FitBoundsService {\n    constructor(loader) {\n        this._boundsChangeSampleTime$ = new BehaviorSubject(200);\n        this._includeInBounds$ = new BehaviorSubject(new Map());\n        this.bounds$ = from(loader.load()).pipe(flatMap(() => this._includeInBounds$), sample(this._boundsChangeSampleTime$.pipe(switchMap(time => timer(0, time)))), map(includeInBounds => this._generateBounds(includeInBounds)), shareReplay(1));\n    }\n    _generateBounds(includeInBounds) {\n        const bounds = new google.maps.LatLngBounds();\n        includeInBounds.forEach(b => bounds.extend(b));\n        return bounds;\n    }\n    addToBounds(latLng) {\n        const id = this._createIdentifier(latLng);\n        if (this._includeInBounds$.value.has(id)) {\n            return;\n        }\n        const map = this._includeInBounds$.value;\n        map.set(id, latLng);\n        this._includeInBounds$.next(map);\n    }\n    removeFromBounds(latLng) {\n        const map = this._includeInBounds$.value;\n        map.delete(this._createIdentifier(latLng));\n        this._includeInBounds$.next(map);\n    }\n    changeFitBoundsChangeSampleTime(timeMs) {\n        this._boundsChangeSampleTime$.next(timeMs);\n    }\n    getBounds$() {\n        return this.bounds$;\n    }\n    _createIdentifier(latLng) {\n        return `${latLng.lat}+${latLng.lng}`;\n    }\n};\nFitBoundsService.ɵfac = function FitBoundsService_Factory(t) { return new (t || FitBoundsService)(ɵngcc0.ɵɵinject(MapsAPILoader)); };\nFitBoundsService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: FitBoundsService, factory: function (t) { return FitBoundsService.ɵfac(t); } });\nFitBoundsService.ctorParameters = () => [\n    { type: MapsAPILoader }\n];\nFitBoundsService = __decorate([ __metadata(\"design:paramtypes\", [MapsAPILoader])\n], FitBoundsService);\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\nlet AgmFitBounds = class AgmFitBounds {\n    constructor(_fitBoundsAccessor, _fitBoundsService) {\n        this._fitBoundsAccessor = _fitBoundsAccessor;\n        this._fitBoundsService = _fitBoundsService;\n        /**\n         * If the value is true, the element gets added to the bounds of the map.\n         * Default: true.\n         */\n        this.agmFitBounds = true;\n        this._destroyed$ = new Subject();\n        this._latestFitBoundsDetails = null;\n    }\n    /**\n     * @internal\n     */\n    ngOnChanges() {\n        this._updateBounds();\n    }\n    /**\n     * @internal\n     */\n    ngOnInit() {\n        this._fitBoundsAccessor\n            .getFitBoundsDetails$()\n            .pipe(distinctUntilChanged((x, y) => x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng), takeUntil(this._destroyed$))\n            .subscribe(details => this._updateBounds(details));\n    }\n    /*\n     Either the location changed, or visible status changed.\n     Possible state changes are\n     invisible -> visible\n     visible -> invisible\n     visible -> visible (new location)\n    */\n    _updateBounds(newFitBoundsDetails) {\n        // either visibility will change, or location, so remove the old one anyway\n        if (this._latestFitBoundsDetails) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n            // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n            // true -> false -> true, in which case we still need old value cached here\n        }\n        if (newFitBoundsDetails) {\n            this._latestFitBoundsDetails = newFitBoundsDetails;\n        }\n        if (!this._latestFitBoundsDetails) {\n            return;\n        }\n        if (this.agmFitBounds === true) {\n            this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n        }\n    }\n    /**\n     * @internal\n     */\n    ngOnDestroy() {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n        if (this._latestFitBoundsDetails !== null) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n        }\n    }\n};\nAgmFitBounds.ɵfac = function AgmFitBounds_Factory(t) { return new (t || AgmFitBounds)(ɵngcc0.ɵɵdirectiveInject(FitBoundsAccessor, 2), ɵngcc0.ɵɵdirectiveInject(FitBoundsService)); };\nAgmFitBounds.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmFitBounds, selectors: [[\"\", \"agmFitBounds\", \"\"]], inputs: { agmFitBounds: \"agmFitBounds\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmFitBounds.ctorParameters = () => [\n    { type: FitBoundsAccessor, decorators: [{ type: Self }] },\n    { type: FitBoundsService }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmFitBounds.prototype, \"agmFitBounds\", void 0);\nAgmFitBounds = __decorate([ __param(0, Self()),\n    __metadata(\"design:paramtypes\", [FitBoundsAccessor,\n        FitBoundsService])\n], AgmFitBounds);\n\nlet MarkerManager = class MarkerManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markers = new Map();\n    }\n    convertAnimation(uiAnim) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (uiAnim === null) {\n                return null;\n            }\n            else {\n                return this._mapsWrapper.getNativeMap().then(() => google.maps.Animation[uiAnim]);\n            }\n        });\n    }\n    deleteMarker(marker) {\n        const m = this._markers.get(marker);\n        if (m == null) {\n            // marker already deleted\n            return Promise.resolve();\n        }\n        return m.then((m) => {\n            return this._zone.run(() => {\n                m.setMap(null);\n                this._markers.delete(marker);\n            });\n        });\n    }\n    updateMarkerPosition(marker) {\n        return this._markers.get(marker).then((m) => m.setPosition({ lat: marker.latitude, lng: marker.longitude }));\n    }\n    updateTitle(marker) {\n        return this._markers.get(marker).then((m) => m.setTitle(marker.title));\n    }\n    updateLabel(marker) {\n        return this._markers.get(marker).then((m) => { m.setLabel(marker.label); });\n    }\n    updateDraggable(marker) {\n        return this._markers.get(marker).then((m) => m.setDraggable(marker.draggable));\n    }\n    updateIcon(marker) {\n        return this._markers.get(marker).then((m) => m.setIcon(marker.iconUrl));\n    }\n    updateOpacity(marker) {\n        return this._markers.get(marker).then((m) => m.setOpacity(marker.opacity));\n    }\n    updateVisible(marker) {\n        return this._markers.get(marker).then((m) => m.setVisible(marker.visible));\n    }\n    updateZIndex(marker) {\n        return this._markers.get(marker).then((m) => m.setZIndex(marker.zIndex));\n    }\n    updateClickable(marker) {\n        return this._markers.get(marker).then((m) => m.setClickable(marker.clickable));\n    }\n    updateAnimation(marker) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const m = yield this._markers.get(marker);\n            m.setAnimation(yield this.convertAnimation(marker.animation));\n        });\n    }\n    addMarker(marker) {\n        const markerPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            return this._mapsWrapper.createMarker({\n                position: { lat: marker.latitude, lng: marker.longitude },\n                label: marker.label,\n                draggable: marker.draggable,\n                icon: marker.iconUrl,\n                opacity: marker.opacity,\n                visible: marker.visible,\n                zIndex: marker.zIndex,\n                title: marker.title,\n                clickable: marker.clickable,\n                animation: yield this.convertAnimation(marker.animation),\n            }).then(resolve);\n        }));\n        this._markers.set(marker, markerPromise);\n    }\n    getNativeMarker(marker) {\n        return this._markers.get(marker);\n    }\n    createEventObservable(eventName, marker) {\n        return new Observable((observer) => {\n            this._markers.get(marker).then((m) => {\n                m.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n};\nMarkerManager.ɵfac = function MarkerManager_Factory(t) { return new (t || MarkerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nMarkerManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MarkerManager, factory: function (t) { return MarkerManager.ɵfac(t); } });\nMarkerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nMarkerManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], MarkerManager);\n\nlet InfoWindowManager = class InfoWindowManager {\n    constructor(_mapsWrapper, _zone, _markerManager) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markerManager = _markerManager;\n        this._infoWindows = new Map();\n    }\n    deleteInfoWindow(infoWindow) {\n        const iWindow = this._infoWindows.get(infoWindow);\n        if (iWindow == null) {\n            // info window already deleted\n            return Promise.resolve();\n        }\n        return iWindow.then((i) => {\n            return this._zone.run(() => {\n                i.close();\n                this._infoWindows.delete(infoWindow);\n            });\n        });\n    }\n    setPosition(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((i) => i.setPosition({\n            lat: infoWindow.latitude,\n            lng: infoWindow.longitude,\n        }));\n    }\n    setZIndex(infoWindow) {\n        return this._infoWindows.get(infoWindow)\n            .then((i) => i.setZIndex(infoWindow.zIndex));\n    }\n    open(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((w) => {\n            if (infoWindow.hostMarker != null) {\n                return this._markerManager.getNativeMarker(infoWindow.hostMarker).then((marker) => {\n                    return this._mapsWrapper.getNativeMap().then((map) => w.open(map, marker));\n                });\n            }\n            return this._mapsWrapper.getNativeMap().then((map) => w.open(map));\n        });\n    }\n    close(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((w) => w.close());\n    }\n    setOptions(infoWindow, options) {\n        return this._infoWindows.get(infoWindow).then((i) => i.setOptions(options));\n    }\n    addInfoWindow(infoWindow) {\n        const options = {\n            content: infoWindow.content,\n            maxWidth: infoWindow.maxWidth,\n            zIndex: infoWindow.zIndex,\n            disableAutoPan: infoWindow.disableAutoPan,\n        };\n        if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n            options.position = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n        }\n        const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n        this._infoWindows.set(infoWindow, infoWindowPromise);\n    }\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n    createEventObservable(eventName, infoWindow) {\n        return new Observable((observer) => {\n            this._infoWindows.get(infoWindow).then((i) => {\n                i.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n};\nInfoWindowManager.ɵfac = function InfoWindowManager_Factory(t) { return new (t || InfoWindowManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(MarkerManager)); };\nInfoWindowManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: InfoWindowManager, factory: function (t) { return InfoWindowManager.ɵfac(t); } });\nInfoWindowManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone },\n    { type: MarkerManager }\n];\nInfoWindowManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone,\n        MarkerManager])\n], InfoWindowManager);\n\nvar AgmInfoWindow_1;\nlet infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmInfoWindow = AgmInfoWindow_1 = class AgmInfoWindow {\n    constructor(_infoWindowManager, _el) {\n        this._infoWindowManager = _infoWindowManager;\n        this._el = _el;\n        /**\n         * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n         */\n        this.isOpen = false;\n        /**\n         * Emits an event when the info window is closed.\n         */\n        this.infoWindowClose = new EventEmitter();\n        this._infoWindowAddedToManager = false;\n        this._id = (infoWindowId++).toString();\n    }\n    ngOnInit() {\n        this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n        this._infoWindowManager.addInfoWindow(this);\n        this._infoWindowAddedToManager = true;\n        this._updateOpenState();\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._infoWindowAddedToManager) {\n            return;\n        }\n        if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n            typeof this.longitude === 'number') {\n            this._infoWindowManager.setPosition(this);\n        }\n        if (changes['zIndex']) {\n            this._infoWindowManager.setZIndex(this);\n        }\n        if (changes['isOpen']) {\n            this._updateOpenState();\n        }\n        this._setInfoWindowOptions(changes);\n    }\n    _registerEventListeners() {\n        this._infoWindowManager.createEventObservable('closeclick', this).subscribe(() => {\n            this.isOpen = false;\n            this.infoWindowClose.emit();\n        });\n    }\n    _updateOpenState() {\n        this.isOpen ? this.open() : this.close();\n    }\n    _setInfoWindowOptions(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmInfoWindow_1._infoWindowOptionsInputs.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        this._infoWindowManager.setOptions(this, options);\n    }\n    /**\n     * Opens the info window.\n     */\n    open() { return this._infoWindowManager.open(this); }\n    /**\n     * Closes the info window.\n     */\n    close() {\n        return this._infoWindowManager.close(this).then(() => { this.infoWindowClose.emit(); });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return 'AgmInfoWindow-' + this._id.toString(); }\n    /** @internal */\n    ngOnDestroy() { this._infoWindowManager.deleteInfoWindow(this); }\n};\nAgmInfoWindow.ɵfac = function AgmInfoWindow_Factory(t) { return new (t || AgmInfoWindow)(ɵngcc0.ɵɵdirectiveInject(InfoWindowManager), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nAgmInfoWindow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AgmInfoWindow, selectors: [[\"agm-info-window\"]], inputs: { isOpen: \"isOpen\", latitude: \"latitude\", longitude: \"longitude\", disableAutoPan: \"disableAutoPan\", zIndex: \"zIndex\", maxWidth: \"maxWidth\" }, outputs: { infoWindowClose: \"infoWindowClose\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"agm-info-window-content\"]], template: function AgmInfoWindow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2 });\nAgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\nAgmInfoWindow.ctorParameters = () => [\n    { type: InfoWindowManager },\n    { type: ElementRef }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmInfoWindow.prototype, \"disableAutoPan\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"zIndex\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"maxWidth\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmInfoWindow.prototype, \"isOpen\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmInfoWindow.prototype, \"infoWindowClose\", void 0);\nAgmInfoWindow = AgmInfoWindow_1 = __decorate([ __metadata(\"design:paramtypes\", [InfoWindowManager, ElementRef])\n], AgmInfoWindow);\n\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nlet KmlLayerManager = class KmlLayerManager {\n    constructor(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new KML Layer to the map.\n     */\n    addKmlLayer(layer) {\n        const newLayer = this._wrapper.getNativeMap().then(m => {\n            return new google.maps.KmlLayer({\n                clickable: layer.clickable,\n                map: m,\n                preserveViewport: layer.preserveViewport,\n                screenOverlays: layer.screenOverlays,\n                suppressInfoWindows: layer.suppressInfoWindows,\n                url: layer.url,\n                zIndex: layer.zIndex,\n            });\n        });\n        this._layers.set(layer, newLayer);\n    }\n    setOptions(layer, options) {\n        this._layers.get(layer).then(l => l.setOptions(options));\n    }\n    deleteKmlLayer(layer) {\n        this._layers.get(layer).then(l => {\n            l.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n        return new Observable((observer) => {\n            this._layers.get(layer).then((m) => {\n                m.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n};\nKmlLayerManager.ɵfac = function KmlLayerManager_Factory(t) { return new (t || KmlLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nKmlLayerManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: KmlLayerManager, factory: function (t) { return KmlLayerManager.ɵfac(t); } });\nKmlLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nKmlLayerManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], KmlLayerManager);\n\nvar AgmKmlLayer_1;\nlet layerId$2 = 0;\nlet AgmKmlLayer = AgmKmlLayer_1 = class AgmKmlLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$2++).toString();\n        this._subscriptions = [];\n        /**\n         * If true, the layer receives mouse events. Default value is true.\n         */\n        this.clickable = true;\n        /**\n         * By default, the input map is centered and zoomed to the bounding box of the contents of the\n         * layer.\n         * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n         * were never set.\n         */\n        this.preserveViewport = false;\n        /**\n         * Whether to render the screen overlays. Default true.\n         */\n        this.screenOverlays = true;\n        /**\n         * Suppress the rendering of info windows when layer features are clicked.\n         */\n        this.suppressInfoWindows = false;\n        /**\n         * The URL of the KML document to display.\n         */\n        this.url = null;\n        /**\n         * The z-index of the layer.\n         */\n        this.zIndex = null;\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * This event is fired when the KML layers default viewport has changed.\n         */\n        this.defaultViewportChange = new EventEmitter();\n        /**\n         * This event is fired when the KML layer has finished loading.\n         * At this point it is safe to read the status property to determine if the layer loaded\n         * successfully.\n         */\n        this.statusChange = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addKmlLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        this._updatePolygonOptions(changes);\n    }\n    _updatePolygonOptions(changes) {\n        const options = Object.keys(changes)\n            .filter(k => AgmKmlLayer_1._kmlLayerOptions.indexOf(k) !== -1)\n            .reduce((obj, k) => {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n        if (Object.keys(options).length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _addEventListeners() {\n        const listeners = [\n            { name: 'click', handler: (ev) => this.layerClick.emit(ev) },\n            { name: 'defaultviewport_changed', handler: () => this.defaultViewportChange.emit() },\n            { name: 'status_changed', handler: () => this.statusChange.emit() },\n        ];\n        listeners.forEach((obj) => {\n            const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmKmlLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteKmlLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(s => s.unsubscribe());\n    }\n};\nAgmKmlLayer.ɵfac = function AgmKmlLayer_Factory(t) { return new (t || AgmKmlLayer)(ɵngcc0.ɵɵdirectiveInject(KmlLayerManager)); };\nAgmKmlLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmKmlLayer, selectors: [[\"agm-kml-layer\"]], inputs: { clickable: \"clickable\", preserveViewport: \"preserveViewport\", screenOverlays: \"screenOverlays\", suppressInfoWindows: \"suppressInfoWindows\", url: \"url\", zIndex: \"zIndex\" }, outputs: { layerClick: \"layerClick\", defaultViewportChange: \"defaultViewportChange\", statusChange: \"statusChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\nAgmKmlLayer.ctorParameters = () => [\n    { type: KmlLayerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"clickable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"preserveViewport\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"screenOverlays\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"suppressInfoWindows\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmKmlLayer.prototype, \"url\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmKmlLayer.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmKmlLayer.prototype, \"layerClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmKmlLayer.prototype, \"defaultViewportChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmKmlLayer.prototype, \"statusChange\", void 0);\nAgmKmlLayer = AgmKmlLayer_1 = __decorate([ __metadata(\"design:paramtypes\", [KmlLayerManager])\n], AgmKmlLayer);\n\nfunction createMVCEventObservable(array) {\n    const eventNames = ['insert_at', 'remove_at', 'set_at'];\n    return fromEventPattern((handler) => eventNames.map(evName => array.addListener(evName, (index, previous) => handler.apply(array, [{ 'newArr': array.getArray(), evName, index, previous }]))), (_handler, evListeners) => evListeners.forEach(evListener => evListener.remove()));\n}\nclass MvcArrayMock {\n    constructor() {\n        this.vals = [];\n        this.listeners = {\n            'remove_at': [],\n            'insert_at': [],\n            'set_at': [],\n        };\n    }\n    clear() {\n        for (let i = this.vals.length - 1; i >= 0; i--) {\n            this.removeAt(i);\n        }\n    }\n    getArray() {\n        return [...this.vals];\n    }\n    getAt(i) {\n        return this.vals[i];\n    }\n    getLength() {\n        return this.vals.length;\n    }\n    insertAt(i, elem) {\n        this.vals.splice(i, 0, elem);\n        this.listeners.insert_at.map(listener => listener(i));\n    }\n    pop() {\n        const deleted = this.vals.pop();\n        this.listeners.remove_at.map(listener => listener(this.vals.length, deleted));\n        return deleted;\n    }\n    push(elem) {\n        this.vals.push(elem);\n        this.listeners.insert_at.map(listener => listener(this.vals.length - 1));\n        return this.vals.length;\n    }\n    removeAt(i) {\n        const deleted = this.vals.splice(i, 1)[0];\n        this.listeners.remove_at.map(listener => listener(i, deleted));\n        return deleted;\n    }\n    setAt(i, elem) {\n        const deleted = this.vals[i];\n        this.vals[i] = elem;\n        this.listeners.set_at.map(listener => listener(i, deleted));\n    }\n    forEach(callback) {\n        this.vals.forEach(callback);\n    }\n    addListener(eventName, handler) {\n        const listenerArr = this.listeners[eventName];\n        listenerArr.push(handler);\n        return {\n            remove: () => {\n                listenerArr.splice(listenerArr.indexOf(handler), 1);\n            },\n        };\n    }\n}\n\nlet PolygonManager = class PolygonManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polygons = new Map();\n    }\n    addPolygon(path) {\n        const polygonPromise = this._mapsWrapper.createPolygon({\n            clickable: path.clickable,\n            draggable: path.draggable,\n            editable: path.editable,\n            fillColor: path.fillColor,\n            fillOpacity: path.fillOpacity,\n            geodesic: path.geodesic,\n            paths: path.paths,\n            strokeColor: path.strokeColor,\n            strokeOpacity: path.strokeOpacity,\n            strokeWeight: path.strokeWeight,\n            visible: path.visible,\n            zIndex: path.zIndex,\n        });\n        this._polygons.set(path, polygonPromise);\n    }\n    updatePolygon(polygon) {\n        const m = this._polygons.get(polygon);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => this._zone.run(() => { l.setPaths(polygon.paths); }));\n    }\n    setPolygonOptions(path, options) {\n        return this._polygons.get(path).then((l) => { l.setOptions(options); });\n    }\n    deletePolygon(paths) {\n        const m = this._polygons.get(paths);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => {\n            return this._zone.run(() => {\n                l.setMap(null);\n                this._polygons.delete(paths);\n            });\n        });\n    }\n    getPath(polygon) {\n        return this._polygons.get(polygon)\n            .then((polygon) => polygon.getPath().getArray());\n    }\n    getPaths(polygon) {\n        return this._polygons.get(polygon)\n            .then((polygon) => polygon.getPaths().getArray().map((p) => p.getArray()));\n    }\n    createEventObservable(eventName, path) {\n        return new Observable((observer) => {\n            this._polygons.get(path).then((l) => {\n                l.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    createPathEventObservable(agmPolygon) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const polygon = yield this._polygons.get(agmPolygon);\n            const paths = polygon.getPaths();\n            const pathsChanges$ = createMVCEventObservable(paths);\n            return pathsChanges$.pipe(startWith({ newArr: paths.getArray() }), // in order to subscribe to them all\n            switchMap(parentMVEvent => merge(... // rest parameter\n            parentMVEvent.newArr.map((chMVC, index) => createMVCEventObservable(chMVC)\n                .pipe(map(chMVCEvent => ({ parentMVEvent, chMVCEvent, pathIndex: index })))))\n                .pipe(startWith({ parentMVEvent, chMVCEvent: null, pathIndex: null }))), // start the merged ob with an event signinifing change to parent\n            skip(1), // skip the manually added event\n            map(({ parentMVEvent, chMVCEvent, pathIndex }) => {\n                let retVal;\n                if (!chMVCEvent) {\n                    retVal = {\n                        newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n                        eventName: parentMVEvent.evName,\n                        index: parentMVEvent.index,\n                    };\n                    if (parentMVEvent.previous) {\n                        retVal.previous = parentMVEvent.previous.getArray();\n                    }\n                }\n                else {\n                    retVal = {\n                        newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n                        pathIndex,\n                        eventName: chMVCEvent.evName,\n                        index: chMVCEvent.index,\n                    };\n                    if (chMVCEvent.previous) {\n                        retVal.previous = chMVCEvent.previous;\n                    }\n                }\n                return retVal;\n            }));\n        });\n    }\n};\nPolygonManager.ɵfac = function PolygonManager_Factory(t) { return new (t || PolygonManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nPolygonManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PolygonManager, factory: function (t) { return PolygonManager.ɵfac(t); } });\nPolygonManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nPolygonManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], PolygonManager);\n\nvar PolylineManager_1;\nlet PolylineManager = PolylineManager_1 = class PolylineManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polylines = new Map();\n    }\n    static _convertPoints(line) {\n        const path = line._getPoints().map((point) => {\n            return { lat: point.latitude, lng: point.longitude };\n        });\n        return path;\n    }\n    static _convertPath(path) {\n        const symbolPath = google.maps.SymbolPath[path];\n        if (typeof symbolPath === 'number') {\n            return symbolPath;\n        }\n        else {\n            return path;\n        }\n    }\n    static _convertIcons(line) {\n        const icons = line._getIcons().map(agmIcon => ({\n            fixedRotation: agmIcon.fixedRotation,\n            offset: agmIcon.offset,\n            repeat: agmIcon.repeat,\n            icon: {\n                anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n                fillColor: agmIcon.fillColor,\n                fillOpacity: agmIcon.fillOpacity,\n                path: PolylineManager_1._convertPath(agmIcon.path),\n                rotation: agmIcon.rotation,\n                scale: agmIcon.scale,\n                strokeColor: agmIcon.strokeColor,\n                strokeOpacity: agmIcon.strokeOpacity,\n                strokeWeight: agmIcon.strokeWeight,\n            },\n        }));\n        // prune undefineds;\n        icons.forEach(icon => {\n            Object.entries(icon).forEach(([key, val]) => {\n                if (typeof val === 'undefined') {\n                    delete icon[key];\n                }\n            });\n            if (typeof icon.icon.anchor.x === 'undefined' ||\n                typeof icon.icon.anchor.y === 'undefined') {\n                delete icon.icon.anchor;\n            }\n        });\n        return icons;\n    }\n    addPolyline(line) {\n        const polylinePromise = this._mapsWrapper.getNativeMap()\n            .then(() => [PolylineManager_1._convertPoints(line),\n            PolylineManager_1._convertIcons(line)])\n            .then(([path, icons]) => this._mapsWrapper.createPolyline({\n            clickable: line.clickable,\n            draggable: line.draggable,\n            editable: line.editable,\n            geodesic: line.geodesic,\n            strokeColor: line.strokeColor,\n            strokeOpacity: line.strokeOpacity,\n            strokeWeight: line.strokeWeight,\n            visible: line.visible,\n            zIndex: line.zIndex,\n            path: path,\n            icons: icons,\n        }));\n        this._polylines.set(line, polylinePromise);\n    }\n    updatePolylinePoints(line) {\n        const path = PolylineManager_1._convertPoints(line);\n        const m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => { return this._zone.run(() => { l.setPath(path); }); });\n    }\n    updateIconSequences(line) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._mapsWrapper.getNativeMap();\n            const icons = PolylineManager_1._convertIcons(line);\n            const m = this._polylines.get(line);\n            if (m == null) {\n                return;\n            }\n            return m.then(l => this._zone.run(() => l.setOptions({ icons: icons })));\n        });\n    }\n    setPolylineOptions(line, options) {\n        return this._polylines.get(line).then((l) => { l.setOptions(options); });\n    }\n    deletePolyline(line) {\n        const m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => {\n            return this._zone.run(() => {\n                l.setMap(null);\n                this._polylines.delete(line);\n            });\n        });\n    }\n    getMVCPath(agmPolyline) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const polyline = yield this._polylines.get(agmPolyline);\n            return polyline.getPath();\n        });\n    }\n    getPath(agmPolyline) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.getMVCPath(agmPolyline)).getArray();\n        });\n    }\n    createEventObservable(eventName, line) {\n        return new Observable((observer) => {\n            this._polylines.get(line).then((l) => {\n                l.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    createPathEventObservable(line) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const mvcPath = yield this.getMVCPath(line);\n            return createMVCEventObservable(mvcPath);\n        });\n    }\n};\nPolylineManager.ɵfac = function PolylineManager_Factory(t) { return new (t || PolylineManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nPolylineManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PolylineManager, factory: function (t) { return PolylineManager.ɵfac(t); } });\nPolylineManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nPolylineManager = PolylineManager_1 = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], PolylineManager);\n\nlet RectangleManager = class RectangleManager {\n    constructor(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._rectangles = new Map();\n    }\n    addRectangle(rectangle) {\n        this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n            bounds: {\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            },\n            clickable: rectangle.clickable,\n            draggable: rectangle.draggable,\n            editable: rectangle.editable,\n            fillColor: rectangle.fillColor,\n            fillOpacity: rectangle.fillOpacity,\n            strokeColor: rectangle.strokeColor,\n            strokeOpacity: rectangle.strokeOpacity,\n            strokePosition: rectangle.strokePosition,\n            strokeWeight: rectangle.strokeWeight,\n            visible: rectangle.visible,\n            zIndex: rectangle.zIndex,\n        }));\n    }\n    /**\n     * Removes the given rectangle from the map.\n     */\n    removeRectangle(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            r.setMap(null);\n            this._rectangles.delete(rectangle);\n        });\n    }\n    setOptions(rectangle, options) {\n        return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\n    }\n    getBounds(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => r.getBounds());\n    }\n    setBounds(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setBounds({\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            });\n        });\n    }\n    setEditable(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setEditable(rectangle.editable);\n        });\n    }\n    setDraggable(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setDraggable(rectangle.draggable);\n        });\n    }\n    setVisible(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setVisible(rectangle.visible);\n        });\n    }\n    createEventObservable(eventName, rectangle) {\n        return Observable.create((observer) => {\n            let listener = null;\n            this._rectangles.get(rectangle).then((r) => {\n                listener = r.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n            return () => {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    }\n};\nRectangleManager.ɵfac = function RectangleManager_Factory(t) { return new (t || RectangleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nRectangleManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: RectangleManager, factory: function (t) { return RectangleManager.ɵfac(t); } });\nRectangleManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nRectangleManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], RectangleManager);\n\nvar AgmMap_1;\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmMap = AgmMap_1 = class AgmMap {\n    constructor(_elem, _mapsWrapper, _platformId, _fitBoundsService, _zone) {\n        this._elem = _elem;\n        this._mapsWrapper = _mapsWrapper;\n        this._platformId = _platformId;\n        this._fitBoundsService = _fitBoundsService;\n        this._zone = _zone;\n        /**\n         * The longitude that defines the center of the map.\n         */\n        this.longitude = 0;\n        /**\n         * The latitude that defines the center of the map.\n         */\n        this.latitude = 0;\n        /**\n         * The zoom level of the map. The default zoom level is 8.\n         */\n        this.zoom = 8;\n        /**\n         * Enables/disables if map is draggable.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = true;\n        /**\n         * Enables/disables zoom and center on double click. Enabled by default.\n         */\n        this.disableDoubleClickZoom = false;\n        /**\n         * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n         * value cannot get updated.\n         */\n        this.disableDefaultUI = false;\n        /**\n         * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n         */\n        this.scrollwheel = true;\n        /**\n         * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n         * enabled by default.\n         */\n        this.keyboardShortcuts = true;\n        /**\n         * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n         * modes, these styles will only apply to labels and geometry.\n         */\n        this.styles = [];\n        /**\n         * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n         * used to\n         * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n         */\n        this.usePanning = false;\n        /**\n         * Sets the viewport to contain the given bounds.\n         * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n         */\n        this.fitBounds = false;\n        /**\n         * The initial enabled/disabled state of the Scale control. This is disabled by default.\n         */\n        this.scaleControl = false;\n        /**\n         * The initial enabled/disabled state of the Map type control.\n         */\n        this.mapTypeControl = false;\n        /**\n         * The initial enabled/disabled state of the Pan control.\n         */\n        this.panControl = false;\n        /**\n         * The initial enabled/disabled state of the Rotate control.\n         */\n        this.rotateControl = false;\n        /**\n         * The initial enabled/disabled state of the Fullscreen control.\n         */\n        this.fullscreenControl = false;\n        /**\n         * The map mapTypeId. Defaults to 'roadmap'.\n         */\n        this.mapTypeId = 'roadmap';\n        /**\n         * When false, map icons are not clickable. A map icon represents a point of interest,\n         * also known as a POI. By default map icons are clickable.\n         */\n        this.clickableIcons = true;\n        /**\n         * A map icon represents a point of interest, also known as a POI.\n         * When map icons are clickable by default, an info window is displayed.\n         * When this property is set to false, the info window will not be shown but the click event\n         * will still fire\n         */\n        this.showDefaultInfoWindow = true;\n        /**\n         * This setting controls how gestures on the map are handled.\n         * Allowed values:\n         * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n         * - 'greedy'      (All touch gestures pan or zoom the map.)\n         * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n         * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n         */\n        this.gestureHandling = 'auto';\n        /**\n         * Controls the automatic switching behavior for the angle of incidence of\n         * the map. The only allowed values are 0 and 45. The value 0 causes the map\n         * to always use a 0° overhead view regardless of the zoom level and\n         * viewport. The value 45 causes the tilt angle to automatically switch to\n         * 45 whenever 45° imagery is available for the current zoom level and\n         * viewport, and switch back to 0 whenever 45° imagery is not available\n         * (this is the default behavior). 45° imagery is only available for\n         * satellite and hybrid map types, within some locations, and at some zoom\n         * levels. Note: getTilt returns the current tilt angle, not the value\n         * specified by this option. Because getTilt and this option refer to\n         * different things, do not bind() the tilt property; doing so may yield\n         * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n         */\n        this.tilt = 0;\n        this._observableSubscriptions = [];\n        /**\n         * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n         * marker or infoWindow).\n         */\n        this.mapClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapRightClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapDblClick = new EventEmitter();\n        /**\n         * This event emitter is fired when the map center changes.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event is fired when the viewport bounds have changed.\n         */\n        this.boundsChange = new EventEmitter();\n        /**\n         * This event is fired when the mapTypeId property changes.\n         */\n        this.mapTypeIdChange = new EventEmitter();\n        /**\n         * This event is fired when the map becomes idle after panning or zooming.\n         */\n        this.idle = new EventEmitter();\n        /**\n         * This event is fired when the zoom level has changed.\n         */\n        this.zoomChange = new EventEmitter();\n        /**\n         * This event is fired when the google map is fully initialized.\n         * You get the google.maps.Map instance as a result of this EventEmitter.\n         */\n        this.mapReady = new EventEmitter();\n        /**\n         * This event is fired when the visible tiles have finished loading.\n         */\n        this.tilesLoaded = new EventEmitter();\n    }\n    /** @internal */\n    ngOnInit() {\n        if (isPlatformServer(this._platformId)) {\n            // The code is running on the server, do nothing\n            return;\n        }\n        // todo: this should be solved with a new component and a viewChild decorator\n        const container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n        this._initMapInstance(container);\n    }\n    _initMapInstance(el) {\n        this._mapsWrapper.createMap(el, {\n            center: { lat: this.latitude || 0, lng: this.longitude || 0 },\n            zoom: this.zoom,\n            minZoom: this.minZoom,\n            maxZoom: this.maxZoom,\n            controlSize: this.controlSize,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            scrollwheel: this.scrollwheel,\n            backgroundColor: this.backgroundColor,\n            draggable: this.draggable,\n            draggableCursor: this.draggableCursor,\n            draggingCursor: this.draggingCursor,\n            keyboardShortcuts: this.keyboardShortcuts,\n            styles: this.styles,\n            zoomControl: this.zoomControl,\n            zoomControlOptions: this.zoomControlOptions,\n            streetViewControl: this.streetViewControl,\n            streetViewControlOptions: this.streetViewControlOptions,\n            scaleControl: this.scaleControl,\n            scaleControlOptions: this.scaleControlOptions,\n            mapTypeControl: this.mapTypeControl,\n            mapTypeControlOptions: this.mapTypeControlOptions,\n            panControl: this.panControl,\n            panControlOptions: this.panControlOptions,\n            rotateControl: this.rotateControl,\n            rotateControlOptions: this.rotateControlOptions,\n            fullscreenControl: this.fullscreenControl,\n            fullscreenControlOptions: this.fullscreenControlOptions,\n            mapTypeId: this.mapTypeId,\n            clickableIcons: this.clickableIcons,\n            gestureHandling: this.gestureHandling,\n            tilt: this.tilt,\n            restriction: this.restriction,\n        })\n            .then(() => this._mapsWrapper.getNativeMap())\n            .then(map => this.mapReady.emit(map));\n        // register event listeners\n        this._handleMapCenterChange();\n        this._handleMapZoomChange();\n        this._handleMapMouseEvents();\n        this._handleBoundsChange();\n        this._handleMapTypeIdChange();\n        this._handleTilesLoadedEvent();\n        this._handleIdleEvent();\n    }\n    /** @internal */\n    ngOnDestroy() {\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n        // remove all listeners from the map instance\n        this._mapsWrapper.clearInstanceListeners();\n        if (this._fitBoundsSubscription) {\n            this._fitBoundsSubscription.unsubscribe();\n        }\n    }\n    /* @internal */\n    ngOnChanges(changes) {\n        this._updateMapOptionsChanges(changes);\n        this._updatePosition(changes);\n    }\n    _updateMapOptionsChanges(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmMap_1._mapOptionsAttributes.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        this._mapsWrapper.setMapOptions(options);\n    }\n    /**\n     * Triggers a resize event on the google map instance.\n     * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n    triggerResize(recenter = true) {\n        // Note: When we would trigger the resize event and show the map in the same turn (which is a\n        // common case for triggering a resize event), then the resize event would not\n        // work (to show the map), so we trigger the event in a timeout.\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                return this._mapsWrapper.triggerMapEvent('resize').then(() => {\n                    if (recenter) {\n                        this.fitBounds != null ? this._fitBounds() : this._setCenter();\n                    }\n                    resolve();\n                });\n            });\n        });\n    }\n    _updatePosition(changes) {\n        if (changes['latitude'] == null && changes['longitude'] == null &&\n            !changes['fitBounds']) {\n            // no position update needed\n            return;\n        }\n        // we prefer fitBounds in changes\n        if ('fitBounds' in changes) {\n            this._fitBounds();\n            return;\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        this._setCenter();\n    }\n    _setCenter() {\n        let newCenter = {\n            lat: this.latitude,\n            lng: this.longitude,\n        };\n        if (this.usePanning) {\n            this._mapsWrapper.panTo(newCenter);\n        }\n        else {\n            this._mapsWrapper.setCenter(newCenter);\n        }\n    }\n    _fitBounds() {\n        switch (this.fitBounds) {\n            case true:\n                this._subscribeToFitBoundsUpdates();\n                break;\n            case false:\n                if (this._fitBoundsSubscription) {\n                    this._fitBoundsSubscription.unsubscribe();\n                }\n                break;\n            default:\n                this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n        }\n    }\n    _subscribeToFitBoundsUpdates() {\n        this._zone.runOutsideAngular(() => {\n            this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(b => {\n                this._zone.run(() => this._updateBounds(b, this.fitBoundsPadding));\n            });\n        });\n    }\n    _updateBounds(bounds, padding) {\n        if (!bounds) {\n            return;\n        }\n        if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n            const newBounds = new google.maps.LatLngBounds();\n            newBounds.union(bounds);\n            bounds = newBounds;\n        }\n        if (this.usePanning) {\n            this._mapsWrapper.panToBounds(bounds, padding);\n            return;\n        }\n        this._mapsWrapper.fitBounds(bounds, padding);\n    }\n    _isLatLngBoundsLiteral(bounds) {\n        return bounds != null && bounds.extend === undefined;\n    }\n    _handleMapCenterChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(() => {\n            this._mapsWrapper.getCenter().then((center) => {\n                this.latitude = center.lat();\n                this.longitude = center.lng();\n                this.centerChange.emit({ lat: this.latitude, lng: this.longitude });\n            });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleBoundsChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(() => {\n            this._mapsWrapper.getBounds().then((bounds) => { this.boundsChange.emit(bounds); });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapTypeIdChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(() => {\n            this._mapsWrapper.getMapTypeId().then((mapTypeId) => { this.mapTypeIdChange.emit(mapTypeId); });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapZoomChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(() => {\n            this._mapsWrapper.getZoom().then((z) => {\n                this.zoom = z;\n                this.zoomChange.emit(z);\n            });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleIdleEvent() {\n        const s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(() => { this.idle.emit(void 0); });\n        this._observableSubscriptions.push(s);\n    }\n    _handleTilesLoadedEvent() {\n        const s = this._mapsWrapper.subscribeToMapEvent('tilesloaded').subscribe(() => this.tilesLoaded.emit(void 0));\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapMouseEvents() {\n        const events = [\n            { name: 'click', emitter: this.mapClick },\n            { name: 'rightclick', emitter: this.mapRightClick },\n            { name: 'dblclick', emitter: this.mapDblClick },\n        ];\n        events.forEach((e) => {\n            const s = this._mapsWrapper.subscribeToMapEvent(e.name).subscribe((event) => {\n                let value = {\n                    coords: {\n                        lat: event.latLng.lat(),\n                        lng: event.latLng.lng(),\n                    },\n                    placeId: event.placeId,\n                };\n                // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n                if (value.placeId && !this.showDefaultInfoWindow) {\n                    event.stop();\n                }\n                e.emitter.emit(value);\n            });\n            this._observableSubscriptions.push(s);\n        });\n    }\n};\nAgmMap.ɵfac = function AgmMap_Factory(t) { return new (t || AgmMap)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(FitBoundsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nAgmMap.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AgmMap, selectors: [[\"agm-map\"]], hostVars: 2, hostBindings: function AgmMap_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"sebm-google-map-container\", true);\n    } }, inputs: { longitude: \"longitude\", latitude: \"latitude\", zoom: \"zoom\", draggable: [\"mapDraggable\", \"draggable\"], disableDoubleClickZoom: \"disableDoubleClickZoom\", disableDefaultUI: \"disableDefaultUI\", scrollwheel: \"scrollwheel\", keyboardShortcuts: \"keyboardShortcuts\", styles: \"styles\", usePanning: \"usePanning\", fitBounds: \"fitBounds\", scaleControl: \"scaleControl\", mapTypeControl: \"mapTypeControl\", panControl: \"panControl\", rotateControl: \"rotateControl\", fullscreenControl: \"fullscreenControl\", mapTypeId: \"mapTypeId\", clickableIcons: \"clickableIcons\", showDefaultInfoWindow: \"showDefaultInfoWindow\", gestureHandling: \"gestureHandling\", tilt: \"tilt\", minZoom: \"minZoom\", maxZoom: \"maxZoom\", controlSize: \"controlSize\", backgroundColor: \"backgroundColor\", draggableCursor: \"draggableCursor\", draggingCursor: \"draggingCursor\", zoomControl: \"zoomControl\", zoomControlOptions: \"zoomControlOptions\", streetViewControl: \"streetViewControl\", streetViewControlOptions: \"streetViewControlOptions\", fitBoundsPadding: \"fitBoundsPadding\", scaleControlOptions: \"scaleControlOptions\", mapTypeControlOptions: \"mapTypeControlOptions\", panControlOptions: \"panControlOptions\", rotateControlOptions: \"rotateControlOptions\", fullscreenControlOptions: \"fullscreenControlOptions\", restriction: \"restriction\" }, outputs: { mapClick: \"mapClick\", mapRightClick: \"mapRightClick\", mapDblClick: \"mapDblClick\", centerChange: \"centerChange\", boundsChange: \"boundsChange\", mapTypeIdChange: \"mapTypeIdChange\", idle: \"idle\", zoomChange: \"zoomChange\", mapReady: \"mapReady\", tilesLoaded: \"tilesLoaded\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            CircleManager,\n            DataLayerManager,\n            DataLayerManager,\n            FitBoundsService,\n            GoogleMapsAPIWrapper,\n            InfoWindowManager,\n            KmlLayerManager,\n            LayerManager,\n            MarkerManager,\n            PolygonManager,\n            PolylineManager,\n            RectangleManager,\n        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 3, vars: 0, consts: [[1, \"agm-map-container-inner\", \"sebm-google-map-container-inner\"], [1, \"agm-map-content\"]], template: function AgmMap_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".agm-map-container-inner[_ngcontent-%COMP%] {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content[_ngcontent-%COMP%] {\\n      display:none;\\n    }\"] });\n/**\n * Map option attributes that can change over time\n */\nAgmMap._mapOptionsAttributes = [\n    'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\n    'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl',\n    'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom',\n    'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions',\n    'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions',\n    'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction',\n];\nAgmMap.ctorParameters = () => [\n    { type: ElementRef },\n    { type: GoogleMapsAPIWrapper },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: FitBoundsService },\n    { type: NgZone }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"zoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMap.prototype, \"minZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMap.prototype, \"maxZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMap.prototype, \"controlSize\", void 0);\n__decorate([\n    Input('mapDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"disableDoubleClickZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"disableDefaultUI\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"scrollwheel\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"backgroundColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"draggableCursor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"draggingCursor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"keyboardShortcuts\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmMap.prototype, \"zoomControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"zoomControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array)\n], AgmMap.prototype, \"styles\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"usePanning\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmMap.prototype, \"streetViewControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"streetViewControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fitBounds\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fitBoundsPadding\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"scaleControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"scaleControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"mapTypeControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"mapTypeControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"panControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"panControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"rotateControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"rotateControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fullscreenControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fullscreenControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"mapTypeId\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"clickableIcons\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"showDefaultInfoWindow\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"gestureHandling\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"tilt\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"restriction\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"centerChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"boundsChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapTypeIdChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"idle\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"zoomChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapReady\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"tilesLoaded\", void 0);\nAgmMap = AgmMap_1 = __decorate([ __param(2, Inject(PLATFORM_ID)),\n    __metadata(\"design:paramtypes\", [ElementRef,\n        GoogleMapsAPIWrapper,\n        Object,\n        FitBoundsService,\n        NgZone])\n], AgmMap);\n\nvar AgmMarker_1;\nlet markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmMarker = AgmMarker_1 = class AgmMarker {\n    constructor(_markerManager) {\n        this._markerManager = _markerManager;\n        /**\n         * If true, the marker can be dragged. Default value is false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If true, the marker is visible\n         */\n        this.visible = true;\n        /**\n         * Whether to automatically open the child info window when the marker is clicked.\n         */\n        this.openInfoWindow = true;\n        /**\n         * The marker's opacity between 0.0 and 1.0.\n         */\n        this.opacity = 1;\n        /**\n         * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n         * front of markers with lower values. By default, markers are displayed according to their\n         * vertical position on screen, with lower markers appearing in front of markers further up the\n         * screen.\n         */\n        this.zIndex = 1;\n        /**\n         * If true, the marker can be clicked. Default value is true.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.clickable = true;\n        /**\n         * This event is fired when the marker's animation property changes.\n         *\n         * @memberof AgmMarker\n         */\n        this.animationChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the marker.\n         */\n        this.markerClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks twice on the marker.\n         */\n        this.markerDblClick = new EventEmitter();\n        /**\n         * This event is fired when the user rightclicks on the marker.\n         */\n        this.markerRightClick = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the marker.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the marker.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the marker.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user mouses over the marker.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the user mouses outside the marker.\n         */\n        this.mouseOut = new EventEmitter();\n        /** @internal */\n        this.infoWindow = new QueryList();\n        this._markerAddedToManger = false;\n        this._observableSubscriptions = [];\n        this._fitBoundsDetails$ = new ReplaySubject(1);\n        this._id = (markerId++).toString();\n    }\n    /* @internal */\n    ngAfterContentInit() {\n        this.handleInfoWindowUpdate();\n        this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n    }\n    handleInfoWindowUpdate() {\n        if (this.infoWindow.length > 1) {\n            throw new Error('Expected no more than one info window.');\n        }\n        this.infoWindow.forEach(marker => {\n            marker.hostMarker = this;\n        });\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (typeof this.latitude === 'string') {\n            this.latitude = Number(this.latitude);\n        }\n        if (typeof this.longitude === 'string') {\n            this.longitude = Number(this.longitude);\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        if (!this._markerAddedToManger) {\n            this._markerManager.addMarker(this);\n            this._updateFitBoundsDetails();\n            this._markerAddedToManger = true;\n            this._addEventListeners();\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._markerManager.updateMarkerPosition(this);\n            this._updateFitBoundsDetails();\n        }\n        if (changes['title']) {\n            this._markerManager.updateTitle(this);\n        }\n        if (changes['label']) {\n            this._markerManager.updateLabel(this);\n        }\n        if (changes['draggable']) {\n            this._markerManager.updateDraggable(this);\n        }\n        if (changes['iconUrl']) {\n            this._markerManager.updateIcon(this);\n        }\n        if (changes['opacity']) {\n            this._markerManager.updateOpacity(this);\n        }\n        if (changes['visible']) {\n            this._markerManager.updateVisible(this);\n        }\n        if (changes['zIndex']) {\n            this._markerManager.updateZIndex(this);\n        }\n        if (changes['clickable']) {\n            this._markerManager.updateClickable(this);\n        }\n        if (changes['animation']) {\n            this._markerManager.updateAnimation(this);\n        }\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n        return this._fitBoundsDetails$.asObservable();\n    }\n    _updateFitBoundsDetails() {\n        this._fitBoundsDetails$.next({ latLng: { lat: this.latitude, lng: this.longitude } });\n    }\n    _addEventListeners() {\n        const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\n            if (this.openInfoWindow) {\n                this.infoWindow.forEach(infoWindow => infoWindow.open());\n            }\n            this.markerClick.emit(this);\n        });\n        this._observableSubscriptions.push(cs);\n        const dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(() => {\n            this.markerDblClick.emit(null);\n        });\n        this._observableSubscriptions.push(dcs);\n        const rc = this._markerManager.createEventObservable('rightclick', this).subscribe(() => {\n            this.markerRightClick.emit(null);\n        });\n        this._observableSubscriptions.push(rc);\n        const ds = this._markerManager.createEventObservable('dragstart', this)\n            .subscribe((e) => {\n            this.dragStart.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(ds);\n        const d = this._markerManager.createEventObservable('drag', this)\n            .subscribe((e) => {\n            this.drag.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(d);\n        const de = this._markerManager.createEventObservable('dragend', this)\n            .subscribe((e) => {\n            this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(de);\n        const mover = this._markerManager.createEventObservable('mouseover', this)\n            .subscribe((e) => {\n            this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mover);\n        const mout = this._markerManager.createEventObservable('mouseout', this)\n            .subscribe((e) => {\n            this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mout);\n        const anChng = this._markerManager.createEventObservable('animation_changed', this)\n            .subscribe(() => {\n            this.animationChange.emit(this.animation);\n        });\n        this._observableSubscriptions.push(anChng);\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return 'AgmMarker-' + this._id.toString(); }\n    /** @internal */\n    ngOnDestroy() {\n        this._markerManager.deleteMarker(this);\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n    }\n};\nAgmMarker.ɵfac = function AgmMarker_Factory(t) { return new (t || AgmMarker)(ɵngcc0.ɵɵdirectiveInject(MarkerManager)); };\nAgmMarker.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmMarker, selectors: [[\"agm-marker\"]], contentQueries: function AgmMarker_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmInfoWindow, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.infoWindow = _t);\n    } }, inputs: { latitude: \"latitude\", longitude: \"longitude\", title: \"title\", label: \"label\", draggable: [\"markerDraggable\", \"draggable\"], iconUrl: \"iconUrl\", openInfoWindow: \"openInfoWindow\", opacity: \"opacity\", visible: \"visible\", zIndex: \"zIndex\", animation: \"animation\", clickable: [\"markerClickable\", \"clickable\"] }, outputs: { markerClick: \"markerClick\", dragStart: \"dragStart\", drag: \"drag\", dragEnd: \"dragEnd\", mouseOver: \"mouseOver\", mouseOut: \"mouseOut\", animationChange: \"animationChange\", markerDblClick: \"markerDblClick\", markerRightClick: \"markerRightClick\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmMarker_1) },\n        ]), ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmMarker.ctorParameters = () => [\n    { type: MarkerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMarker.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMarker.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarker.prototype, \"title\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"label\", void 0);\n__decorate([\n    Input('markerDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarker.prototype, \"iconUrl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"openInfoWindow\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"opacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"zIndex\", void 0);\n__decorate([\n    Input('markerClickable'),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"clickable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarker.prototype, \"animation\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"animationChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"markerClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"markerDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"markerRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"dragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"drag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"dragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"mouseOut\", void 0);\n__decorate([\n    ContentChildren(AgmInfoWindow),\n    __metadata(\"design:type\", QueryList)\n], AgmMarker.prototype, \"infoWindow\", void 0);\nAgmMarker = AgmMarker_1 = __decorate([ __metadata(\"design:paramtypes\", [MarkerManager])\n], AgmMarker);\n\nvar AgmPolygon_1;\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nlet AgmPolygon = AgmPolygon_1 = class AgmPolygon {\n    constructor(_polygonManager) {\n        this._polygonManager = _polygonManager;\n        /**\n         * Indicates whether this Polygon handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic\n         * property defines the mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control\n         * points shown at the vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will\n         * follow the curvature of the Earth. When false, edges of the polygon are\n         * rendered as straight lines in screen space. Note that the shape of a\n         * geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * The ordered sequence of coordinates that designates a closed loop.\n         * Unlike polylines, a polygon may consist of one or more paths.\n         *  As a result, the paths property may specify one or more arrays of\n         * LatLng coordinates. Paths are closed automatically; do not repeat the\n         * first vertex of the path as the last vertex. Simple polygons may be\n         * defined using a single array of LatLngs. More complex polygons may\n         * specify an array of arrays. Any simple arrays are converted into Arrays.\n         * Inserting or removing LatLngs from the Array will automatically update\n         * the polygon on the map.\n         */\n        this.paths = [];\n        /**\n         * This event is fired when the DOM click event is fired on the Polygon.\n         */\n        this.polyClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polygon.\n         */\n        this.polyDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polygon.\n         */\n        this.polyDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polygon.\n         */\n        this.polyDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polygon.\n         */\n        this.polyDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polygon.\n         */\n        this.polyMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polygon.\n         */\n        this.polyMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseout.\n         */\n        this.polyMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseover.\n         */\n        this.polyMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polygon\n         */\n        this.polyMouseUp = new EventEmitter();\n        /**\n         * This event is fired when the Polygon is right-clicked on.\n         */\n        this.polyRightClick = new EventEmitter();\n        /**\n         * This event is fired after Polygon first path changes.\n         */\n        this.polyPathsChange = new EventEmitter();\n        this._polygonAddedToManager = false;\n        this._subscriptions = [];\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (!this._polygonAddedToManager) {\n            this._init();\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this._polygonAddedToManager) {\n            this._init();\n            return;\n        }\n        this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n    }\n    _init() {\n        this._polygonManager.addPolygon(this);\n        this._polygonAddedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const handlers = [\n            { name: 'click', handler: (ev) => this.polyClick.emit(ev) },\n            { name: 'dblclick', handler: (ev) => this.polyDblClick.emit(ev) },\n            { name: 'drag', handler: (ev) => this.polyDrag.emit(ev) },\n            { name: 'dragend', handler: (ev) => this.polyDragEnd.emit(ev) },\n            { name: 'dragstart', handler: (ev) => this.polyDragStart.emit(ev) },\n            { name: 'mousedown', handler: (ev) => this.polyMouseDown.emit(ev) },\n            { name: 'mousemove', handler: (ev) => this.polyMouseMove.emit(ev) },\n            { name: 'mouseout', handler: (ev) => this.polyMouseOut.emit(ev) },\n            { name: 'mouseover', handler: (ev) => this.polyMouseOver.emit(ev) },\n            { name: 'mouseup', handler: (ev) => this.polyMouseUp.emit(ev) },\n            { name: 'rightclick', handler: (ev) => this.polyRightClick.emit(ev) },\n        ];\n        handlers.forEach((obj) => {\n            const os = this._polygonManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n        this._polygonManager.createPathEventObservable(this)\n            .then(paths$ => {\n            const os = paths$.subscribe(pathEvent => this.polyPathsChange.emit(pathEvent));\n            this._subscriptions.push(os);\n        });\n    }\n    _updatePolygonOptions(changes) {\n        return Object.keys(changes)\n            .filter(k => AgmPolygon_1._polygonOptionsAttributes.indexOf(k) !== -1)\n            .reduce((obj, k) => {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    ngOnDestroy() {\n        this._polygonManager.deletePolygon(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach((s) => s.unsubscribe());\n    }\n    getPath() {\n        return this._polygonManager.getPath(this);\n    }\n    getPaths() {\n        return this._polygonManager.getPaths(this);\n    }\n};\nAgmPolygon.ɵfac = function AgmPolygon_Factory(t) { return new (t || AgmPolygon)(ɵngcc0.ɵɵdirectiveInject(PolygonManager)); };\nAgmPolygon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmPolygon, selectors: [[\"agm-polygon\"]], inputs: { clickable: \"clickable\", draggable: [\"polyDraggable\", \"draggable\"], editable: \"editable\", geodesic: \"geodesic\", paths: \"paths\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", strokeWeight: \"strokeWeight\", visible: \"visible\", zIndex: \"zIndex\" }, outputs: { polyClick: \"polyClick\", polyDblClick: \"polyDblClick\", polyDrag: \"polyDrag\", polyDragEnd: \"polyDragEnd\", polyDragStart: \"polyDragStart\", polyMouseDown: \"polyMouseDown\", polyMouseMove: \"polyMouseMove\", polyMouseOut: \"polyMouseOut\", polyMouseOver: \"polyMouseOver\", polyMouseUp: \"polyMouseUp\", polyRightClick: \"polyRightClick\", polyPathsChange: \"polyPathsChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmPolygon._polygonOptionsAttributes = [\n    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\n    'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\n    'editable', 'visible',\n];\nAgmPolygon.ctorParameters = () => [\n    { type: PolygonManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"clickable\", void 0);\n__decorate([\n    Input('polyDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolygon.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"geodesic\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array)\n], AgmPolygon.prototype, \"paths\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolygon.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmPolygon.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDrag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"polyPathsChange\", void 0);\nAgmPolygon = AgmPolygon_1 = __decorate([ __metadata(\"design:paramtypes\", [PolygonManager])\n], AgmPolygon);\n\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n *\n * @export\n * @class AgmPolylineIcon\n */\nlet AgmPolylineIcon = class AgmPolylineIcon {\n    ngOnInit() {\n        if (this.path == null) {\n            throw new Error('Icon Sequence path is required');\n        }\n    }\n};\nAgmPolylineIcon.ɵfac = function AgmPolylineIcon_Factory(t) { return new (t || AgmPolylineIcon)(); };\nAgmPolylineIcon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmPolylineIcon, selectors: [[\"agm-icon-sequence\"]], inputs: { fixedRotation: \"fixedRotation\", offset: \"offset\", repeat: \"repeat\", anchorX: \"anchorX\", anchorY: \"anchorY\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", path: \"path\", rotation: \"rotation\", scale: \"scale\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", strokeWeight: \"strokeWeight\" } });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmPolylineIcon.prototype, \"fixedRotation\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"offset\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"repeat\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"anchorX\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"anchorY\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"path\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"rotation\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"scale\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"strokeWeight\", void 0);\n\nvar AgmPolylinePoint_1;\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\nlet AgmPolylinePoint = AgmPolylinePoint_1 = class AgmPolylinePoint {\n    constructor() {\n        /**\n         * This event emitter gets emitted when the position of the point changed.\n         */\n        this.positionChanged = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if (changes['latitude'] || changes['longitude']) {\n            const position = {\n                lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n                lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude,\n            };\n            this.positionChanged.emit(position);\n        }\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n        return this.positionChanged.pipe(startWith({ lat: this.latitude, lng: this.longitude }), map(position => ({ latLng: position })));\n    }\n};\nAgmPolylinePoint.ɵfac = function AgmPolylinePoint_Factory(t) { return new (t || AgmPolylinePoint)(); };\nAgmPolylinePoint.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmPolylinePoint, selectors: [[\"agm-polyline-point\"]], inputs: { latitude: \"latitude\", longitude: \"longitude\" }, outputs: { positionChanged: \"positionChanged\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmPolylinePoint_1) },\n        ]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylinePoint.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylinePoint.prototype, \"longitude\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolylinePoint.prototype, \"positionChanged\", void 0);\nAgmPolylinePoint = AgmPolylinePoint_1 = __decorate([ __metadata(\"design:paramtypes\", [])\n], AgmPolylinePoint);\n\nvar AgmPolyline_1;\nlet polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmPolyline = AgmPolyline_1 = class AgmPolyline {\n    constructor(_polylineManager) {\n        this._polylineManager = _polylineManager;\n        /**\n         * Indicates whether this Polyline handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic property defines the\n         * mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control points shown at the\n         * vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n         * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n         * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * Whether this polyline is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the DOM click event is fired on the Polyline.\n         */\n        this.lineClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polyline.\n         */\n        this.lineDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polyline.\n         */\n        this.lineDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polyline.\n         */\n        this.lineDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polyline.\n         */\n        this.lineDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polyline.\n         */\n        this.lineMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polyline.\n         */\n        this.lineMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseout.\n         */\n        this.lineMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseover.\n         */\n        this.lineMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polyline\n         */\n        this.lineMouseUp = new EventEmitter();\n        /**\n         * This event is fired when the Polyline is right-clicked on.\n         */\n        this.lineRightClick = new EventEmitter();\n        /**\n         * This event is fired after Polyline's path changes.\n         */\n        this.polyPathChange = new EventEmitter();\n        this._polylineAddedToManager = false;\n        this._subscriptions = [];\n        this._id = (polylineId++).toString();\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (this.points.length) {\n            this.points.forEach((point) => {\n                const s = point.positionChanged.subscribe(() => { this._polylineManager.updatePolylinePoints(this); });\n                this._subscriptions.push(s);\n            });\n        }\n        if (!this._polylineAddedToManager) {\n            this._init();\n        }\n        const pointSub = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\n        this._subscriptions.push(pointSub);\n        this._polylineManager.updatePolylinePoints(this);\n        const iconSub = this.iconSequences.changes.subscribe(() => this._polylineManager.updateIconSequences(this));\n        this._subscriptions.push(iconSub);\n    }\n    ngOnChanges(changes) {\n        if (!this._polylineAddedToManager) {\n            this._init();\n            return;\n        }\n        let options = {};\n        const optionKeys = Object.keys(changes).filter(k => AgmPolyline_1._polylineOptionsAttributes.indexOf(k) !== -1);\n        optionKeys.forEach(k => options[k] = changes[k].currentValue);\n        this._polylineManager.setPolylineOptions(this, options);\n    }\n    getPath() {\n        return this._polylineManager.getPath(this);\n    }\n    _init() {\n        this._polylineManager.addPolyline(this);\n        this._polylineAddedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const handlers = [\n            { name: 'click', handler: (ev) => this.lineClick.emit(ev) },\n            { name: 'dblclick', handler: (ev) => this.lineDblClick.emit(ev) },\n            { name: 'drag', handler: (ev) => this.lineDrag.emit(ev) },\n            { name: 'dragend', handler: (ev) => this.lineDragEnd.emit(ev) },\n            { name: 'dragstart', handler: (ev) => this.lineDragStart.emit(ev) },\n            { name: 'mousedown', handler: (ev) => this.lineMouseDown.emit(ev) },\n            { name: 'mousemove', handler: (ev) => this.lineMouseMove.emit(ev) },\n            { name: 'mouseout', handler: (ev) => this.lineMouseOut.emit(ev) },\n            { name: 'mouseover', handler: (ev) => this.lineMouseOver.emit(ev) },\n            { name: 'mouseup', handler: (ev) => this.lineMouseUp.emit(ev) },\n            { name: 'rightclick', handler: (ev) => this.lineRightClick.emit(ev) },\n        ];\n        handlers.forEach((obj) => {\n            const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n        this._polylineManager.createPathEventObservable(this).then((ob$) => {\n            const os = ob$.subscribe(pathEvent => this.polyPathChange.emit(pathEvent));\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    _getPoints() {\n        if (this.points) {\n            return this.points.toArray();\n        }\n        return [];\n    }\n    _getIcons() {\n        if (this.iconSequences) {\n            return this.iconSequences.toArray();\n        }\n        return [];\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    ngOnDestroy() {\n        this._polylineManager.deletePolyline(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach((s) => s.unsubscribe());\n    }\n};\nAgmPolyline.ɵfac = function AgmPolyline_Factory(t) { return new (t || AgmPolyline)(ɵngcc0.ɵɵdirectiveInject(PolylineManager)); };\nAgmPolyline.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmPolyline, selectors: [[\"agm-polyline\"]], contentQueries: function AgmPolyline_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylinePoint, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylineIcon, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.points = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.iconSequences = _t);\n    } }, inputs: { clickable: \"clickable\", draggable: [\"polylineDraggable\", \"draggable\"], editable: \"editable\", geodesic: \"geodesic\", visible: \"visible\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", strokeWeight: \"strokeWeight\", zIndex: \"zIndex\" }, outputs: { lineClick: \"lineClick\", lineDblClick: \"lineDblClick\", lineDrag: \"lineDrag\", lineDragEnd: \"lineDragEnd\", lineDragStart: \"lineDragStart\", lineMouseDown: \"lineMouseDown\", lineMouseMove: \"lineMouseMove\", lineMouseOut: \"lineMouseOut\", lineMouseOver: \"lineMouseOver\", lineMouseUp: \"lineMouseUp\", lineRightClick: \"lineRightClick\", polyPathChange: \"polyPathChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmPolyline._polylineOptionsAttributes = [\n    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\n    'zIndex',\n];\nAgmPolyline.ctorParameters = () => [\n    { type: PolylineManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"clickable\", void 0);\n__decorate([\n    Input('polylineDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"geodesic\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolyline.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolyline.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolyline.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolyline.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDrag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"polyPathChange\", void 0);\n__decorate([\n    ContentChildren(AgmPolylinePoint),\n    __metadata(\"design:type\", QueryList)\n], AgmPolyline.prototype, \"points\", void 0);\n__decorate([\n    ContentChildren(AgmPolylineIcon),\n    __metadata(\"design:type\", QueryList)\n], AgmPolyline.prototype, \"iconSequences\", void 0);\nAgmPolyline = AgmPolyline_1 = __decorate([ __metadata(\"design:paramtypes\", [PolylineManager])\n], AgmPolyline);\n\nvar AgmRectangle_1;\nlet AgmRectangle = AgmRectangle_1 = class AgmRectangle {\n    constructor(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Rectangle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this rectangle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this rectangle by dragging the control points shown at\n         * the center and around the circumference of the rectangle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this rectangle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the rectangle's is changed.\n         */\n        this.boundsChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the rectangle.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the rectangle.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the rectangle.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the rectangle.\n         */\n        this.mouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the rectangle.\n         */\n        this.mouseMove = new EventEmitter();\n        /**\n         * This event is fired on rectangle mouseout.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * This event is fired on rectangle mouseover.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the rectangle.\n         */\n        this.mouseUp = new EventEmitter();\n        /**\n         * This event is fired when the rectangle is right-clicked on.\n         */\n        this.rightClick = new EventEmitter();\n        this._rectangleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n        this._manager.addRectangle(this);\n        this._rectangleAddedToManager = true;\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._rectangleAddedToManager) {\n            return;\n        }\n        if (changes['north'] ||\n            changes['east'] ||\n            changes['south'] ||\n            changes['west']) {\n            this._manager.setBounds(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        this._updateRectangleOptionsChanges(changes);\n    }\n    _updateRectangleOptionsChanges(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmRectangle_1._mapOptions.indexOf(k) !== -1);\n        optionKeys.forEach(k => {\n            options[k] = changes[k].currentValue;\n        });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _registerEventListeners() {\n        let events = new Map();\n        events.set('bounds_changed', this.boundsChange);\n        events.set('click', this.rectangleClick);\n        events.set('dblclick', this.rectangleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragStart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('rightclick', this.rightClick);\n        events.forEach((eventEmitter, eventName) => {\n            this._eventSubscriptions.push(this._manager\n                .createEventObservable(eventName, this)\n                .subscribe(value => {\n                switch (eventName) {\n                    case 'bounds_changed':\n                        this._manager.getBounds(this).then(bounds => eventEmitter.emit({\n                            north: bounds.getNorthEast().lat(),\n                            east: bounds.getNorthEast().lng(),\n                            south: bounds.getSouthWest().lat(),\n                            west: bounds.getSouthWest().lng(),\n                        }));\n                        break;\n                    default:\n                        eventEmitter.emit({\n                            coords: { lat: value.latLng.lat(), lng: value.latLng.lng() },\n                        });\n                }\n            }));\n        });\n    }\n    /** @internal */\n    ngOnDestroy() {\n        this._eventSubscriptions.forEach(function (s) {\n            s.unsubscribe();\n        });\n        this._eventSubscriptions = null;\n        this._manager.removeRectangle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Rectangle.\n     */\n    getBounds() {\n        return this._manager.getBounds(this);\n    }\n};\nAgmRectangle.ɵfac = function AgmRectangle_Factory(t) { return new (t || AgmRectangle)(ɵngcc0.ɵɵdirectiveInject(RectangleManager)); };\nAgmRectangle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmRectangle, selectors: [[\"agm-rectangle\"]], inputs: { clickable: \"clickable\", draggable: [\"rectangleDraggable\", \"draggable\"], editable: \"editable\", strokePosition: \"strokePosition\", strokeWeight: \"strokeWeight\", visible: \"visible\", north: \"north\", east: \"east\", south: \"south\", west: \"west\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", zIndex: \"zIndex\" }, outputs: { boundsChange: \"boundsChange\", rectangleClick: \"rectangleClick\", rectangleDblClick: \"rectangleDblClick\", drag: \"drag\", dragEnd: \"dragEnd\", dragStart: \"dragStart\", mouseDown: \"mouseDown\", mouseMove: \"mouseMove\", mouseOut: \"mouseOut\", mouseOver: \"mouseOver\", mouseUp: \"mouseUp\", rightClick: \"rightClick\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmRectangle._mapOptions = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n];\nAgmRectangle.ctorParameters = () => [\n    { type: RectangleManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"north\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"east\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"south\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"west\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"clickable\", void 0);\n__decorate([\n    Input('rectangleDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmRectangle.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmRectangle.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmRectangle.prototype, \"strokePosition\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"boundsChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"rectangleClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"rectangleDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"drag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"dragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"dragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"rightClick\", void 0);\nAgmRectangle = AgmRectangle_1 = __decorate([ __metadata(\"design:paramtypes\", [RectangleManager])\n], AgmRectangle);\n\nlet layerId$3 = 0;\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\nlet AgmTransitLayer = class AgmTransitLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$3++).toString();\n        /**\n         * Hide/show transit layer\n         */\n        this.visible = true;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addTransitLayer(this, { visible: this.visible });\n        this._addedToManager = true;\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, { visible: changes['visible'].currentValue });\n        }\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmTransitLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n};\nAgmTransitLayer.ɵfac = function AgmTransitLayer_Factory(t) { return new (t || AgmTransitLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager)); };\nAgmTransitLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmTransitLayer, selectors: [[\"agm-transit-layer\"]], inputs: { visible: \"visible\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmTransitLayer.ctorParameters = () => [\n    { type: LayerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmTransitLayer.prototype, \"visible\", void 0);\nAgmTransitLayer = __decorate([ __metadata(\"design:paramtypes\", [LayerManager])\n], AgmTransitLayer);\n\nvar google$1;\nvar SymbolPath;\n(function (SymbolPath) {\n    SymbolPath[SymbolPath[\"BACKWARD_CLOSED_ARROW\"] = 3] = \"BACKWARD_CLOSED_ARROW\";\n    SymbolPath[SymbolPath[\"BACKWARD_OPEN_ARROW\"] = 4] = \"BACKWARD_OPEN_ARROW\";\n    SymbolPath[SymbolPath[\"CIRCLE\"] = 0] = \"CIRCLE\";\n    SymbolPath[SymbolPath[\"FORWARD_CLOSED_ARROW\"] = 1] = \"FORWARD_CLOSED_ARROW\";\n    SymbolPath[SymbolPath[\"FORWARD_OPEN_ARROW\"] = 2] = \"FORWARD_OPEN_ARROW\";\n})(SymbolPath || (SymbolPath = {}));\n/**\n * Identifiers used to specify the placement of controls on the map. Controls are\n * positioned relative to other controls in the same layout position. Controls that\n * are added first are positioned closer to the edge of the map.\n */\nvar ControlPosition;\n(function (ControlPosition) {\n    ControlPosition[ControlPosition[\"RIGHT_BOTTOM\"] = 0] = \"RIGHT_BOTTOM\";\n    ControlPosition[ControlPosition[\"TOP_LEFT\"] = 1] = \"TOP_LEFT\";\n    ControlPosition[ControlPosition[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n    ControlPosition[ControlPosition[\"TOP_RIGHT\"] = 3] = \"TOP_RIGHT\";\n    ControlPosition[ControlPosition[\"LEFT_CENTER\"] = 4] = \"LEFT_CENTER\";\n    ControlPosition[ControlPosition[\"LEFT_TOP\"] = 5] = \"LEFT_TOP\";\n    ControlPosition[ControlPosition[\"LEFT_BOTTOM\"] = 6] = \"LEFT_BOTTOM\";\n    ControlPosition[ControlPosition[\"RIGHT_TOP\"] = 7] = \"RIGHT_TOP\";\n    ControlPosition[ControlPosition[\"RIGHT_CENTER\"] = 8] = \"RIGHT_CENTER\";\n    ControlPosition[ControlPosition[\"BOTTOM_RIGHT\"] = 9] = \"BOTTOM_RIGHT\";\n    ControlPosition[ControlPosition[\"BOTTOM_LEFT\"] = 10] = \"BOTTOM_LEFT\";\n    ControlPosition[ControlPosition[\"BOTTOM_CENTER\"] = 11] = \"BOTTOM_CENTER\";\n})(ControlPosition || (ControlPosition = {}));\nvar MapTypeId;\n(function (MapTypeId) {\n    /** This map type displays a transparent layer of major streets on satellite images. */\n    MapTypeId[MapTypeId[\"HYBRID\"] = 0] = \"HYBRID\";\n    /** This map type displays a normal street map. */\n    MapTypeId[MapTypeId[\"ROADMAP\"] = 1] = \"ROADMAP\";\n    /** This map type displays satellite images. */\n    MapTypeId[MapTypeId[\"SATELLITE\"] = 2] = \"SATELLITE\";\n    /** This map type displays maps with physical features such as terrain and vegetation. */\n    MapTypeId[MapTypeId[\"TERRAIN\"] = 3] = \"TERRAIN\";\n})(MapTypeId || (MapTypeId = {}));\nvar MapTypeControlStyle;\n(function (MapTypeControlStyle) {\n    MapTypeControlStyle[MapTypeControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    MapTypeControlStyle[MapTypeControlStyle[\"DROPDOWN_MENU\"] = 2] = \"DROPDOWN_MENU\";\n    MapTypeControlStyle[MapTypeControlStyle[\"HORIZONTAL_BAR\"] = 1] = \"HORIZONTAL_BAR\";\n})(MapTypeControlStyle || (MapTypeControlStyle = {}));\nvar ScaleControlStyle;\n(function (ScaleControlStyle) {\n    ScaleControlStyle[ScaleControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(ScaleControlStyle || (ScaleControlStyle = {}));\nvar ZoomControlStyle;\n(function (ZoomControlStyle) {\n    ZoomControlStyle[ZoomControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    ZoomControlStyle[ZoomControlStyle[\"LARGE\"] = 1] = \"LARGE\";\n    ZoomControlStyle[ZoomControlStyle[\"SMALL\"] = 2] = \"SMALL\";\n})(ZoomControlStyle || (ZoomControlStyle = {}));\nvar GeocoderLocationType;\n(function (GeocoderLocationType) {\n    GeocoderLocationType[\"APPROXIMATE\"] = \"APPROXIMATE\";\n    GeocoderLocationType[\"GEOMETRIC_CENTER\"] = \"GEOMETRIC_CENTER\";\n    GeocoderLocationType[\"RANGE_INTERPOLATED\"] = \"RANGE_INTERPOLATED\";\n    GeocoderLocationType[\"ROOFTOP\"] = \"ROOFTOP\";\n})(GeocoderLocationType || (GeocoderLocationType = {}));\nvar GeocoderStatus;\n(function (GeocoderStatus) {\n    GeocoderStatus[\"ERROR\"] = \"ERROR\";\n    GeocoderStatus[\"INVALID_REQUEST\"] = \"INVALID_REQUEST\";\n    GeocoderStatus[\"OK\"] = \"OK\";\n    GeocoderStatus[\"OVER_QUERY_LIMIT\"] = \"OVER_QUERY_LIMIT\";\n    GeocoderStatus[\"REQUEST_DENIED\"] = \"REQUEST_DENIED\";\n    GeocoderStatus[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    GeocoderStatus[\"ZERO_RESULTS\"] = \"ZERO_RESULTS\";\n})(GeocoderStatus || (GeocoderStatus = {}));\n\nlet AgmGeocoder = class AgmGeocoder {\n    constructor(loader) {\n        const connectableGeocoder$ = new Observable(subscriber => {\n            loader.load().then(() => subscriber.next());\n        })\n            .pipe(map(() => this._createGeocoder()), multicast(new ReplaySubject(1)));\n        connectableGeocoder$.connect(); // ignore the subscription\n        // since we will remain subscribed till application exits\n        this.geocoder$ = connectableGeocoder$;\n    }\n    geocode(request) {\n        return this.geocoder$.pipe(switchMap((geocoder) => this._getGoogleResults(geocoder, request)));\n    }\n    _getGoogleResults(geocoder, request) {\n        const geocodeObservable = bindCallback(geocoder.geocode);\n        return geocodeObservable(request).pipe(switchMap(([results, status]) => {\n            if (status === GeocoderStatus.OK) {\n                return of(results);\n            }\n            return throwError(status);\n        }));\n    }\n    _createGeocoder() {\n        return new google.maps.Geocoder();\n    }\n};\nAgmGeocoder.ɵfac = function AgmGeocoder_Factory(t) { return new (t || AgmGeocoder)(ɵngcc0.ɵɵinject(MapsAPILoader)); };\nAgmGeocoder.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: AgmGeocoder, factory: function (t) { return AgmGeocoder.ɵfac(t); }, providedIn: 'root' });\nAgmGeocoder.ctorParameters = () => [\n    { type: MapsAPILoader }\n];\nAgmGeocoder.ngInjectableDef = ɵɵdefineInjectable({ factory: function AgmGeocoder_Factory() { return new AgmGeocoder(ɵɵinject(MapsAPILoader)); }, token: AgmGeocoder, providedIn: \"root\" });\nAgmGeocoder = __decorate([ __metadata(\"design:paramtypes\", [MapsAPILoader])\n], AgmGeocoder);\n\nclass WindowRef {\n    getNativeWindow() { return window; }\n}\nclass DocumentRef {\n    getNativeDocument() { return document; }\n}\nconst BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\n\nvar GoogleMapsScriptProtocol;\n(function (GoogleMapsScriptProtocol) {\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nconst LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\nlet LazyMapsAPILoader = class LazyMapsAPILoader extends MapsAPILoader {\n    constructor(config = null, w, d, localeId) {\n        super();\n        this.localeId = localeId;\n        this._SCRIPT_ID = 'agmGoogleMapsApiScript';\n        this.callbackName = `agmLazyMapsAPILoader`;\n        this._config = config || {};\n        this._windowRef = w;\n        this._documentRef = d;\n    }\n    load() {\n        const window = this._windowRef.getNativeWindow();\n        if (window.google && window.google.maps) {\n            // Google maps already loaded on the page.\n            return Promise.resolve();\n        }\n        if (this._scriptLoadingPromise) {\n            return this._scriptLoadingPromise;\n        }\n        // this can happen in HMR situations or Stackblitz.io editors.\n        const scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n        if (scriptOnPage) {\n            this._assignScriptLoadingPromise(scriptOnPage);\n            return this._scriptLoadingPromise;\n        }\n        const script = this._documentRef.getNativeDocument().createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        script.id = this._SCRIPT_ID;\n        script.src = this._getScriptSrc(this.callbackName);\n        this._assignScriptLoadingPromise(script);\n        this._documentRef.getNativeDocument().body.appendChild(script);\n        return this._scriptLoadingPromise;\n    }\n    _assignScriptLoadingPromise(scriptElem) {\n        this._scriptLoadingPromise = new Promise((resolve, reject) => {\n            this._windowRef.getNativeWindow()[this.callbackName] = () => {\n                resolve();\n            };\n            scriptElem.onerror = (error) => {\n                reject(error);\n            };\n        });\n    }\n    _getScriptSrc(callbackName) {\n        let protocolType = (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n        let protocol;\n        switch (protocolType) {\n            case GoogleMapsScriptProtocol.AUTO:\n                protocol = '';\n                break;\n            case GoogleMapsScriptProtocol.HTTP:\n                protocol = 'http:';\n                break;\n            case GoogleMapsScriptProtocol.HTTPS:\n                protocol = 'https:';\n                break;\n        }\n        const hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n        const queryParams = {\n            v: this._config.apiVersion || 'quarterly',\n            callback: callbackName,\n            key: this._config.apiKey,\n            client: this._config.clientId,\n            channel: this._config.channel,\n            libraries: this._config.libraries,\n            region: this._config.region,\n            language: this._config.language || this.localeId !== 'en-US' ? this.localeId : null,\n        };\n        const params = Object.keys(queryParams)\n            .filter((k) => queryParams[k] != null)\n            .filter((k) => {\n            // remove empty arrays\n            return !Array.isArray(queryParams[k]) ||\n                (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n        })\n            .map((k) => {\n            // join arrays as comma seperated strings\n            let i = queryParams[k];\n            if (Array.isArray(i)) {\n                return { key: k, value: i.join(',') };\n            }\n            return { key: k, value: queryParams[k] };\n        })\n            .map((entry) => {\n            return `${entry.key}=${entry.value}`;\n        })\n            .join('&');\n        return `${protocol}//${hostAndPath}?${params}`;\n    }\n};\nLazyMapsAPILoader.ɵfac = function LazyMapsAPILoader_Factory(t) { return new (t || LazyMapsAPILoader)(ɵngcc0.ɵɵinject(LAZY_MAPS_API_CONFIG, 8), ɵngcc0.ɵɵinject(WindowRef), ɵngcc0.ɵɵinject(DocumentRef), ɵngcc0.ɵɵinject(LOCALE_ID)); };\nLazyMapsAPILoader.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LazyMapsAPILoader, factory: function (t) { return LazyMapsAPILoader.ɵfac(t); } });\nLazyMapsAPILoader.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LAZY_MAPS_API_CONFIG,] }] },\n    { type: WindowRef },\n    { type: DocumentRef },\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nLazyMapsAPILoader = __decorate([ __param(0, Optional()), __param(0, Inject(LAZY_MAPS_API_CONFIG)),\n    __param(3, Inject(LOCALE_ID)),\n    __metadata(\"design:paramtypes\", [Object, WindowRef, DocumentRef, String])\n], LazyMapsAPILoader);\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nclass NoOpMapsAPILoader {\n    load() {\n        if (!window.google || !window.google.maps) {\n            throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n        }\n        return Promise.resolve();\n    }\n}\n\n// exported map types\n\nvar AgmCoreModule_1;\n/**\n * @internal\n */\nfunction coreDirectives() {\n    return [\n        AgmBicyclingLayer,\n        AgmCircle,\n        AgmDataLayer,\n        AgmFitBounds,\n        AgmInfoWindow,\n        AgmKmlLayer,\n        AgmMap,\n        AgmMarker,\n        AgmPolygon,\n        AgmPolyline,\n        AgmPolylineIcon,\n        AgmPolylinePoint,\n        AgmRectangle,\n        AgmTransitLayer,\n    ];\n}\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nlet AgmCoreModule = AgmCoreModule_1 = class AgmCoreModule {\n    /**\n     * Please use this method when you register the module at the root level.\n     */\n    static forRoot(lazyMapsAPILoaderConfig) {\n        return {\n            ngModule: AgmCoreModule_1,\n            providers: [\n                ...BROWSER_GLOBALS_PROVIDERS, { provide: MapsAPILoader, useClass: LazyMapsAPILoader },\n                { provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig },\n            ],\n        };\n    }\n};\nAgmCoreModule.ɵfac = function AgmCoreModule_Factory(t) { return new (t || AgmCoreModule)(); };\nAgmCoreModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AgmCoreModule });\nAgmCoreModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MapsAPILoader, [{\n        type: Injectable\n    }], null, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GoogleMapsAPIWrapper, [{\n        type: Injectable\n    }], function () { return [{ type: MapsAPILoader }, { type: ɵngcc0.NgZone }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmBicyclingLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-bicycling-layer'\n            }]\n    }], function () { return [{ type: LayerManager }]; }, { visible: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CircleManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmCircle, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-circle'\n            }]\n    }], function () { return [{ type: CircleManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['circleDraggable']\n        }], editable: [{\n            type: Input\n        }], radius: [{\n            type: Input\n        }], strokePosition: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], centerChange: [{\n            type: Output\n        }], circleClick: [{\n            type: Output\n        }], circleDblClick: [{\n            type: Output\n        }], drag: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], dragStart: [{\n            type: Output\n        }], mouseDown: [{\n            type: Output\n        }], mouseMove: [{\n            type: Output\n        }], mouseOut: [{\n            type: Output\n        }], mouseOver: [{\n            type: Output\n        }], mouseUp: [{\n            type: Output\n        }], radiusChange: [{\n            type: Output\n        }], rightClick: [{\n            type: Output\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataLayerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmDataLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-data-layer'\n            }]\n    }], function () { return [{ type: DataLayerManager }]; }, { layerClick: [{\n            type: Output\n        }], geoJson: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FitBoundsService, [{\n        type: Injectable\n    }], function () { return [{ type: MapsAPILoader }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmFitBounds, [{\n        type: Directive,\n        args: [{\n                selector: '[agmFitBounds]'\n            }]\n    }], function () { return [{ type: FitBoundsAccessor, decorators: [{\n                type: Self\n            }] }, { type: FitBoundsService }]; }, { agmFitBounds: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MarkerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InfoWindowManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }, { type: MarkerManager }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmInfoWindow, [{\n        type: Component,\n        args: [{\n                selector: 'agm-info-window',\n                template: `<div class='agm-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  `\n            }]\n    }], function () { return [{ type: InfoWindowManager }, { type: ɵngcc0.ElementRef }]; }, { isOpen: [{\n            type: Input\n        }], infoWindowClose: [{\n            type: Output\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }], disableAutoPan: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], maxWidth: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KmlLayerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmKmlLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-kml-layer'\n            }]\n    }], function () { return [{ type: KmlLayerManager }]; }, { clickable: [{\n            type: Input\n        }], preserveViewport: [{\n            type: Input\n        }], screenOverlays: [{\n            type: Input\n        }], suppressInfoWindows: [{\n            type: Input\n        }], url: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], layerClick: [{\n            type: Output\n        }], defaultViewportChange: [{\n            type: Output\n        }], statusChange: [{\n            type: Output\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PolygonManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PolylineManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RectangleManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMap, [{\n        type: Component,\n        args: [{\n                selector: 'agm-map',\n                providers: [\n                    CircleManager,\n                    DataLayerManager,\n                    DataLayerManager,\n                    FitBoundsService,\n                    GoogleMapsAPIWrapper,\n                    InfoWindowManager,\n                    KmlLayerManager,\n                    LayerManager,\n                    MarkerManager,\n                    PolygonManager,\n                    PolylineManager,\n                    RectangleManager,\n                ],\n                host: {\n                    // todo: deprecated - we will remove it with the next version\n                    '[class.sebm-google-map-container]': 'true'\n                },\n                template: `\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\n              <div class='agm-map-content'>\n                <ng-content></ng-content>\n              </div>\n  `,\n                styles: [`\n    .agm-map-container-inner {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content {\n      display:none;\n    }\n  `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: GoogleMapsAPIWrapper }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: FitBoundsService }, { type: ɵngcc0.NgZone }]; }, { longitude: [{\n            type: Input\n        }], latitude: [{\n            type: Input\n        }], zoom: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['mapDraggable']\n        }], disableDoubleClickZoom: [{\n            type: Input\n        }], disableDefaultUI: [{\n            type: Input\n        }], scrollwheel: [{\n            type: Input\n        }], keyboardShortcuts: [{\n            type: Input\n        }], styles: [{\n            type: Input\n        }], usePanning: [{\n            type: Input\n        }], fitBounds: [{\n            type: Input\n        }], scaleControl: [{\n            type: Input\n        }], mapTypeControl: [{\n            type: Input\n        }], panControl: [{\n            type: Input\n        }], rotateControl: [{\n            type: Input\n        }], fullscreenControl: [{\n            type: Input\n        }], mapTypeId: [{\n            type: Input\n        }], clickableIcons: [{\n            type: Input\n        }], showDefaultInfoWindow: [{\n            type: Input\n        }], gestureHandling: [{\n            type: Input\n        }], tilt: [{\n            type: Input\n        }], mapClick: [{\n            type: Output\n        }], mapRightClick: [{\n            type: Output\n        }], mapDblClick: [{\n            type: Output\n        }], centerChange: [{\n            type: Output\n        }], boundsChange: [{\n            type: Output\n        }], mapTypeIdChange: [{\n            type: Output\n        }], idle: [{\n            type: Output\n        }], zoomChange: [{\n            type: Output\n        }], mapReady: [{\n            type: Output\n        }], tilesLoaded: [{\n            type: Output\n        }], minZoom: [{\n            type: Input\n        }], maxZoom: [{\n            type: Input\n        }], controlSize: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], draggableCursor: [{\n            type: Input\n        }], draggingCursor: [{\n            type: Input\n        }], zoomControl: [{\n            type: Input\n        }], zoomControlOptions: [{\n            type: Input\n        }], streetViewControl: [{\n            type: Input\n        }], streetViewControlOptions: [{\n            type: Input\n        }], fitBoundsPadding: [{\n            type: Input\n        }], scaleControlOptions: [{\n            type: Input\n        }], mapTypeControlOptions: [{\n            type: Input\n        }], panControlOptions: [{\n            type: Input\n        }], rotateControlOptions: [{\n            type: Input\n        }], fullscreenControlOptions: [{\n            type: Input\n        }], restriction: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMarker, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-marker',\n                providers: [\n                    { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmMarker_1) },\n                ],\n                inputs: [\n                    'latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl',\n                    'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation',\n                ],\n                outputs: ['markerClick', 'dragStart', 'drag', 'dragEnd', 'mouseOver', 'mouseOut']\n            }]\n    }], function () { return [{ type: MarkerManager }]; }, { draggable: [{\n            type: Input,\n            args: ['markerDraggable']\n        }], visible: [{\n            type: Input\n        }], openInfoWindow: [{\n            type: Input\n        }], opacity: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], clickable: [{\n            type: Input,\n            args: ['markerClickable']\n        }], animationChange: [{\n            type: Output\n        }], markerClick: [{\n            type: Output\n        }], markerDblClick: [{\n            type: Output\n        }], markerRightClick: [{\n            type: Output\n        }], dragStart: [{\n            type: Output\n        }], drag: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], mouseOver: [{\n            type: Output\n        }], mouseOut: [{\n            type: Output\n        }], infoWindow: [{\n            type: ContentChildren,\n            args: [AgmInfoWindow]\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }], title: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], iconUrl: [{\n            type: Input\n        }], animation: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolygon, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-polygon'\n            }]\n    }], function () { return [{ type: PolygonManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['polyDraggable']\n        }], editable: [{\n            type: Input\n        }], geodesic: [{\n            type: Input\n        }], paths: [{\n            type: Input\n        }], polyClick: [{\n            type: Output\n        }], polyDblClick: [{\n            type: Output\n        }], polyDrag: [{\n            type: Output\n        }], polyDragEnd: [{\n            type: Output\n        }], polyDragStart: [{\n            type: Output\n        }], polyMouseDown: [{\n            type: Output\n        }], polyMouseMove: [{\n            type: Output\n        }], polyMouseOut: [{\n            type: Output\n        }], polyMouseOver: [{\n            type: Output\n        }], polyMouseUp: [{\n            type: Output\n        }], polyRightClick: [{\n            type: Output\n        }], polyPathsChange: [{\n            type: Output\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolylineIcon, [{\n        type: Directive,\n        args: [{ selector: 'agm-polyline agm-icon-sequence' }]\n    }], null, { fixedRotation: [{\n            type: Input\n        }], offset: [{\n            type: Input\n        }], repeat: [{\n            type: Input\n        }], anchorX: [{\n            type: Input\n        }], anchorY: [{\n            type: Input\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], path: [{\n            type: Input\n        }], rotation: [{\n            type: Input\n        }], scale: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolylinePoint, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-polyline-point',\n                providers: [\n                    { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmPolylinePoint_1) },\n                ]\n            }]\n    }], function () { return []; }, { positionChanged: [{\n            type: Output\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolyline, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-polyline'\n            }]\n    }], function () { return [{ type: PolylineManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['polylineDraggable']\n        }], editable: [{\n            type: Input\n        }], geodesic: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], lineClick: [{\n            type: Output\n        }], lineDblClick: [{\n            type: Output\n        }], lineDrag: [{\n            type: Output\n        }], lineDragEnd: [{\n            type: Output\n        }], lineDragStart: [{\n            type: Output\n        }], lineMouseDown: [{\n            type: Output\n        }], lineMouseMove: [{\n            type: Output\n        }], lineMouseOut: [{\n            type: Output\n        }], lineMouseOver: [{\n            type: Output\n        }], lineMouseUp: [{\n            type: Output\n        }], lineRightClick: [{\n            type: Output\n        }], polyPathChange: [{\n            type: Output\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], points: [{\n            type: ContentChildren,\n            args: [AgmPolylinePoint]\n        }], iconSequences: [{\n            type: ContentChildren,\n            args: [AgmPolylineIcon]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmRectangle, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-rectangle'\n            }]\n    }], function () { return [{ type: RectangleManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['rectangleDraggable']\n        }], editable: [{\n            type: Input\n        }], strokePosition: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], boundsChange: [{\n            type: Output\n        }], rectangleClick: [{\n            type: Output\n        }], rectangleDblClick: [{\n            type: Output\n        }], drag: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], dragStart: [{\n            type: Output\n        }], mouseDown: [{\n            type: Output\n        }], mouseMove: [{\n            type: Output\n        }], mouseOut: [{\n            type: Output\n        }], mouseOver: [{\n            type: Output\n        }], mouseUp: [{\n            type: Output\n        }], rightClick: [{\n            type: Output\n        }], north: [{\n            type: Input\n        }], east: [{\n            type: Input\n        }], south: [{\n            type: Input\n        }], west: [{\n            type: Input\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmTransitLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-transit-layer'\n            }]\n    }], function () { return [{ type: LayerManager }]; }, { visible: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmGeocoder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MapsAPILoader }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LazyMapsAPILoader, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LAZY_MAPS_API_CONFIG]\n            }] }, { type: WindowRef }, { type: DocumentRef }, { type: String, decorators: [{\n                type: Inject,\n                args: [LOCALE_ID]\n            }] }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmCoreModule, [{\n        type: NgModule,\n        args: [{ declarations: coreDirectives(), exports: coreDirectives() }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AgmCoreModule, { declarations: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer], exports: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer] }); })();\n\n// main modules\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgmBicyclingLayer, AgmCircle, AgmCoreModule, AgmDataLayer, AgmFitBounds, AgmGeocoder, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer, CircleManager, ControlPosition, DataLayerManager, FitBoundsAccessor, GeocoderLocationType, GeocoderStatus, GoogleMapsAPIWrapper, GoogleMapsScriptProtocol, InfoWindowManager, KmlLayerManager, LAZY_MAPS_API_CONFIG, LayerManager, LazyMapsAPILoader, MapTypeId, MapsAPILoader, MarkerManager, NoOpMapsAPILoader, PolygonManager, PolylineManager, RectangleManager, ScaleControlStyle, ZoomControlStyle, FitBoundsService as ɵa, coreDirectives as ɵb, WindowRef as ɵc, DocumentRef as ɵd, BROWSER_GLOBALS_PROVIDERS as ɵe };\n\n//# sourceMappingURL=agm-core.js.map"]},"metadata":{},"sourceType":"module"}