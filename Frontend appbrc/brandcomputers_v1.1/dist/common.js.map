{"version":3,"sources":["./src/app/services/accounting/nir.service.ts","./src/app/services/accounting/provider.service.ts","./src/environments/variables.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACqB;AACd;AAGY;;IASxD,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,iBAAY,GAAG,6EAAsB,CAAC;IAG9C,CAAC;IAED,2BAAM,GAAN;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,YAAY,aAAU,CAAC,CAAC;IAChE,CAAC;IAED,qCAAgB,GAAhB;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,YAAY,wBAAqB,CAAC,CAAC;IACpE,CAAC;IAED,wBAAG,GAAH,UAAI,GAAQ;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,YAAY,aAAU,EAAE,GAAG,EAAE,gEAAW,CAAC,CAAC;IACjF,CAAC;;gBAzBG,4DAAU;;IAQL,UAAU;QAHtB,yDAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;OACW,UAAU,CAmBtB;IAAD,iBAAC;CAAA;AAnBsB;;;;;;;;;;;;;;;;;;;;;;;;;;ACVoB;AACmB;AACd;AAEY;;IAU1D,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,iBAAY,GAAG,6EAAsB,CAAC;IAG9C,CAAC;IAED,gCAAM,GAAN;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,YAAY,mBAAgB,CAAC,CAAC;IACzE,CAAC;IAED,6BAAG,GAAH,UAAI,QAAkB;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAc,IAAI,CAAC,YAAY,mBAAgB,EAAE,QAAQ,EAAE,gEAAW,CAAC,CAAC;IAC/F,CAAC;IAED,kCAAQ,GAAR,UAAS,EAAU,EAAE,QAAkB;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,YAAY,oBAAiB,GAAG,EAAE,EAAE,QAAQ,EAAE,gEAAW,CAAC,CAAC;IACpG,CAAC;IAED,oCAAU,GAAV,UAAW,EAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAU,IAAI,CAAC,YAAY,oBAAiB,GAAG,EAAE,CAAC,CAAC;IAC5E,CAAC;;gBA7BK,4DAAU;;IAQL,eAAe;QAH3B,yDAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,eAAe,CAsB3B;IAAD,sBAAC;CAAA;AAtB2B;;;;;;;;;;;;;;;;;ACVqB;AAE1C,IAAM,WAAW,GAAG;IACvB,OAAO,EAAE,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC;CACjE,CAAC","file":"common.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Nir} from '../../model/accounting/Nir';\nimport {httpOptions} from '../../../environments/variables';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NirService {\n\n    private apiServerUrl = environment.apiBaseUrl;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAll(): Observable<Nir[]> {\n        return this.http.get<Nir[]>(`${this.apiServerUrl}/api/nir`);\n    }\n\n    getAllUnreceived(): Observable<any> {\n        return this.http.get(`${this.apiServerUrl}/api/nir/unreceived`);\n    }\n\n    add(nir: Nir): Observable<Nir> {\n        return this.http.post<Nir>(`${this.apiServerUrl}/api/nir`, nir, httpOptions);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {httpOptions} from '../../../environments/variables';\nimport {Provider} from '../../model/accounting/Provider';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProviderService {\n\n  private apiServerUrl = environment.apiBaseUrl;\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAll(): Observable<Provider[]> {\n    return this.http.get<Provider[]>(`${this.apiServerUrl}/api/providers`);\n  }\n\n  add(provider: Provider): Observable<Provider> {\n    return this.http.post<Provider>(`${this.apiServerUrl}/api/providers`, provider, httpOptions);\n  }\n\n  editById(id: number, provider: Provider): Observable<Provider> {\n    return this.http.put<Provider>(`${this.apiServerUrl}/api/providers/` + id, provider, httpOptions);\n  }\n\n  deleteById(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiServerUrl}/api/providers/` + id);\n  }\n}\n","import {HttpHeaders} from '@angular/common/http';\r\n\r\nexport const httpOptions = {\r\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n};\r\n\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}